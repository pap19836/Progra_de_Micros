%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$build/default/debug/Main.o
resVect CODE 0 0 0 3 2
code CODE 0 0 0 146 2
udata_bank0 BANK0 1 20 20 2 1
config CONFIG 4 2007 2007 2 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 22-6F 1
RAM A0-EF 1
RAM 110-16F 1
RAM 190-1EF 1
BANK0 22-6F 1
BANK1 A0-EF 1
BANK2 110-16F 1
BANK3 190-1EF 1
CONST 146-1FFF 2
ENTRY 146-1FFF 2
IDLOC 2000-2003 2
CODE 146-1FFF 2
COMMON 70-7F 1
EEDATA 2100-21FF 2
STRCODE 146-1FFF 2
STRING 146-1FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$build/default/debug/Main.o
0 resVect CODE >42:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
0 resVect CODE >43:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
0 resVect CODE >44:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
2 resVect CODE >45:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
0 code CODE >48:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
100 code CODE >50:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
100 code CODE >51:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
102 code CODE >52:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
103 code CODE >53:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
104 code CODE >55:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
106 code CODE >56:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
107 code CODE >57:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
108 code CODE >58:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
109 code CODE >59:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
10A code CODE >60:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
10B code CODE >61:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
10C code CODE >63:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
10D code CODE >64:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
10E code CODE >66:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
10F code CODE >67:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
110 code CODE >69:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
112 code CODE >70:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
113 code CODE >71:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
114 code CODE >72:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
115 code CODE >73:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
116 code CODE >75:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
117 code CODE >76:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
118 code CODE >78:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
119 code CODE >79:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
11A code CODE >84:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
11A code CODE >85:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
11B code CODE >86:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
11C code CODE >87:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
11D code CODE >88:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
11E code CODE >89:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
11F code CODE >90:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
120 code CODE >91:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
121 code CODE >92:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
122 code CODE >93:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
123 code CODE >94:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
124 code CODE >95:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
125 code CODE >99:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
125 code CODE >100:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
126 code CODE >101:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
127 code CODE >102:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
128 code CODE >103:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
129 code CODE >104:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
12A code CODE >105:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
12B code CODE >106:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
12C code CODE >108:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
12C code CODE >109:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
12D code CODE >110:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
12E code CODE >111:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
12F code CODE >112:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
130 code CODE >113:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
131 code CODE >114:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
132 code CODE >115:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
133 code CODE >117:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
133 code CODE >118:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
134 code CODE >119:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
135 code CODE >120:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
136 code CODE >121:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
137 code CODE >122:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
138 code CODE >123:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
139 code CODE >124:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
13A code CODE >126:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
13A code CODE >127:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
13B code CODE >128:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
13C code CODE >129:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
13D code CODE >130:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
13E code CODE >131:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
13F code CODE >132:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
140 code CODE >133:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
141 code CODE >135:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
141 code CODE >136:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
142 code CODE >137:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
143 code CODE >138:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
144 code CODE >139:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
145 code CODE >140:C:\Progra_de_Micros\Lab02\Lab02.X\Main.s
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__Hspace_0 146 0 ABS 0 - -
__Hspace_1 22 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Hspace_4 4010 0 ABS 0 - -
__Hudata_bank0 0 0 ABS 0 udata_bank0 -
__Hudata_bank1 0 0 ABS 0 udata_bank1 -
__Hudata_bank2 0 0 ABS 0 udata_bank2 -
__Hudata_bank3 0 0 ABS 0 udata_bank3 -
__LresVect 0 0 ABS 0 resVect -
__Hedata 0 0 ABS 0 edata -
__Hudata 0 0 ABS 0 udata -
__Hconfig 4012 0 CONFIG 4 config -
__Ledata 0 0 ABS 0 edata -
__Ludata 0 0 ABS 0 udata -
__Hcode 0 0 ABS 0 code -
__Hdata 0 0 ABS 0 data -
__Lcode 0 0 ABS 0 code -
__Ldata 0 0 ABS 0 data -
__S0 0 0 ABS 0 - -
__S1 22 0 ABS 0 - -
__S3 0 0 ABS 0 - -
__HresVect 0 0 ABS 0 resVect -
__Lconfig 0 0 CONFIG 4 config -
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__Lspace_4 0 0 ABS 0 - -
__Ludata_bank0 0 0 ABS 0 udata_bank0 -
__Ludata_bank1 0 0 ABS 0 udata_bank1 -
__Ludata_bank2 0 0 ABS 0 udata_bank2 -
__Ludata_bank3 0 0 ABS 0 udata_bank3 -
__Hudata_shr 0 0 ABS 0 udata_shr -
__Ludata_shr 0 0 ABS 0 udata_shr -
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
udata_bank0 1 20 20 2 1
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
