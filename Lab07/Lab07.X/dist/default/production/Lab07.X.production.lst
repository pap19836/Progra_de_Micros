

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 20 10:47:24 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0009                     _PORTE	set	9
   211  0008                     _PORTD	set	8
   212  0007                     _PORTC	set	7
   213  0006                     _PORTB	set	6
   214  0005                     _PORTA	set	5
   215  0001                     _TMR0	set	1
   216  000B                     _INTCONbits	set	11
   217  0058                     _RBIF	set	88
   218  002A                     _RA2	set	42
   219  0029                     _RA1	set	41
   220  0028                     _RA0	set	40
   221  005A                     _T0IF	set	90
   222  0031                     _RB1	set	49
   223  0030                     _RB0	set	48
   224  0096                     _IOCBbits	set	150
   225  0095                     _WPUBbits	set	149
   226  0081                     _OPTION_REGbits	set	129
   227  0086                     _TRISBbits	set	134
   228  0089                     _TRISE	set	137
   229  0088                     _TRISD	set	136
   230  0087                     _TRISC	set	135
   231  0086                     _TRISB	set	134
   232  0085                     _TRISA	set	133
   233  0189                     _ANSELH	set	393
   234  0188                     _ANSEL	set	392
   235                           
   236                           	psect	cinit
   237  0011                     start_initialization:	
   238                           ; #config settings
   239                           
   240  0011                     __initialization:
   241                           
   242                           ; Clear objects allocated to BANK0
   243  0011  1283               	bcf	3,5	;RP0=0, select bank0
   244  0012  1303               	bcf	3,6	;RP1=0, select bank0
   245  0013  01B4               	clrf	__pbssBANK0& (0+127)
   246  0014  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   247  0015  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   248  0016  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   249  0017  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   250  0018  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   251  0019  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   252  001A  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   253  001B  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   254  001C  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   255  001D  01BE               	clrf	(__pbssBANK0+10)& (0+127)
   256  001E  01BF               	clrf	(__pbssBANK0+11)& (0+127)
   257  001F  01C0               	clrf	(__pbssBANK0+12)& (0+127)
   258  0020                     end_of_initialization:	
   259                           ;End of C runtime variable initialization code
   260                           
   261  0020                     __end_of__initialization:
   262  0020  0183               	clrf	3
   263  0021  120A  118A  29D7   	ljmp	_main	;jump to C main() function
   264                           
   265                           	psect	bssBANK0
   266  0034                     __pbssBANK0:
   267  0034                     _display:
   268  0034                     	ds	10
   269  003E                     _unidad:
   270  003E                     	ds	1
   271  003F                     _decena:
   272  003F                     	ds	1
   273  0040                     _centena:
   274  0040                     	ds	1
   275                           
   276                           	psect	cstackCOMMON
   277  0070                     __pcstackCOMMON:
   278  0070                     ?_setup:
   279  0070                     ?_main:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_reset_timer0:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ??_reset_timer0:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_isr:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ??_isr:	
   292                           ; 1 bytes @ 0x0
   293                           
   294                           
   295                           ; 1 bytes @ 0x0
   296  0070                     	ds	5
   297  0075                     ??_setup:
   298  0075                     ?___bmul:	
   299                           ; 1 bytes @ 0x5
   300                           
   301  0075                     ?___wmul:	
   302                           ; 1 bytes @ 0x5
   303                           
   304  0075                     ___bmul@multiplicand:	
   305                           ; 2 bytes @ 0x5
   306                           
   307  0075                     ___wmul@multiplier:	
   308                           ; 1 bytes @ 0x5
   309                           
   310                           
   311                           ; 2 bytes @ 0x5
   312  0075                     	ds	1
   313  0076                     ??___bmul:
   314                           
   315                           ; 1 bytes @ 0x6
   316  0076                     	ds	1
   317  0077                     ___bmul@product:
   318  0077                     ___wmul@multiplicand:	
   319                           ; 1 bytes @ 0x7
   320                           
   321                           
   322                           ; 2 bytes @ 0x7
   323  0077                     	ds	1
   324  0078                     ___bmul@multiplier:
   325                           
   326                           ; 1 bytes @ 0x8
   327  0078                     	ds	1
   328  0079                     ??___wmul:
   329                           
   330                           	psect	cstackBANK0
   331  0020                     __pcstackBANK0:	
   332                           ; 1 bytes @ 0x9
   333                           
   334  0020                     ___wmul@product:
   335                           
   336                           ; 2 bytes @ 0x0
   337  0020                     	ds	2
   338  0022                     ?___awdiv:
   339  0022                     ___awdiv@divisor:	
   340                           ; 2 bytes @ 0x2
   341                           
   342                           
   343                           ; 2 bytes @ 0x2
   344  0022                     	ds	2
   345  0024                     ___awdiv@dividend:
   346                           
   347                           ; 2 bytes @ 0x4
   348  0024                     	ds	2
   349  0026                     ??___awdiv:
   350                           
   351                           ; 1 bytes @ 0x6
   352  0026                     	ds	1
   353  0027                     ___awdiv@counter:
   354                           
   355                           ; 1 bytes @ 0x7
   356  0027                     	ds	1
   357  0028                     ___awdiv@sign:
   358                           
   359                           ; 1 bytes @ 0x8
   360  0028                     	ds	1
   361  0029                     ___awdiv@quotient:
   362                           
   363                           ; 2 bytes @ 0x9
   364  0029                     	ds	2
   365  002B                     ?_divide:
   366  002B                     divide@b:	
   367                           ; 1 bytes @ 0xB
   368                           
   369                           
   370                           ; 1 bytes @ 0xB
   371  002B                     	ds	1
   372  002C                     divide@c:
   373                           
   374                           ; 1 bytes @ 0xC
   375  002C                     	ds	1
   376  002D                     ??_divide:
   377                           
   378                           ; 1 bytes @ 0xD
   379  002D                     	ds	4
   380  0031                     divide@a:
   381                           
   382                           ; 1 bytes @ 0x11
   383  0031                     	ds	1
   384  0032                     ??_main:
   385                           
   386                           ; 1 bytes @ 0x12
   387  0032                     	ds	2
   388                           
   389                           	psect	maintext
   390  01D7                     __pmaintext:	
   391 ;;
   392 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   393 ;;
   394 ;; *************** function _main *****************
   395 ;; Defined at:
   396 ;;		line 54 in file "Main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : B00/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   410 ;;      Params:         0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0
   412 ;;      Temps:          0       2       0       0       0
   413 ;;      Totals:         0       2       0       0       0
   414 ;;Total ram usage:        2 bytes
   415 ;; Hardware stack levels required when called: 4
   416 ;; This function calls:
   417 ;;		_divide
   418 ;;		_setup
   419 ;; This function is called by:
   420 ;;		Startup code after reset
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function _main
   426  01D7                     _main:
   427  01D7                     l1087:	
   428                           ;incstack = 0
   429                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   430                           
   431                           
   432                           ;Main.c: 55:     setup();
   433  01D7  120A  118A  2154  120A  118A  	fcall	_setup
   434  01DC                     l1089:
   435                           
   436                           ;Main.c: 57:         divide(&centena, &decena, &unidad);
   437  01DC  303F               	movlw	(low (_decena| 0))& (0+255)
   438  01DD  1283               	bcf	3,5	;RP0=0, select bank0
   439  01DE  1303               	bcf	3,6	;RP1=0, select bank0
   440  01DF  00B2               	movwf	??_main
   441  01E0  0832               	movf	??_main,w
   442  01E1  00AB               	movwf	divide@b
   443  01E2  303E               	movlw	(low (_unidad| 0))& (0+255)
   444  01E3  00B3               	movwf	??_main+1
   445  01E4  0833               	movf	??_main+1,w
   446  01E5  00AC               	movwf	divide@c
   447  01E6  3040               	movlw	(low (_centena| 0))& (0+255)
   448  01E7  120A  118A  2024  120A  118A  	fcall	_divide
   449  01EC  29DC               	goto	l1089
   450  01ED  120A  118A  280E   	ljmp	start
   451  01F0                     __end_of_main:
   452                           
   453                           	psect	text1
   454  0154                     __ptext1:	
   455 ;; *************** function _setup *****************
   456 ;; Defined at:
   457 ;;		line 64 in file "Main.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;		None
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      void 
   464 ;; Registers used:
   465 ;;		wreg, status,2, status,0
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   471 ;;      Params:         0       0       0       0       0
   472 ;;      Locals:         0       0       0       0       0
   473 ;;      Temps:          1       0       0       0       0
   474 ;;      Totals:         1       0       0       0       0
   475 ;;Total ram usage:        1 bytes
   476 ;; Hardware stack levels used: 1
   477 ;; Hardware stack levels required when called: 2
   478 ;; This function calls:
   479 ;;		Nothing
   480 ;; This function is called by:
   481 ;;		_main
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           
   486                           ;psect for function _setup
   487  0154                     _setup:
   488  0154                     l997:	
   489                           ;incstack = 0
   490                           ; Regs used in _setup: [wreg+status,2+status,0]
   491                           
   492                           
   493                           ;Main.c: 66:     ANSEL = 0;
   494  0154  1683               	bsf	3,5	;RP0=1, select bank3
   495  0155  1703               	bsf	3,6	;RP1=1, select bank3
   496  0156  0188               	clrf	8	;volatile
   497                           
   498                           ;Main.c: 67:     ANSELH = 0;
   499  0157  0189               	clrf	9	;volatile
   500                           
   501                           ;Main.c: 68:     TRISA = 0;
   502  0158  1683               	bsf	3,5	;RP0=1, select bank1
   503  0159  1303               	bcf	3,6	;RP1=0, select bank1
   504  015A  0185               	clrf	5	;volatile
   505                           
   506                           ;Main.c: 69:     TRISB = 0;
   507  015B  0186               	clrf	6	;volatile
   508                           
   509                           ;Main.c: 70:     TRISC = 0;
   510  015C  0187               	clrf	7	;volatile
   511                           
   512                           ;Main.c: 71:     TRISD = 0;
   513  015D  0188               	clrf	8	;volatile
   514                           
   515                           ;Main.c: 72:     TRISE = 0;
   516  015E  0189               	clrf	9	;volatile
   517  015F                     l999:
   518                           
   519                           ;Main.c: 73:     TRISBbits.TRISB0 = 1;
   520  015F  1406               	bsf	6,0	;volatile
   521  0160                     l1001:
   522                           
   523                           ;Main.c: 74:     TRISBbits.TRISB1 = 1;
   524  0160  1486               	bsf	6,1	;volatile
   525  0161                     l1003:
   526                           
   527                           ;Main.c: 75:     OPTION_REGbits.nRBPU = 0;
   528  0161  1381               	bcf	1,7	;volatile
   529  0162                     l1005:
   530                           
   531                           ;Main.c: 76:     WPUBbits.WPUB0 = 1;
   532  0162  1415               	bsf	21,0	;volatile
   533  0163                     l1007:
   534                           
   535                           ;Main.c: 77:     WPUBbits.WPUB1 = 1;
   536  0163  1495               	bsf	21,1	;volatile
   537  0164                     l1009:
   538                           
   539                           ;Main.c: 80:     INTCONbits.GIE = 1;
   540  0164  178B               	bsf	11,7	;volatile
   541  0165                     l1011:
   542                           
   543                           ;Main.c: 81:     INTCONbits.T0IF = 0;
   544  0165  110B               	bcf	11,2	;volatile
   545  0166                     l1013:
   546                           
   547                           ;Main.c: 82:     INTCONbits.RBIF = 0;
   548  0166  100B               	bcf	11,0	;volatile
   549  0167                     l1015:
   550                           
   551                           ;Main.c: 83:     INTCONbits.RBIE = 1;
   552  0167  158B               	bsf	11,3	;volatile
   553  0168                     l1017:
   554                           
   555                           ;Main.c: 84:     INTCONbits.T0IE = 1;
   556  0168  168B               	bsf	11,5	;volatile
   557  0169                     l1019:
   558                           
   559                           ;Main.c: 85:     IOCBbits.IOCB0 = 1;
   560  0169  1416               	bsf	22,0	;volatile
   561  016A                     l1021:
   562                           
   563                           ;Main.c: 86:     IOCBbits.IOCB1 = 1;
   564  016A  1496               	bsf	22,1	;volatile
   565  016B                     l1023:
   566                           
   567                           ;Main.c: 89:     INTCONbits.T0IF = 0;
   568  016B  110B               	bcf	11,2	;volatile
   569  016C                     l1025:
   570                           
   571                           ;Main.c: 90:     TMR0 = 8;
   572  016C  3008               	movlw	8
   573  016D  1283               	bcf	3,5	;RP0=0, select bank0
   574  016E  1303               	bcf	3,6	;RP1=0, select bank0
   575  016F  0081               	movwf	1	;volatile
   576  0170                     l1027:
   577                           
   578                           ;Main.c: 91:     OPTION_REGbits.T0CS = 0;
   579  0170  1683               	bsf	3,5	;RP0=1, select bank1
   580  0171  1303               	bcf	3,6	;RP1=0, select bank1
   581  0172  1281               	bcf	1,5	;volatile
   582  0173                     l1029:
   583                           
   584                           ;Main.c: 92:     OPTION_REGbits.PS = 0;
   585  0173  30F8               	movlw	-8
   586  0174  0581               	andwf	1,f	;volatile
   587  0175                     l1031:
   588                           
   589                           ;Main.c: 93:     OPTION_REGbits.PS0 = 0;
   590  0175  1001               	bcf	1,0	;volatile
   591  0176                     l1033:
   592                           
   593                           ;Main.c: 94:     OPTION_REGbits.PS1 = 1;
   594  0176  1481               	bsf	1,1	;volatile
   595  0177                     l1035:
   596                           
   597                           ;Main.c: 95:     OPTION_REGbits.PS2 = 1;
   598  0177  1501               	bsf	1,2	;volatile
   599  0178                     l1037:
   600                           
   601                           ;Main.c: 98:     PORTA = 1;
   602  0178  3001               	movlw	1
   603  0179  1283               	bcf	3,5	;RP0=0, select bank0
   604  017A  1303               	bcf	3,6	;RP1=0, select bank0
   605  017B  0085               	movwf	5	;volatile
   606  017C                     l1039:
   607                           
   608                           ;Main.c: 99:     PORTB = 0;
   609  017C  0186               	clrf	6	;volatile
   610  017D                     l1041:
   611                           
   612                           ;Main.c: 100:     RB0 = 1;
   613  017D  1406               	bsf	6,0	;volatile
   614  017E                     l1043:
   615                           
   616                           ;Main.c: 101:     RB1 = 1;
   617  017E  1486               	bsf	6,1	;volatile
   618  017F                     l1045:
   619                           
   620                           ;Main.c: 102:     PORTC = 99;
   621  017F  3063               	movlw	99
   622  0180  0087               	movwf	7	;volatile
   623  0181                     l1047:
   624                           
   625                           ;Main.c: 103:     PORTD = 0;
   626  0181  0188               	clrf	8	;volatile
   627  0182                     l1049:
   628                           
   629                           ;Main.c: 104:     PORTE = 0;
   630  0182  0189               	clrf	9	;volatile
   631  0183                     l1051:
   632                           
   633                           ;Main.c: 106:     display[0]=0b00111111;
   634  0183  303F               	movlw	63
   635  0184  00F5               	movwf	??_setup
   636  0185  0875               	movf	??_setup,w
   637  0186  00B4               	movwf	_display
   638  0187                     l1053:
   639                           
   640                           ;Main.c: 107:     display[1]=0b00000110;
   641  0187  3006               	movlw	6
   642  0188  00F5               	movwf	??_setup
   643  0189  0875               	movf	??_setup,w
   644  018A  00B5               	movwf	_display+1
   645  018B                     l1055:
   646                           
   647                           ;Main.c: 108:     display[2]=0b01011011;
   648  018B  305B               	movlw	91
   649  018C  00F5               	movwf	??_setup
   650  018D  0875               	movf	??_setup,w
   651  018E  00B6               	movwf	_display+2
   652  018F                     l1057:
   653                           
   654                           ;Main.c: 109:     display[3]=0b01001111;
   655  018F  304F               	movlw	79
   656  0190  00F5               	movwf	??_setup
   657  0191  0875               	movf	??_setup,w
   658  0192  00B7               	movwf	_display+3
   659  0193                     l1059:
   660                           
   661                           ;Main.c: 110:     display[4]=0b01100110;
   662  0193  3066               	movlw	102
   663  0194  00F5               	movwf	??_setup
   664  0195  0875               	movf	??_setup,w
   665  0196  00B8               	movwf	_display+4
   666  0197                     l1061:
   667                           
   668                           ;Main.c: 111:     display[5]=0b01101101;
   669  0197  306D               	movlw	109
   670  0198  00F5               	movwf	??_setup
   671  0199  0875               	movf	??_setup,w
   672  019A  00B9               	movwf	_display+5
   673  019B                     l1063:
   674                           
   675                           ;Main.c: 112:     display[6]=0b01111101;
   676  019B  307D               	movlw	125
   677  019C  00F5               	movwf	??_setup
   678  019D  0875               	movf	??_setup,w
   679  019E  00BA               	movwf	_display+6
   680  019F                     l1065:
   681                           
   682                           ;Main.c: 113:     display[7]=0b00000111;
   683  019F  3007               	movlw	7
   684  01A0  00F5               	movwf	??_setup
   685  01A1  0875               	movf	??_setup,w
   686  01A2  00BB               	movwf	_display+7
   687  01A3                     l1067:
   688                           
   689                           ;Main.c: 114:     display[8]=0b01111111;
   690  01A3  307F               	movlw	127
   691  01A4  00F5               	movwf	??_setup
   692  01A5  0875               	movf	??_setup,w
   693  01A6  00BC               	movwf	_display+8
   694  01A7                     l1069:
   695                           
   696                           ;Main.c: 115:     display[9]=0b01100111;
   697  01A7  3067               	movlw	103
   698  01A8  00F5               	movwf	??_setup
   699  01A9  0875               	movf	??_setup,w
   700  01AA  00BD               	movwf	_display+9
   701  01AB                     l73:
   702  01AB  0008               	return
   703  01AC                     __end_of_setup:
   704                           
   705                           	psect	text2
   706  0024                     __ptext2:	
   707 ;; *************** function _divide *****************
   708 ;; Defined at:
   709 ;;		line 126 in file "Main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;  a               1    wreg     PTR unsigned char 
   712 ;;		 -> centena(1), 
   713 ;;  b               1   11[BANK0 ] PTR unsigned char 
   714 ;;		 -> decena(1), 
   715 ;;  c               1   12[BANK0 ] PTR unsigned char 
   716 ;;		 -> unidad(1), 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  a               1   17[BANK0 ] PTR unsigned char 
   719 ;;		 -> centena(1), 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       2       0       0       0
   730 ;;      Locals:         0       1       0       0       0
   731 ;;      Temps:          0       4       0       0       0
   732 ;;      Totals:         0       7       0       0       0
   733 ;;Total ram usage:        7 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; Hardware stack levels required when called: 3
   736 ;; This function calls:
   737 ;;		___awdiv
   738 ;;		___bmul
   739 ;;		___wmul
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           
   746                           ;psect for function _divide
   747  0024                     _divide:
   748                           
   749                           ;incstack = 0
   750                           ; Regs used in _divide: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   751                           ;divide@a stored from wreg
   752  0024  1283               	bcf	3,5	;RP0=0, select bank0
   753  0025  1303               	bcf	3,6	;RP1=0, select bank0
   754  0026  00B1               	movwf	divide@a
   755  0027                     l1071:
   756                           
   757                           ;Main.c: 127:     *a=PORTC/100;
   758  0027  3064               	movlw	100
   759  0028  00A2               	movwf	___awdiv@divisor
   760  0029  3000               	movlw	0
   761  002A  00A3               	movwf	___awdiv@divisor+1
   762  002B  0807               	movf	7,w	;volatile
   763  002C  00AD               	movwf	??_divide
   764  002D  01AE               	clrf	??_divide+1
   765  002E  082D               	movf	??_divide,w
   766  002F  00A4               	movwf	___awdiv@dividend
   767  0030  082E               	movf	??_divide+1,w
   768  0031  00A5               	movwf	___awdiv@dividend+1
   769  0032  120A  118A  208D  120A  118A  	fcall	___awdiv
   770  0037  1283               	bcf	3,5	;RP0=0, select bank0
   771  0038  1303               	bcf	3,6	;RP1=0, select bank0
   772  0039  0822               	movf	?___awdiv,w
   773  003A  00AF               	movwf	??_divide+2
   774  003B  0831               	movf	divide@a,w
   775  003C  0084               	movwf	4
   776  003D  082F               	movf	??_divide+2,w
   777  003E  1383               	bcf	3,7	;select IRP bank0
   778  003F  0080               	movwf	0
   779                           
   780                           ;Main.c: 128:     *b=(PORTC-100*centena)/10;
   781  0040  300A               	movlw	10
   782  0041  00A2               	movwf	___awdiv@divisor
   783  0042  3000               	movlw	0
   784  0043  00A3               	movwf	___awdiv@divisor+1
   785  0044  0840               	movf	_centena,w
   786  0045  00AD               	movwf	??_divide
   787  0046  01AE               	clrf	??_divide+1
   788  0047  082D               	movf	??_divide,w
   789  0048  00F5               	movwf	___wmul@multiplier
   790  0049  082E               	movf	??_divide+1,w
   791  004A  00F6               	movwf	___wmul@multiplier+1
   792  004B  309C               	movlw	156
   793  004C  00F7               	movwf	___wmul@multiplicand
   794  004D  30FF               	movlw	255
   795  004E  00F8               	movwf	___wmul@multiplicand+1
   796  004F  120A  118A  21AC  120A  118A  	fcall	___wmul
   797  0054  1283               	bcf	3,5	;RP0=0, select bank0
   798  0055  1303               	bcf	3,6	;RP1=0, select bank0
   799  0056  0807               	movf	7,w	;volatile
   800  0057  0775               	addwf	?___wmul,w
   801  0058  00A4               	movwf	___awdiv@dividend
   802  0059  0876               	movf	?___wmul+1,w
   803  005A  1803               	skipnc
   804  005B  0A76               	incf	?___wmul+1,w
   805  005C  00A5               	movwf	___awdiv@dividend+1
   806  005D  120A  118A  208D  120A  118A  	fcall	___awdiv
   807  0062  1283               	bcf	3,5	;RP0=0, select bank0
   808  0063  1303               	bcf	3,6	;RP1=0, select bank0
   809  0064  0822               	movf	?___awdiv,w
   810  0065  00AF               	movwf	??_divide+2
   811  0066  082B               	movf	divide@b,w
   812  0067  0084               	movwf	4
   813  0068  082F               	movf	??_divide+2,w
   814  0069  1383               	bcf	3,7	;select IRP bank0
   815  006A  0080               	movwf	0
   816                           
   817                           ;Main.c: 129:     *c=PORTC-100*centena-10*decena;
   818  006B  309C               	movlw	156
   819  006C  00AD               	movwf	??_divide
   820  006D  082D               	movf	??_divide,w
   821  006E  00F5               	movwf	___bmul@multiplicand
   822  006F  0840               	movf	_centena,w
   823  0070  120A  118A  21F0  120A  118A  	fcall	___bmul
   824  0075  1283               	bcf	3,5	;RP0=0, select bank0
   825  0076  1303               	bcf	3,6	;RP1=0, select bank0
   826  0077  00AE               	movwf	??_divide+1
   827  0078  30F6               	movlw	246
   828  0079  00AF               	movwf	??_divide+2
   829  007A  082F               	movf	??_divide+2,w
   830  007B  00F5               	movwf	___bmul@multiplicand
   831  007C  083F               	movf	_decena,w
   832  007D  120A  118A  21F0  120A  118A  	fcall	___bmul
   833  0082  1283               	bcf	3,5	;RP0=0, select bank0
   834  0083  1303               	bcf	3,6	;RP1=0, select bank0
   835  0084  072E               	addwf	??_divide+1,w
   836  0085  0707               	addwf	7,w	;volatile
   837  0086  00B0               	movwf	??_divide+3
   838  0087  082C               	movf	divide@c,w
   839  0088  0084               	movwf	4
   840  0089  0830               	movf	??_divide+3,w
   841  008A  1383               	bcf	3,7	;select IRP bank0
   842  008B  0080               	movwf	0
   843  008C                     l79:
   844  008C  0008               	return
   845  008D                     __end_of_divide:
   846                           
   847                           	psect	text3
   848  01AC                     __ptext3:	
   849 ;; *************** function ___wmul *****************
   850 ;; Defined at:
   851 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  multiplier      2    5[COMMON] unsigned int 
   854 ;;  multiplicand    2    7[COMMON] unsigned int 
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  product         2    0[BANK0 ] unsigned int 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  2    5[COMMON] unsigned int 
   859 ;; Registers used:
   860 ;;		wreg, status,2, status,0
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   866 ;;      Params:         4       0       0       0       0
   867 ;;      Locals:         0       2       0       0       0
   868 ;;      Temps:          0       0       0       0       0
   869 ;;      Totals:         4       2       0       0       0
   870 ;;Total ram usage:        6 bytes
   871 ;; Hardware stack levels used: 1
   872 ;; Hardware stack levels required when called: 2
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_divide
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           
   881                           ;psect for function ___wmul
   882  01AC                     ___wmul:
   883  01AC                     l925:	
   884                           ;incstack = 0
   885                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   886                           
   887  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   888  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   889  01AE  01A0               	clrf	___wmul@product
   890  01AF  01A1               	clrf	___wmul@product+1
   891  01B0                     l927:
   892  01B0  1C75               	btfss	___wmul@multiplier,0
   893  01B1  29B3               	goto	u211
   894  01B2  29B4               	goto	u210
   895  01B3                     u211:
   896  01B3  29BC               	goto	l181
   897  01B4                     u210:
   898  01B4                     l929:
   899  01B4  0877               	movf	___wmul@multiplicand,w
   900  01B5  1283               	bcf	3,5	;RP0=0, select bank0
   901  01B6  1303               	bcf	3,6	;RP1=0, select bank0
   902  01B7  07A0               	addwf	___wmul@product,f
   903  01B8  1803               	skipnc
   904  01B9  0AA1               	incf	___wmul@product+1,f
   905  01BA  0878               	movf	___wmul@multiplicand+1,w
   906  01BB  07A1               	addwf	___wmul@product+1,f
   907  01BC                     l181:
   908  01BC  3001               	movlw	1
   909  01BD                     u225:
   910  01BD  1003               	clrc
   911  01BE  0DF7               	rlf	___wmul@multiplicand,f
   912  01BF  0DF8               	rlf	___wmul@multiplicand+1,f
   913  01C0  3EFF               	addlw	-1
   914  01C1  1D03               	skipz
   915  01C2  29BD               	goto	u225
   916  01C3                     l931:
   917  01C3  3001               	movlw	1
   918  01C4                     u235:
   919  01C4  1003               	clrc
   920  01C5  0CF6               	rrf	___wmul@multiplier+1,f
   921  01C6  0CF5               	rrf	___wmul@multiplier,f
   922  01C7  3EFF               	addlw	-1
   923  01C8  1D03               	skipz
   924  01C9  29C4               	goto	u235
   925  01CA                     l933:
   926  01CA  0875               	movf	___wmul@multiplier,w
   927  01CB  0476               	iorwf	___wmul@multiplier+1,w
   928  01CC  1D03               	btfss	3,2
   929  01CD  29CF               	goto	u241
   930  01CE  29D0               	goto	u240
   931  01CF                     u241:
   932  01CF  29B0               	goto	l927
   933  01D0                     u240:
   934  01D0                     l935:
   935  01D0  1283               	bcf	3,5	;RP0=0, select bank0
   936  01D1  1303               	bcf	3,6	;RP1=0, select bank0
   937  01D2  0821               	movf	___wmul@product+1,w
   938  01D3  00F6               	movwf	?___wmul+1
   939  01D4  0820               	movf	___wmul@product,w
   940  01D5  00F5               	movwf	?___wmul
   941  01D6                     l183:
   942  01D6  0008               	return
   943  01D7                     __end_of___wmul:
   944                           
   945                           	psect	text4
   946  01F0                     __ptext4:	
   947 ;; *************** function ___bmul *****************
   948 ;; Defined at:
   949 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  multiplier      1    wreg     unsigned char 
   952 ;;  multiplicand    1    5[COMMON] unsigned char 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  multiplier      1    8[COMMON] unsigned char 
   955 ;;  product         1    7[COMMON] unsigned char 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      unsigned char 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   965 ;;      Params:         1       0       0       0       0
   966 ;;      Locals:         2       0       0       0       0
   967 ;;      Temps:          1       0       0       0       0
   968 ;;      Totals:         4       0       0       0       0
   969 ;;Total ram usage:        4 bytes
   970 ;; Hardware stack levels used: 1
   971 ;; Hardware stack levels required when called: 2
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_divide
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           
   980                           ;psect for function ___bmul
   981  01F0                     ___bmul:
   982                           
   983                           ;incstack = 0
   984                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   985                           ;___bmul@multiplier stored from wreg
   986  01F0  00F8               	movwf	___bmul@multiplier
   987  01F1                     l939:
   988  01F1  01F7               	clrf	___bmul@product
   989  01F2                     l941:
   990  01F2  1C78               	btfss	___bmul@multiplier,0
   991  01F3  29F5               	goto	u251
   992  01F4  29F6               	goto	u250
   993  01F5                     u251:
   994  01F5  29FA               	goto	l945
   995  01F6                     u250:
   996  01F6                     l943:
   997  01F6  0875               	movf	___bmul@multiplicand,w
   998  01F7  00F6               	movwf	??___bmul
   999  01F8  0876               	movf	??___bmul,w
  1000  01F9  07F7               	addwf	___bmul@product,f
  1001  01FA                     l945:
  1002  01FA  1003               	clrc
  1003  01FB  0DF5               	rlf	___bmul@multiplicand,f
  1004  01FC                     l947:
  1005  01FC  1003               	clrc
  1006  01FD  0CF8               	rrf	___bmul@multiplier,f
  1007  01FE  0878               	movf	___bmul@multiplier,w
  1008  01FF  1D03               	btfss	3,2
  1009  0200  2A02               	goto	u261
  1010  0201  2A03               	goto	u260
  1011  0202                     u261:
  1012  0202  29F2               	goto	l941
  1013  0203                     u260:
  1014  0203                     l949:
  1015  0203  0877               	movf	___bmul@product,w
  1016  0204                     l207:
  1017  0204  0008               	return
  1018  0205                     __end_of___bmul:
  1019                           
  1020                           	psect	text5
  1021  008D                     __ptext5:	
  1022 ;; *************** function ___awdiv *****************
  1023 ;; Defined at:
  1024 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  divisor         2    2[BANK0 ] int 
  1027 ;;  dividend        2    4[BANK0 ] int 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  quotient        2    9[BANK0 ] int 
  1030 ;;  sign            1    8[BANK0 ] unsigned char 
  1031 ;;  counter         1    7[BANK0 ] unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  2    2[BANK0 ] int 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1041 ;;      Params:         0       4       0       0       0
  1042 ;;      Locals:         0       4       0       0       0
  1043 ;;      Temps:          0       1       0       0       0
  1044 ;;      Totals:         0       9       0       0       0
  1045 ;;Total ram usage:        9 bytes
  1046 ;; Hardware stack levels used: 1
  1047 ;; Hardware stack levels required when called: 2
  1048 ;; This function calls:
  1049 ;;		Nothing
  1050 ;; This function is called by:
  1051 ;;		_divide
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           
  1056                           ;psect for function ___awdiv
  1057  008D                     ___awdiv:
  1058  008D                     l953:	
  1059                           ;incstack = 0
  1060                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1061                           
  1062  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1063  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1064  008F  01A8               	clrf	___awdiv@sign
  1065  0090                     l955:
  1066  0090  1FA3               	btfss	___awdiv@divisor+1,7
  1067  0091  2893               	goto	u271
  1068  0092  2894               	goto	u270
  1069  0093                     u271:
  1070  0093  289B               	goto	l961
  1071  0094                     u270:
  1072  0094                     l957:
  1073  0094  09A2               	comf	___awdiv@divisor,f
  1074  0095  09A3               	comf	___awdiv@divisor+1,f
  1075  0096  0AA2               	incf	___awdiv@divisor,f
  1076  0097  1903               	skipnz
  1077  0098  0AA3               	incf	___awdiv@divisor+1,f
  1078  0099                     l959:
  1079  0099  01A8               	clrf	___awdiv@sign
  1080  009A  0AA8               	incf	___awdiv@sign,f
  1081  009B                     l961:
  1082  009B  1FA5               	btfss	___awdiv@dividend+1,7
  1083  009C  289E               	goto	u281
  1084  009D  289F               	goto	u280
  1085  009E                     u281:
  1086  009E  28A8               	goto	l967
  1087  009F                     u280:
  1088  009F                     l963:
  1089  009F  09A4               	comf	___awdiv@dividend,f
  1090  00A0  09A5               	comf	___awdiv@dividend+1,f
  1091  00A1  0AA4               	incf	___awdiv@dividend,f
  1092  00A2  1903               	skipnz
  1093  00A3  0AA5               	incf	___awdiv@dividend+1,f
  1094  00A4                     l965:
  1095  00A4  3001               	movlw	1
  1096  00A5  00A6               	movwf	??___awdiv
  1097  00A6  0826               	movf	??___awdiv,w
  1098  00A7  06A8               	xorwf	___awdiv@sign,f
  1099  00A8                     l967:
  1100  00A8  01A9               	clrf	___awdiv@quotient
  1101  00A9  01AA               	clrf	___awdiv@quotient+1
  1102  00AA                     l969:
  1103  00AA  0822               	movf	___awdiv@divisor,w
  1104  00AB  0423               	iorwf	___awdiv@divisor+1,w
  1105  00AC  1903               	btfsc	3,2
  1106  00AD  28AF               	goto	u291
  1107  00AE  28B0               	goto	u290
  1108  00AF                     u291:
  1109  00AF  28E7               	goto	l989
  1110  00B0                     u290:
  1111  00B0                     l971:
  1112  00B0  01A7               	clrf	___awdiv@counter
  1113  00B1  0AA7               	incf	___awdiv@counter,f
  1114  00B2  28BE               	goto	l977
  1115  00B3                     l973:
  1116  00B3  3001               	movlw	1
  1117  00B4                     u305:
  1118  00B4  1003               	clrc
  1119  00B5  0DA2               	rlf	___awdiv@divisor,f
  1120  00B6  0DA3               	rlf	___awdiv@divisor+1,f
  1121  00B7  3EFF               	addlw	-1
  1122  00B8  1D03               	skipz
  1123  00B9  28B4               	goto	u305
  1124  00BA                     l975:
  1125  00BA  3001               	movlw	1
  1126  00BB  00A6               	movwf	??___awdiv
  1127  00BC  0826               	movf	??___awdiv,w
  1128  00BD  07A7               	addwf	___awdiv@counter,f
  1129  00BE                     l977:
  1130  00BE  1FA3               	btfss	___awdiv@divisor+1,7
  1131  00BF  28C1               	goto	u311
  1132  00C0  28C2               	goto	u310
  1133  00C1                     u311:
  1134  00C1  28B3               	goto	l973
  1135  00C2                     u310:
  1136  00C2                     l979:
  1137  00C2  3001               	movlw	1
  1138  00C3                     u325:
  1139  00C3  1003               	clrc
  1140  00C4  0DA9               	rlf	___awdiv@quotient,f
  1141  00C5  0DAA               	rlf	___awdiv@quotient+1,f
  1142  00C6  3EFF               	addlw	-1
  1143  00C7  1D03               	skipz
  1144  00C8  28C3               	goto	u325
  1145  00C9  0823               	movf	___awdiv@divisor+1,w
  1146  00CA  0225               	subwf	___awdiv@dividend+1,w
  1147  00CB  1D03               	skipz
  1148  00CC  28CF               	goto	u335
  1149  00CD  0822               	movf	___awdiv@divisor,w
  1150  00CE  0224               	subwf	___awdiv@dividend,w
  1151  00CF                     u335:
  1152  00CF  1C03               	skipc
  1153  00D0  28D2               	goto	u331
  1154  00D1  28D3               	goto	u330
  1155  00D2                     u331:
  1156  00D2  28DA               	goto	l985
  1157  00D3                     u330:
  1158  00D3                     l981:
  1159  00D3  0822               	movf	___awdiv@divisor,w
  1160  00D4  02A4               	subwf	___awdiv@dividend,f
  1161  00D5  0823               	movf	___awdiv@divisor+1,w
  1162  00D6  1C03               	skipc
  1163  00D7  03A5               	decf	___awdiv@dividend+1,f
  1164  00D8  02A5               	subwf	___awdiv@dividend+1,f
  1165  00D9                     l983:
  1166  00D9  1429               	bsf	___awdiv@quotient,0
  1167  00DA                     l985:
  1168  00DA  3001               	movlw	1
  1169  00DB                     u345:
  1170  00DB  1003               	clrc
  1171  00DC  0CA3               	rrf	___awdiv@divisor+1,f
  1172  00DD  0CA2               	rrf	___awdiv@divisor,f
  1173  00DE  3EFF               	addlw	-1
  1174  00DF  1D03               	skipz
  1175  00E0  28DB               	goto	u345
  1176  00E1                     l987:
  1177  00E1  3001               	movlw	1
  1178  00E2  02A7               	subwf	___awdiv@counter,f
  1179  00E3  1D03               	btfss	3,2
  1180  00E4  28E6               	goto	u351
  1181  00E5  28E7               	goto	u350
  1182  00E6                     u351:
  1183  00E6  28C2               	goto	l979
  1184  00E7                     u350:
  1185  00E7                     l989:
  1186  00E7  0828               	movf	___awdiv@sign,w
  1187  00E8  1903               	btfsc	3,2
  1188  00E9  28EB               	goto	u361
  1189  00EA  28EC               	goto	u360
  1190  00EB                     u361:
  1191  00EB  28F1               	goto	l993
  1192  00EC                     u360:
  1193  00EC                     l991:
  1194  00EC  09A9               	comf	___awdiv@quotient,f
  1195  00ED  09AA               	comf	___awdiv@quotient+1,f
  1196  00EE  0AA9               	incf	___awdiv@quotient,f
  1197  00EF  1903               	skipnz
  1198  00F0  0AAA               	incf	___awdiv@quotient+1,f
  1199  00F1                     l993:
  1200  00F1  082A               	movf	___awdiv@quotient+1,w
  1201  00F2  00A3               	movwf	?___awdiv+1
  1202  00F3  0829               	movf	___awdiv@quotient,w
  1203  00F4  00A2               	movwf	?___awdiv
  1204  00F5                     l334:
  1205  00F5  0008               	return
  1206  00F6                     __end_of___awdiv:
  1207                           
  1208                           	psect	text6
  1209  00F6                     __ptext6:	
  1210 ;; *************** function _isr *****************
  1211 ;; Defined at:
  1212 ;;		line 137 in file "Main.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          5       0       0       0       0
  1229 ;;      Totals:         5       0       0       0       0
  1230 ;;Total ram usage:        5 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; Hardware stack levels required when called: 1
  1233 ;; This function calls:
  1234 ;;		_reset_timer0
  1235 ;; This function is called by:
  1236 ;;		Interrupt level 1
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _isr
  1242  00F6                     _isr:
  1243  00F6                     i1l1091:
  1244                           
  1245                           ;Main.c: 138:     if (T0IF==1){
  1246  00F6  1D0B               	btfss	11,2	;volatile
  1247  00F7  28F9               	goto	u37_21
  1248  00F8  28FA               	goto	u37_20
  1249  00F9                     u37_21:
  1250  00F9  2934               	goto	i1l84
  1251  00FA                     u37_20:
  1252  00FA                     i1l1093:
  1253                           
  1254                           ;Main.c: 139:         reset_timer0();
  1255  00FA  120A  118A  2205  120A  118A  	fcall	_reset_timer0
  1256                           
  1257                           ;Main.c: 140:         switch(PORTA){
  1258  00FF  291E               	goto	i1l1115
  1259  0100                     i1l86:	
  1260                           ;Main.c: 141:             case 1:
  1261                           
  1262                           
  1263                           ;Main.c: 142:                 RA0=0;
  1264  0100  1005               	bcf	5,0	;volatile
  1265  0101                     i1l1095:
  1266                           
  1267                           ;Main.c: 143:                 PORTD=display[decena];
  1268  0101  083F               	movf	_decena,w
  1269  0102  3E34               	addlw	(low (_display| 0))& (0+255)
  1270  0103  0084               	movwf	4
  1271  0104  1383               	bcf	3,7	;select IRP bank0
  1272  0105  0800               	movf	0,w
  1273  0106  0088               	movwf	8	;volatile
  1274  0107                     i1l1097:
  1275                           
  1276                           ;Main.c: 144:                 RA1=1;
  1277  0107  1485               	bsf	5,1	;volatile
  1278  0108                     i1l1099:
  1279                           
  1280                           ;Main.c: 145:                 RA2=0;
  1281  0108  1105               	bcf	5,2	;volatile
  1282                           
  1283                           ;Main.c: 146:                 break;
  1284  0109  2933               	goto	i1l87
  1285  010A                     i1l88:	
  1286                           ;Main.c: 148:             case 2:
  1287                           
  1288                           
  1289                           ;Main.c: 149:                 RA1=0;
  1290  010A  1085               	bcf	5,1	;volatile
  1291  010B                     i1l1101:
  1292                           
  1293                           ;Main.c: 150:                 PORTD=display[unidad];
  1294  010B  083E               	movf	_unidad,w
  1295  010C  3E34               	addlw	(low (_display| 0))& (0+255)
  1296  010D  0084               	movwf	4
  1297  010E  1383               	bcf	3,7	;select IRP bank0
  1298  010F  0800               	movf	0,w
  1299  0110  0088               	movwf	8	;volatile
  1300  0111                     i1l1103:
  1301                           
  1302                           ;Main.c: 151:                 RA2=1;
  1303  0111  1505               	bsf	5,2	;volatile
  1304  0112                     i1l1105:
  1305                           
  1306                           ;Main.c: 152:                 RA0=0;
  1307  0112  1005               	bcf	5,0	;volatile
  1308                           
  1309                           ;Main.c: 153:                 break;
  1310  0113  2933               	goto	i1l87
  1311  0114                     i1l89:	
  1312                           ;Main.c: 155:             case 4:
  1313                           
  1314                           
  1315                           ;Main.c: 156:                 RA2=0;
  1316  0114  1105               	bcf	5,2	;volatile
  1317  0115                     i1l1107:
  1318                           
  1319                           ;Main.c: 157:                 PORTD=display[centena];
  1320  0115  0840               	movf	_centena,w
  1321  0116  3E34               	addlw	(low (_display| 0))& (0+255)
  1322  0117  0084               	movwf	4
  1323  0118  1383               	bcf	3,7	;select IRP bank0
  1324  0119  0800               	movf	0,w
  1325  011A  0088               	movwf	8	;volatile
  1326  011B                     i1l1109:
  1327                           
  1328                           ;Main.c: 158:                 RA0=1;
  1329  011B  1405               	bsf	5,0	;volatile
  1330  011C                     i1l1111:
  1331                           
  1332                           ;Main.c: 159:                 RA1=0;
  1333  011C  1085               	bcf	5,1	;volatile
  1334                           
  1335                           ;Main.c: 160:                 break;
  1336  011D  2933               	goto	i1l87
  1337  011E                     i1l1115:
  1338  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1339  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0120  0805               	movf	5,w	;volatile
  1341  0121  00F0               	movwf	??_isr
  1342  0122  01F1               	clrf	??_isr+1
  1343                           
  1344                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1345                           ; Switch size 1, requested type "simple"
  1346                           ; Number of cases is 1, Range of values is 0 to 0
  1347                           ; switch strategies available:
  1348                           ; Name         Instructions Cycles
  1349                           ; simple_byte            4     3 (average)
  1350                           ; direct_byte           11     8 (fixed)
  1351                           ; jumptable            260     6 (fixed)
  1352                           ;	Chosen strategy is simple_byte
  1353  0123  0871               	movf	??_isr+1,w
  1354  0124  3A00               	xorlw	0	; case 0
  1355  0125  1903               	skipnz
  1356  0126  2928               	goto	i1l1163
  1357  0127  2933               	goto	i1l87
  1358  0128                     i1l1163:
  1359                           
  1360                           ; Switch size 1, requested type "simple"
  1361                           ; Number of cases is 3, Range of values is 1 to 4
  1362                           ; switch strategies available:
  1363                           ; Name         Instructions Cycles
  1364                           ; simple_byte           10     6 (average)
  1365                           ; direct_byte           23    11 (fixed)
  1366                           ; jumptable            263     9 (fixed)
  1367                           ;	Chosen strategy is simple_byte
  1368  0128  0870               	movf	??_isr,w
  1369  0129  3A01               	xorlw	1	; case 1
  1370  012A  1903               	skipnz
  1371  012B  2900               	goto	i1l86
  1372  012C  3A03               	xorlw	3	; case 2
  1373  012D  1903               	skipnz
  1374  012E  290A               	goto	i1l88
  1375  012F  3A06               	xorlw	6	; case 4
  1376  0130  1903               	skipnz
  1377  0131  2914               	goto	i1l89
  1378  0132  2933               	goto	i1l87
  1379  0133                     i1l87:
  1380                           
  1381                           ;Main.c: 163:         T0IF = 0;
  1382  0133  110B               	bcf	11,2	;volatile
  1383  0134                     i1l84:	
  1384                           ;Main.c: 164:     }
  1385                           
  1386                           
  1387                           ;Main.c: 165:     if (RBIF==1){
  1388  0134  1C0B               	btfss	11,0	;volatile
  1389  0135  2937               	goto	u38_21
  1390  0136  2938               	goto	u38_20
  1391  0137                     u38_21:
  1392  0137  294B               	goto	i1l95
  1393  0138                     u38_20:
  1394  0138                     i1l1117:
  1395                           
  1396                           ;Main.c: 166:         if (RB0==0){
  1397  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1399  013A  1806               	btfsc	6,0	;volatile
  1400  013B  293D               	goto	u39_21
  1401  013C  293E               	goto	u39_20
  1402  013D                     u39_21:
  1403  013D  2944               	goto	i1l91
  1404  013E                     u39_20:
  1405  013E                     i1l1119:
  1406                           
  1407                           ;Main.c: 167:             PORTC++;
  1408  013E  3001               	movlw	1
  1409  013F  00F0               	movwf	??_isr
  1410  0140  0870               	movf	??_isr,w
  1411  0141  0787               	addwf	7,f	;volatile
  1412  0142                     i1l1121:
  1413                           
  1414                           ;Main.c: 168:             RBIF = 0;
  1415  0142  100B               	bcf	11,0	;volatile
  1416                           
  1417                           ;Main.c: 169:         }
  1418  0143  294B               	goto	i1l95
  1419  0144                     i1l91:	
  1420                           ;Main.c: 170:         else if(RB1==0){
  1421                           
  1422  0144  1886               	btfsc	6,1	;volatile
  1423  0145  2947               	goto	u40_21
  1424  0146  2948               	goto	u40_20
  1425  0147                     u40_21:
  1426  0147  2942               	goto	i1l1121
  1427  0148                     u40_20:
  1428  0148                     i1l1123:
  1429                           
  1430                           ;Main.c: 171:             PORTC--;
  1431  0148  3001               	movlw	1
  1432  0149  0287               	subwf	7,f	;volatile
  1433  014A  2942               	goto	i1l1121
  1434  014B                     i1l95:
  1435  014B  0874               	movf	??_isr+4,w
  1436  014C  008A               	movwf	10
  1437  014D  0873               	movf	??_isr+3,w
  1438  014E  0084               	movwf	4
  1439  014F  0E72               	swapf	??_isr+2,w
  1440  0150  0083               	movwf	3
  1441  0151  0EFE               	swapf	btemp,f
  1442  0152  0E7E               	swapf	btemp,w
  1443  0153  0009               	retfie
  1444  0154                     __end_of_isr:
  1445                           
  1446                           	psect	intentry
  1447  0004                     __pintentry:	
  1448                           ;incstack = 0
  1449                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1450                           
  1451  0004                     interrupt_function:
  1452  007E                     saved_w	set	btemp
  1453  0004  00FE               	movwf	btemp
  1454  0005  0E03               	swapf	3,w
  1455  0006  00F2               	movwf	??_isr+2
  1456  0007  0804               	movf	4,w
  1457  0008  00F3               	movwf	??_isr+3
  1458  0009  080A               	movf	10,w
  1459  000A  00F4               	movwf	??_isr+4
  1460  000B  120A  118A  28F6   	ljmp	_isr
  1461                           
  1462                           	psect	text7
  1463  0205                     __ptext7:	
  1464 ;; *************** function _reset_timer0 *****************
  1465 ;; Defined at:
  1466 ;;		line 117 in file "Main.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0
  1483 ;;      Totals:         0       0       0       0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_isr
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           
  1494                           ;psect for function _reset_timer0
  1495  0205                     _reset_timer0:
  1496  0205                     i1l1073:	
  1497                           ;incstack = 0
  1498                           ; Regs used in _reset_timer0: [wreg+status,2+status,0]
  1499                           
  1500                           
  1501                           ;Main.c: 118:     INTCONbits.T0IF = 0;
  1502  0205  110B               	bcf	11,2	;volatile
  1503  0206                     i1l1075:
  1504                           
  1505                           ;Main.c: 119:     TMR0 = 8;
  1506  0206  3008               	movlw	8
  1507  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0209  0081               	movwf	1	;volatile
  1510  020A                     i1l1077:
  1511                           
  1512                           ;Main.c: 120:     OPTION_REGbits.T0CS = 0;
  1513  020A  1683               	bsf	3,5	;RP0=1, select bank1
  1514  020B  1303               	bcf	3,6	;RP1=0, select bank1
  1515  020C  1281               	bcf	1,5	;volatile
  1516  020D                     i1l1079:
  1517                           
  1518                           ;Main.c: 121:     OPTION_REGbits.PS = 0;
  1519  020D  30F8               	movlw	-8
  1520  020E  0581               	andwf	1,f	;volatile
  1521  020F                     i1l1081:
  1522                           
  1523                           ;Main.c: 122:     OPTION_REGbits.PS0 = 0;
  1524  020F  1001               	bcf	1,0	;volatile
  1525  0210                     i1l1083:
  1526                           
  1527                           ;Main.c: 123:     OPTION_REGbits.PS1 = 1;
  1528  0210  1481               	bsf	1,1	;volatile
  1529  0211                     i1l1085:
  1530                           
  1531                           ;Main.c: 124:     OPTION_REGbits.PS2 = 1;
  1532  0211  1501               	bsf	1,2	;volatile
  1533  0212                     i1l76:
  1534  0212  0008               	return
  1535  0213                     __end_of_reset_timer0:
  1536  007E                     btemp	set	126	;btemp
  1537  007E                     wtemp0	set	126
  1538                           
  1539                           	psect	config
  1540                           
  1541                           ;Config register CONFIG1 @ 0x2007
  1542                           ;	Oscillator Selection bits
  1543                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1544                           ;	Watchdog Timer Enable bit
  1545                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1546                           ;	Power-up Timer Enable bit
  1547                           ;	PWRTE = OFF, PWRT disabled
  1548                           ;	RE3/MCLR pin function select bit
  1549                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1550                           ;	Code Protection bit
  1551                           ;	CP = OFF, Program memory code protection is disabled
  1552                           ;	Data Code Protection bit
  1553                           ;	CPD = OFF, Data memory code protection is disabled
  1554                           ;	Brown Out Reset Selection bits
  1555                           ;	BOREN = ON, BOR enabled
  1556                           ;	Internal External Switchover bit
  1557                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1558                           ;	Fail-Safe Clock Monitor Enabled bit
  1559                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1560                           ;	Low Voltage Programming Enable bit
  1561                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1562                           ;	In-Circuit Debugger Mode bit
  1563                           ;	DEBUG = 0x1, unprogrammed default
  1564  2007                     	org	8199
  1565  2007  3FF4               	dw	16372
  1566                           
  1567                           ;Config register CONFIG2 @ 0x2008
  1568                           ;	Brown-out Reset Selection bit
  1569                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1570                           ;	Flash Program Memory Self Write Enable bits
  1571                           ;	WRT = OFF, Write protection off
  1572  2008                     	org	8200
  1573  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     20      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divide@c	PTR unsigned char  size(1) Largest target is 1
		 -> unidad(BANK0[1]), 

    divide@b	PTR unsigned char  size(1) Largest target is 1
		 -> decena(BANK0[1]), 

    divide@a	PTR unsigned char  size(1) Largest target is 1
		 -> centena(BANK0[1]), 


Critical Paths under _main in COMMON

    _divide->___bmul
    _divide->___wmul
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divide
    _divide->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1343
                                             18 BANK0      2     2      0
                             _divide
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _divide                                               7     5      2    1343
                                             11 BANK0      7     5      2
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              5 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              5 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              2 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
                       _reset_timer0
 ---------------------------------------------------------------------------------
 (4) _reset_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _divide
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _setup

 _isr (ROOT)
   _reset_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      21       5       41.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 20 10:47:24 2021

         ___bmul@product 0077                       l73 01AB                       l79 008C  
           ___awdiv@sign 0028      ___wmul@multiplicand 0077                      l207 0204  
                    l181 01BC                      l334 00F5                      l183 01D6  
                    l931 01C3                      l941 01F2                      l933 01CA  
                    l925 01AC                      l943 01F6                      l935 01D0  
                    l927 01B0                      l961 009B                      l953 008D  
                    l945 01FA                      l929 01B4                      l971 00B0  
                    l963 009F                      l955 0090                      l947 01FC  
                    l939 01F1                      l981 00D3                      l973 00B3  
                    l965 00A4                      l957 0094                      l949 0203  
                    l991 00EC                      l983 00D9                      l975 00BA  
                    l967 00A8                      l959 0099                      l993 00F1  
                    l985 00DA                      l977 00BE                      l969 00AA  
                    l987 00E1                      l979 00C2                      l989 00E7  
                    l997 0154                      l999 015F                      _RA0 0028  
                    _RA1 0029                      _RB0 0030                      _RA2 002A  
                    _RB1 0031                      u210 01B4                      u211 01B3  
                    u310 00C2                      u311 00C1                      u240 01D0  
                    u305 00B4                      u241 01CF                      u225 01BD  
                    u330 00D3                      u250 01F6                      u331 00D2  
                    u251 01F5                      u235 01C4                      u260 0203  
                    u325 00C3                      u261 0202                      u350 00E7  
                    u270 0094                      u351 00E6                      u335 00CF  
                    u271 0093                      u360 00EC                      u280 009F  
                    u361 00EB                      u345 00DB                      u281 009E  
                    u290 00B0                      u291 00AF                      _isr 00F6  
                    fsr0 0004                      indf 0000                     l1001 0160  
                   l1011 0165                     l1003 0161                     l1021 016A  
                   l1013 0166                     l1005 0162                     l1031 0175  
                   l1023 016B                     l1015 0167                     l1007 0163  
                   l1041 017D                     l1033 0176                     l1025 016C  
                   l1017 0168                     l1009 0164                     l1051 0183  
                   l1043 017E                     l1035 0177                     l1027 0170  
                   l1019 0169                     l1061 0197                     l1053 0187  
                   l1045 017F                     l1037 0178                     l1029 0173  
                   l1071 0027                     l1063 019B                     l1055 018B  
                   l1047 0181                     l1039 017C                     l1065 019F  
                   l1057 018F                     l1049 0182                     l1067 01A3  
                   l1059 0193                     l1069 01A7                     l1087 01D7  
                   l1089 01DC                     ?_isr 0070                     _T0IF 005A  
                   _RBIF 0058                     i1l91 0144                     i1l76 0212  
                   i1l84 0134                     i1l86 0100                     i1l95 014B  
                   i1l87 0133                     i1l88 010A                     i1l89 0114  
                   _TMR0 0001                     _main 01D7                     btemp 007E  
                   start 000E        ___bmul@multiplier 0078                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 00F6                    _ANSEL 0188  
        ___awdiv@divisor 0022          ___awdiv@counter 0027                    u40_20 0148  
                  u40_21 0147                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u37_20 00FA                    u37_21 00F9                    u38_20 0138  
                  u38_21 0137                    u39_20 013E                    u39_21 013D  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 0154  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 01F0                   ??_main 0032  
       ___awdiv@dividend 0024                   ?_setup 0070                   _ANSELH 0189  
                 i1l1101 010B                   i1l1111 011C                   i1l1103 0111  
                 i1l1121 0142                   i1l1105 0112                   i1l1123 0148  
                 i1l1107 0115                   i1l1115 011E                   i1l1117 0138  
                 i1l1109 011B                   i1l1119 013E                   i1l1081 020F  
                 i1l1073 0205                   i1l1083 0210                   i1l1075 0206  
                 i1l1163 0128                   i1l1091 00F6                   i1l1085 0211  
                 i1l1077 020A                   i1l1093 00FA                   i1l1079 020D  
                 i1l1095 0101                   i1l1097 0107                   i1l1099 0108  
                 ___bmul 01F0                   ___wmul 01AC                ??___awdiv 0026  
                 _decena 003F                   _divide 0024         ___awdiv@quotient 0029  
                 _unidad 003E                   saved_w 007E  __end_of__initialization 0020  
    ___bmul@multiplicand 0075           __pcstackCOMMON 0070            __end_of_setup 01AC  
         _OPTION_REGbits 0081                  ??_setup 0075               __pbssBANK0 0034  
             __pmaintext 01D7                  ?___bmul 0075                  ?___wmul 0075  
             __pintentry 0004                  ?_divide 002B            ?_reset_timer0 0070  
        __size_of___bmul 0015                  ___awdiv 008D          __size_of___wmul 002B  
        __size_of_divide 0069                  _centena 0040                  __ptext1 0154  
                __ptext2 0024                  __ptext3 01AC                  __ptext4 01F0  
                __ptext5 008D                  __ptext6 00F6                  __ptext7 0205  
                _display 0034             __size_of_isr 005E                  divide@a 0031  
                divide@b 002B                  divide@c 002C     end_of_initialization 0020  
         ??_reset_timer0 0070                _TRISBbits 0086           __end_of___bmul 0205  
         __end_of___wmul 01D7           __end_of_divide 008D      start_initialization 0011  
            __end_of_isr 0154                 ??___bmul 0076                 ??___wmul 0079  
               ??_divide 002D     __end_of_reset_timer0 0213                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0022           __size_of_setup 0058  
      interrupt_function 0004           ___wmul@product 0020                 _IOCBbits 0096  
      ___wmul@multiplier 0075                 _WPUBbits 0095         __size_of___awdiv 0069  
  __size_of_reset_timer0 000E            __size_of_main 0019             _reset_timer0 0205  
             _INTCONbits 000B                 intlevel1 0000  
