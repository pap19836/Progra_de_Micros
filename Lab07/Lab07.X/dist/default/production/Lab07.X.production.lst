

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Apr 18 20:48:20 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0009                     _PORTE	set	9
   211  0008                     _PORTD	set	8
   212  0007                     _PORTC	set	7
   213  0006                     _PORTB	set	6
   214  0005                     _PORTA	set	5
   215  0001                     _TMR0	set	1
   216  000B                     _INTCONbits	set	11
   217  0058                     _RBIF	set	88
   218  002A                     _RA2	set	42
   219  0029                     _RA1	set	41
   220  0028                     _RA0	set	40
   221  005A                     _T0IF	set	90
   222  0031                     _RB1	set	49
   223  0030                     _RB0	set	48
   224  0096                     _IOCBbits	set	150
   225  0095                     _WPUBbits	set	149
   226  0081                     _OPTION_REGbits	set	129
   227  0086                     _TRISBbits	set	134
   228  0089                     _TRISE	set	137
   229  0088                     _TRISD	set	136
   230  0087                     _TRISC	set	135
   231  0086                     _TRISB	set	134
   232  0085                     _TRISA	set	133
   233  0189                     _ANSELH	set	393
   234  0188                     _ANSEL	set	392
   235                           
   236                           	psect	cinit
   237  0011                     start_initialization:	
   238                           ; #config settings
   239                           
   240  0011                     __initialization:
   241                           
   242                           ; Clear objects allocated to COMMON
   243  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   244                           
   245                           ; Clear objects allocated to BANK0
   246  0012  1283               	bcf	3,5	;RP0=0, select bank0
   247  0013  1303               	bcf	3,6	;RP1=0, select bank0
   248  0014  01B0               	clrf	__pbssBANK0& (0+127)
   249  0015  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   250  0016  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   251  0017  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   252  0018  01B4               	clrf	(__pbssBANK0+4)& (0+127)
   253  0019  01B5               	clrf	(__pbssBANK0+5)& (0+127)
   254  001A  01B6               	clrf	(__pbssBANK0+6)& (0+127)
   255  001B  01B7               	clrf	(__pbssBANK0+7)& (0+127)
   256  001C  01B8               	clrf	(__pbssBANK0+8)& (0+127)
   257  001D  01B9               	clrf	(__pbssBANK0+9)& (0+127)
   258  001E  01BA               	clrf	(__pbssBANK0+10)& (0+127)
   259  001F  01BB               	clrf	(__pbssBANK0+11)& (0+127)
   260  0020  01BC               	clrf	(__pbssBANK0+12)& (0+127)
   261  0021                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  0021                     __end_of__initialization:
   265  0021  0183               	clrf	3
   266  0022  120A  118A  299A   	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	bssCOMMON
   269  0078                     __pbssCOMMON:
   270  0078                     _banderas_7seg:
   271  0078                     	ds	1
   272                           
   273                           	psect	bssBANK0
   274  0030                     __pbssBANK0:
   275  0030                     _display:
   276  0030                     	ds	10
   277  003A                     _unidad:
   278  003A                     	ds	1
   279  003B                     _decena:
   280  003B                     	ds	1
   281  003C                     _centena:
   282  003C                     	ds	1
   283                           
   284                           	psect	cstackCOMMON
   285  0070                     __pcstackCOMMON:
   286  0070                     ?_setup:
   287  0070                     ?_main:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_reset_timer0:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ??_reset_timer0:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_isr:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ??_isr:	
   300                           ; 1 bytes @ 0x0
   301                           
   302                           
   303                           ; 1 bytes @ 0x0
   304  0070                     	ds	5
   305  0075                     ??_setup:
   306  0075                     ?___bmul:	
   307                           ; 1 bytes @ 0x5
   308                           
   309  0075                     ??___awdiv:	
   310                           ; 1 bytes @ 0x5
   311                           
   312  0075                     ___bmul@multiplicand:	
   313                           ; 1 bytes @ 0x5
   314                           
   315                           
   316                           ; 1 bytes @ 0x5
   317  0075                     	ds	1
   318  0076                     ??___bmul:
   319                           
   320                           ; 1 bytes @ 0x6
   321  0076                     	ds	1
   322  0077                     divide@a:
   323                           
   324                           ; 1 bytes @ 0x7
   325  0077                     	ds	1
   326                           
   327                           	psect	cstackBANK0
   328  0020                     __pcstackBANK0:
   329  0020                     ?___awdiv:
   330  0020                     ___bmul@product:	
   331                           ; 2 bytes @ 0x0
   332                           
   333  0020                     ___awdiv@divisor:	
   334                           ; 1 bytes @ 0x0
   335                           
   336                           
   337                           ; 2 bytes @ 0x0
   338  0020                     	ds	1
   339  0021                     ___bmul@multiplier:
   340                           
   341                           ; 1 bytes @ 0x1
   342  0021                     	ds	1
   343  0022                     ___awdiv@dividend:
   344                           
   345                           ; 2 bytes @ 0x2
   346  0022                     	ds	2
   347  0024                     ___awdiv@counter:
   348                           
   349                           ; 1 bytes @ 0x4
   350  0024                     	ds	1
   351  0025                     ___awdiv@sign:
   352                           
   353                           ; 1 bytes @ 0x5
   354  0025                     	ds	1
   355  0026                     ___awdiv@quotient:
   356                           
   357                           ; 2 bytes @ 0x6
   358  0026                     	ds	2
   359  0028                     ?_divide:
   360  0028                     divide@b:	
   361                           ; 1 bytes @ 0x8
   362                           
   363                           
   364                           ; 1 bytes @ 0x8
   365  0028                     	ds	1
   366  0029                     divide@c:
   367                           
   368                           ; 1 bytes @ 0x9
   369  0029                     	ds	1
   370  002A                     ??_divide:
   371                           
   372                           ; 1 bytes @ 0xA
   373  002A                     	ds	4
   374  002E                     ??_main:
   375                           
   376                           ; 1 bytes @ 0xE
   377  002E                     	ds	2
   378                           
   379                           	psect	maintext
   380  019A                     __pmaintext:	
   381 ;;
   382 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   383 ;;
   384 ;; *************** function _main *****************
   385 ;; Defined at:
   386 ;;		line 58 in file "Main.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : B00/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   400 ;;      Params:         0       0       0       0       0
   401 ;;      Locals:         0       0       0       0       0
   402 ;;      Temps:          0       2       0       0       0
   403 ;;      Totals:         0       2       0       0       0
   404 ;;Total ram usage:        2 bytes
   405 ;; Hardware stack levels required when called: 4
   406 ;; This function calls:
   407 ;;		_divide
   408 ;;		_setup
   409 ;; This function is called by:
   410 ;;		Startup code after reset
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           
   415                           ;psect for function _main
   416  019A                     _main:
   417  019A                     l1197:	
   418                           ;incstack = 0
   419                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   420                           
   421                           
   422                           ;Main.c: 59:     setup();
   423  019A  120A  118A  20EC  120A  118A  	fcall	_setup
   424  019F                     l1199:
   425                           
   426                           ;Main.c: 61:         divide(&centena, &decena, &unidad);
   427  019F  303B               	movlw	(low (_decena| 0))& (0+255)
   428  01A0  1283               	bcf	3,5	;RP0=0, select bank0
   429  01A1  1303               	bcf	3,6	;RP1=0, select bank0
   430  01A2  00AE               	movwf	??_main
   431  01A3  082E               	movf	??_main,w
   432  01A4  00A8               	movwf	divide@b
   433  01A5  303A               	movlw	(low (_unidad| 0))& (0+255)
   434  01A6  00AF               	movwf	??_main+1
   435  01A7  082F               	movf	??_main+1,w
   436  01A8  00A9               	movwf	divide@c
   437  01A9  303C               	movlw	(low (_centena| 0))& (0+255)
   438  01AA  120A  118A  2144  120A  118A  	fcall	_divide
   439  01AF  299F               	goto	l1199
   440  01B0  120A  118A  280E   	ljmp	start
   441  01B3                     __end_of_main:
   442                           
   443                           	psect	text1
   444  00EC                     __ptext1:	
   445 ;; *************** function _setup *****************
   446 ;; Defined at:
   447 ;;		line 79 in file "Main.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, status,2, status,0
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   461 ;;      Params:         0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0
   463 ;;      Temps:          1       0       0       0       0
   464 ;;      Totals:         1       0       0       0       0
   465 ;;Total ram usage:        1 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; Hardware stack levels required when called: 2
   468 ;; This function calls:
   469 ;;		Nothing
   470 ;; This function is called by:
   471 ;;		_main
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           
   476                           ;psect for function _setup
   477  00EC                     _setup:
   478  00EC                     l971:	
   479                           ;incstack = 0
   480                           ; Regs used in _setup: [wreg+status,2+status,0]
   481                           
   482                           
   483                           ;Main.c: 81:     ANSEL = 0;
   484  00EC  1683               	bsf	3,5	;RP0=1, select bank3
   485  00ED  1703               	bsf	3,6	;RP1=1, select bank3
   486  00EE  0188               	clrf	8	;volatile
   487                           
   488                           ;Main.c: 82:     ANSELH = 0;
   489  00EF  0189               	clrf	9	;volatile
   490                           
   491                           ;Main.c: 83:     TRISA = 0;
   492  00F0  1683               	bsf	3,5	;RP0=1, select bank1
   493  00F1  1303               	bcf	3,6	;RP1=0, select bank1
   494  00F2  0185               	clrf	5	;volatile
   495                           
   496                           ;Main.c: 84:     TRISB = 0;
   497  00F3  0186               	clrf	6	;volatile
   498                           
   499                           ;Main.c: 85:     TRISC = 0;
   500  00F4  0187               	clrf	7	;volatile
   501                           
   502                           ;Main.c: 86:     TRISD = 0;
   503  00F5  0188               	clrf	8	;volatile
   504                           
   505                           ;Main.c: 87:     TRISE = 0;
   506  00F6  0189               	clrf	9	;volatile
   507  00F7                     l973:
   508                           
   509                           ;Main.c: 88:     TRISBbits.TRISB0 = 1;
   510  00F7  1406               	bsf	6,0	;volatile
   511  00F8                     l975:
   512                           
   513                           ;Main.c: 89:     TRISBbits.TRISB1 = 1;
   514  00F8  1486               	bsf	6,1	;volatile
   515  00F9                     l977:
   516                           
   517                           ;Main.c: 90:     OPTION_REGbits.nRBPU = 0;
   518  00F9  1381               	bcf	1,7	;volatile
   519  00FA                     l979:
   520                           
   521                           ;Main.c: 91:     WPUBbits.WPUB0 = 1;
   522  00FA  1415               	bsf	21,0	;volatile
   523  00FB                     l981:
   524                           
   525                           ;Main.c: 92:     WPUBbits.WPUB1 = 1;
   526  00FB  1495               	bsf	21,1	;volatile
   527  00FC                     l983:
   528                           
   529                           ;Main.c: 95:     INTCONbits.GIE = 1;
   530  00FC  178B               	bsf	11,7	;volatile
   531  00FD                     l985:
   532                           
   533                           ;Main.c: 96:     INTCONbits.T0IF = 0;
   534  00FD  110B               	bcf	11,2	;volatile
   535  00FE                     l987:
   536                           
   537                           ;Main.c: 97:     INTCONbits.RBIF = 0;
   538  00FE  100B               	bcf	11,0	;volatile
   539  00FF                     l989:
   540                           
   541                           ;Main.c: 98:     INTCONbits.RBIE = 1;
   542  00FF  158B               	bsf	11,3	;volatile
   543  0100                     l991:
   544                           
   545                           ;Main.c: 99:     INTCONbits.T0IE = 1;
   546  0100  168B               	bsf	11,5	;volatile
   547  0101                     l993:
   548                           
   549                           ;Main.c: 100:     IOCBbits.IOCB0 = 1;
   550  0101  1416               	bsf	22,0	;volatile
   551  0102                     l995:
   552                           
   553                           ;Main.c: 101:     IOCBbits.IOCB1 = 1;
   554  0102  1496               	bsf	22,1	;volatile
   555  0103                     l997:
   556                           
   557                           ;Main.c: 104:     INTCONbits.T0IF = 0;
   558  0103  110B               	bcf	11,2	;volatile
   559  0104                     l999:
   560                           
   561                           ;Main.c: 105:     TMR0 = 8;
   562  0104  3008               	movlw	8
   563  0105  1283               	bcf	3,5	;RP0=0, select bank0
   564  0106  1303               	bcf	3,6	;RP1=0, select bank0
   565  0107  0081               	movwf	1	;volatile
   566  0108                     l1001:
   567                           
   568                           ;Main.c: 106:     OPTION_REGbits.T0CS = 0;
   569  0108  1683               	bsf	3,5	;RP0=1, select bank1
   570  0109  1303               	bcf	3,6	;RP1=0, select bank1
   571  010A  1281               	bcf	1,5	;volatile
   572  010B                     l1003:
   573                           
   574                           ;Main.c: 107:     OPTION_REGbits.PS = 0;
   575  010B  30F8               	movlw	-8
   576  010C  0581               	andwf	1,f	;volatile
   577  010D                     l1005:
   578                           
   579                           ;Main.c: 108:     OPTION_REGbits.PS0 = 0;
   580  010D  1001               	bcf	1,0	;volatile
   581  010E                     l1007:
   582                           
   583                           ;Main.c: 109:     OPTION_REGbits.PS1 = 1;
   584  010E  1481               	bsf	1,1	;volatile
   585  010F                     l1009:
   586                           
   587                           ;Main.c: 110:     OPTION_REGbits.PS2 = 1;
   588  010F  1501               	bsf	1,2	;volatile
   589  0110                     l1011:
   590                           
   591                           ;Main.c: 113:     PORTA = 1;
   592  0110  3001               	movlw	1
   593  0111  1283               	bcf	3,5	;RP0=0, select bank0
   594  0112  1303               	bcf	3,6	;RP1=0, select bank0
   595  0113  0085               	movwf	5	;volatile
   596  0114                     l1013:
   597                           
   598                           ;Main.c: 114:     PORTB = 0;
   599  0114  0186               	clrf	6	;volatile
   600  0115                     l1015:
   601                           
   602                           ;Main.c: 115:     RB0 = 1;
   603  0115  1406               	bsf	6,0	;volatile
   604  0116                     l1017:
   605                           
   606                           ;Main.c: 116:     RB1 = 1;
   607  0116  1486               	bsf	6,1	;volatile
   608  0117                     l1019:
   609                           
   610                           ;Main.c: 117:     PORTC = 15;
   611  0117  300F               	movlw	15
   612  0118  0087               	movwf	7	;volatile
   613  0119                     l1021:
   614                           
   615                           ;Main.c: 118:     PORTD = 0;
   616  0119  0188               	clrf	8	;volatile
   617  011A                     l1023:
   618                           
   619                           ;Main.c: 119:     PORTE = 0;
   620  011A  0189               	clrf	9	;volatile
   621  011B                     l1025:
   622                           
   623                           ;Main.c: 121:     display[0]=0b00111111;
   624  011B  303F               	movlw	63
   625  011C  00F5               	movwf	??_setup
   626  011D  0875               	movf	??_setup,w
   627  011E  00B0               	movwf	_display
   628  011F                     l1027:
   629                           
   630                           ;Main.c: 122:     display[1]=0b00000110;
   631  011F  3006               	movlw	6
   632  0120  00F5               	movwf	??_setup
   633  0121  0875               	movf	??_setup,w
   634  0122  00B1               	movwf	_display+1
   635  0123                     l1029:
   636                           
   637                           ;Main.c: 123:     display[2]=0b01011011;
   638  0123  305B               	movlw	91
   639  0124  00F5               	movwf	??_setup
   640  0125  0875               	movf	??_setup,w
   641  0126  00B2               	movwf	_display+2
   642  0127                     l1031:
   643                           
   644                           ;Main.c: 124:     display[3]=0b01001111;
   645  0127  304F               	movlw	79
   646  0128  00F5               	movwf	??_setup
   647  0129  0875               	movf	??_setup,w
   648  012A  00B3               	movwf	_display+3
   649  012B                     l1033:
   650                           
   651                           ;Main.c: 125:     display[4]=0b01100110;
   652  012B  3066               	movlw	102
   653  012C  00F5               	movwf	??_setup
   654  012D  0875               	movf	??_setup,w
   655  012E  00B4               	movwf	_display+4
   656  012F                     l1035:
   657                           
   658                           ;Main.c: 126:     display[5]=0b01101101;
   659  012F  306D               	movlw	109
   660  0130  00F5               	movwf	??_setup
   661  0131  0875               	movf	??_setup,w
   662  0132  00B5               	movwf	_display+5
   663  0133                     l1037:
   664                           
   665                           ;Main.c: 127:     display[6]=0b01111101;
   666  0133  307D               	movlw	125
   667  0134  00F5               	movwf	??_setup
   668  0135  0875               	movf	??_setup,w
   669  0136  00B6               	movwf	_display+6
   670  0137                     l1039:
   671                           
   672                           ;Main.c: 128:     display[7]=0b00000111;
   673  0137  3007               	movlw	7
   674  0138  00F5               	movwf	??_setup
   675  0139  0875               	movf	??_setup,w
   676  013A  00B7               	movwf	_display+7
   677  013B                     l1041:
   678                           
   679                           ;Main.c: 129:     display[8]=0b01111111;
   680  013B  307F               	movlw	127
   681  013C  00F5               	movwf	??_setup
   682  013D  0875               	movf	??_setup,w
   683  013E  00B8               	movwf	_display+8
   684  013F                     l1043:
   685                           
   686                           ;Main.c: 130:     display[9]=0b01100111;
   687  013F  3067               	movlw	103
   688  0140  00F5               	movwf	??_setup
   689  0141  0875               	movf	??_setup,w
   690  0142  00B9               	movwf	_display+9
   691  0143                     l75:
   692  0143  0008               	return
   693  0144                     __end_of_setup:
   694                           
   695                           	psect	text2
   696  0144                     __ptext2:	
   697 ;; *************** function _divide *****************
   698 ;; Defined at:
   699 ;;		line 141 in file "Main.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  a               1    wreg     PTR unsigned char 
   702 ;;		 -> centena(1), 
   703 ;;  b               1    8[BANK0 ] PTR unsigned char 
   704 ;;		 -> decena(1), 
   705 ;;  c               1    9[BANK0 ] PTR unsigned char 
   706 ;;		 -> unidad(1), 
   707 ;; Auto vars:     Size  Location     Type
   708 ;;  a               1    7[COMMON] PTR unsigned char 
   709 ;;		 -> centena(1), 
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   719 ;;      Params:         0       2       0       0       0
   720 ;;      Locals:         1       0       0       0       0
   721 ;;      Temps:          0       4       0       0       0
   722 ;;      Totals:         1       6       0       0       0
   723 ;;Total ram usage:        7 bytes
   724 ;; Hardware stack levels used: 1
   725 ;; Hardware stack levels required when called: 3
   726 ;; This function calls:
   727 ;;		___awdiv
   728 ;;		___bmul
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _divide
   736  0144                     _divide:
   737                           
   738                           ;incstack = 0
   739                           ; Regs used in _divide: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   740                           ;divide@a stored from wreg
   741  0144  00F7               	movwf	divide@a
   742  0145                     l1195:
   743                           
   744                           ;Main.c: 142:     *a=PORTC/100;
   745  0145  3064               	movlw	100
   746  0146  1283               	bcf	3,5	;RP0=0, select bank0
   747  0147  1303               	bcf	3,6	;RP1=0, select bank0
   748  0148  00A0               	movwf	___awdiv@divisor
   749  0149  3000               	movlw	0
   750  014A  00A1               	movwf	___awdiv@divisor+1
   751  014B  0807               	movf	7,w	;volatile
   752  014C  00AA               	movwf	??_divide
   753  014D  01AB               	clrf	??_divide+1
   754  014E  082A               	movf	??_divide,w
   755  014F  00A2               	movwf	___awdiv@dividend
   756  0150  082B               	movf	??_divide+1,w
   757  0151  00A3               	movwf	___awdiv@dividend+1
   758  0152  120A  118A  2025  120A  118A  	fcall	___awdiv
   759  0157  1283               	bcf	3,5	;RP0=0, select bank0
   760  0158  1303               	bcf	3,6	;RP1=0, select bank0
   761  0159  0820               	movf	?___awdiv,w
   762  015A  00AC               	movwf	??_divide+2
   763  015B  0877               	movf	divide@a,w
   764  015C  0084               	movwf	4
   765  015D  082C               	movf	??_divide+2,w
   766  015E  1383               	bcf	3,7	;select IRP bank0
   767  015F  0080               	movwf	0
   768                           
   769                           ;Main.c: 143:     *b=(PORTC-centena)/10;
   770  0160  300A               	movlw	10
   771  0161  00A0               	movwf	___awdiv@divisor
   772  0162  3000               	movlw	0
   773  0163  00A1               	movwf	___awdiv@divisor+1
   774  0164  083C               	movf	_centena,w
   775  0165  0207               	subwf	7,w	;volatile
   776  0166  00A2               	movwf	___awdiv@dividend
   777  0167  01A3               	clrf	___awdiv@dividend+1
   778  0168  1C03               	skipc
   779  0169  03A3               	decf	___awdiv@dividend+1,f
   780  016A  120A  118A  2025  120A  118A  	fcall	___awdiv
   781  016F  1283               	bcf	3,5	;RP0=0, select bank0
   782  0170  1303               	bcf	3,6	;RP1=0, select bank0
   783  0171  0820               	movf	?___awdiv,w
   784  0172  00AA               	movwf	??_divide
   785  0173  0828               	movf	divide@b,w
   786  0174  0084               	movwf	4
   787  0175  082A               	movf	??_divide,w
   788  0176  1383               	bcf	3,7	;select IRP bank0
   789  0177  0080               	movwf	0
   790                           
   791                           ;Main.c: 144:     *c=PORTC-100*centena-10*decena;
   792  0178  309C               	movlw	156
   793  0179  00AA               	movwf	??_divide
   794  017A  082A               	movf	??_divide,w
   795  017B  00F5               	movwf	___bmul@multiplicand
   796  017C  083C               	movf	_centena,w
   797  017D  120A  118A  21B3  120A  118A  	fcall	___bmul
   798  0182  1283               	bcf	3,5	;RP0=0, select bank0
   799  0183  1303               	bcf	3,6	;RP1=0, select bank0
   800  0184  00AB               	movwf	??_divide+1
   801  0185  30F6               	movlw	246
   802  0186  00AC               	movwf	??_divide+2
   803  0187  082C               	movf	??_divide+2,w
   804  0188  00F5               	movwf	___bmul@multiplicand
   805  0189  083B               	movf	_decena,w
   806  018A  120A  118A  21B3  120A  118A  	fcall	___bmul
   807  018F  1283               	bcf	3,5	;RP0=0, select bank0
   808  0190  1303               	bcf	3,6	;RP1=0, select bank0
   809  0191  072B               	addwf	??_divide+1,w
   810  0192  0707               	addwf	7,w	;volatile
   811  0193  00AD               	movwf	??_divide+3
   812  0194  0829               	movf	divide@c,w
   813  0195  0084               	movwf	4
   814  0196  082D               	movf	??_divide+3,w
   815  0197  1383               	bcf	3,7	;select IRP bank0
   816  0198  0080               	movwf	0
   817  0199                     l81:
   818  0199  0008               	return
   819  019A                     __end_of_divide:
   820                           
   821                           	psect	text3
   822  01B3                     __ptext3:	
   823 ;; *************** function ___bmul *****************
   824 ;; Defined at:
   825 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  multiplier      1    wreg     unsigned char 
   828 ;;  multiplicand    1    5[COMMON] unsigned char 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  multiplier      1    1[BANK0 ] unsigned char 
   831 ;;  product         1    0[BANK0 ] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      unsigned char 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         1       0       0       0       0
   842 ;;      Locals:         0       2       0       0       0
   843 ;;      Temps:          1       0       0       0       0
   844 ;;      Totals:         2       2       0       0       0
   845 ;;Total ram usage:        4 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 2
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_divide
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function ___bmul
   857  01B3                     ___bmul:
   858                           
   859                           ;incstack = 0
   860                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   861                           ;___bmul@multiplier stored from wreg
   862  01B3  1283               	bcf	3,5	;RP0=0, select bank0
   863  01B4  1303               	bcf	3,6	;RP1=0, select bank0
   864  01B5  00A1               	movwf	___bmul@multiplier
   865  01B6                     l1137:
   866  01B6  01A0               	clrf	___bmul@product
   867  01B7                     l1139:
   868  01B7  1C21               	btfss	___bmul@multiplier,0
   869  01B8  29BA               	goto	u331
   870  01B9  29BB               	goto	u330
   871  01BA                     u331:
   872  01BA  29BF               	goto	l1143
   873  01BB                     u330:
   874  01BB                     l1141:
   875  01BB  0875               	movf	___bmul@multiplicand,w
   876  01BC  00F6               	movwf	??___bmul
   877  01BD  0876               	movf	??___bmul,w
   878  01BE  07A0               	addwf	___bmul@product,f
   879  01BF                     l1143:
   880  01BF  1003               	clrc
   881  01C0  0DF5               	rlf	___bmul@multiplicand,f
   882  01C1                     l1145:
   883  01C1  1003               	clrc
   884  01C2  0CA1               	rrf	___bmul@multiplier,f
   885  01C3  0821               	movf	___bmul@multiplier,w
   886  01C4  1D03               	btfss	3,2
   887  01C5  29C7               	goto	u341
   888  01C6  29C8               	goto	u340
   889  01C7                     u341:
   890  01C7  29B7               	goto	l1139
   891  01C8                     u340:
   892  01C8                     l1147:
   893  01C8  0820               	movf	___bmul@product,w
   894  01C9                     l209:
   895  01C9  0008               	return
   896  01CA                     __end_of___bmul:
   897                           
   898                           	psect	text4
   899  0025                     __ptext4:	
   900 ;; *************** function ___awdiv *****************
   901 ;; Defined at:
   902 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  divisor         2    0[BANK0 ] int 
   905 ;;  dividend        2    2[BANK0 ] int 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  quotient        2    6[BANK0 ] int 
   908 ;;  sign            1    5[BANK0 ] unsigned char 
   909 ;;  counter         1    4[BANK0 ] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  2    0[BANK0 ] int 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       4       0       0       0
   920 ;;      Locals:         0       4       0       0       0
   921 ;;      Temps:          1       0       0       0       0
   922 ;;      Totals:         1       8       0       0       0
   923 ;;Total ram usage:        9 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 2
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_divide
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function ___awdiv
   935  0025                     ___awdiv:
   936  0025                     l1151:	
   937                           ;incstack = 0
   938                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   939                           
   940  0025  1283               	bcf	3,5	;RP0=0, select bank0
   941  0026  1303               	bcf	3,6	;RP1=0, select bank0
   942  0027  01A5               	clrf	___awdiv@sign
   943  0028                     l1153:
   944  0028  1FA1               	btfss	___awdiv@divisor+1,7
   945  0029  282B               	goto	u351
   946  002A  282C               	goto	u350
   947  002B                     u351:
   948  002B  2833               	goto	l1159
   949  002C                     u350:
   950  002C                     l1155:
   951  002C  09A0               	comf	___awdiv@divisor,f
   952  002D  09A1               	comf	___awdiv@divisor+1,f
   953  002E  0AA0               	incf	___awdiv@divisor,f
   954  002F  1903               	skipnz
   955  0030  0AA1               	incf	___awdiv@divisor+1,f
   956  0031                     l1157:
   957  0031  01A5               	clrf	___awdiv@sign
   958  0032  0AA5               	incf	___awdiv@sign,f
   959  0033                     l1159:
   960  0033  1FA3               	btfss	___awdiv@dividend+1,7
   961  0034  2836               	goto	u361
   962  0035  2837               	goto	u360
   963  0036                     u361:
   964  0036  2840               	goto	l1165
   965  0037                     u360:
   966  0037                     l1161:
   967  0037  09A2               	comf	___awdiv@dividend,f
   968  0038  09A3               	comf	___awdiv@dividend+1,f
   969  0039  0AA2               	incf	___awdiv@dividend,f
   970  003A  1903               	skipnz
   971  003B  0AA3               	incf	___awdiv@dividend+1,f
   972  003C                     l1163:
   973  003C  3001               	movlw	1
   974  003D  00F5               	movwf	??___awdiv
   975  003E  0875               	movf	??___awdiv,w
   976  003F  06A5               	xorwf	___awdiv@sign,f
   977  0040                     l1165:
   978  0040  01A6               	clrf	___awdiv@quotient
   979  0041  01A7               	clrf	___awdiv@quotient+1
   980  0042                     l1167:
   981  0042  0820               	movf	___awdiv@divisor,w
   982  0043  0421               	iorwf	___awdiv@divisor+1,w
   983  0044  1903               	btfsc	3,2
   984  0045  2847               	goto	u371
   985  0046  2848               	goto	u370
   986  0047                     u371:
   987  0047  287F               	goto	l1187
   988  0048                     u370:
   989  0048                     l1169:
   990  0048  01A4               	clrf	___awdiv@counter
   991  0049  0AA4               	incf	___awdiv@counter,f
   992  004A  2856               	goto	l1175
   993  004B                     l1171:
   994  004B  3001               	movlw	1
   995  004C                     u385:
   996  004C  1003               	clrc
   997  004D  0DA0               	rlf	___awdiv@divisor,f
   998  004E  0DA1               	rlf	___awdiv@divisor+1,f
   999  004F  3EFF               	addlw	-1
  1000  0050  1D03               	skipz
  1001  0051  284C               	goto	u385
  1002  0052                     l1173:
  1003  0052  3001               	movlw	1
  1004  0053  00F5               	movwf	??___awdiv
  1005  0054  0875               	movf	??___awdiv,w
  1006  0055  07A4               	addwf	___awdiv@counter,f
  1007  0056                     l1175:
  1008  0056  1FA1               	btfss	___awdiv@divisor+1,7
  1009  0057  2859               	goto	u391
  1010  0058  285A               	goto	u390
  1011  0059                     u391:
  1012  0059  284B               	goto	l1171
  1013  005A                     u390:
  1014  005A                     l1177:
  1015  005A  3001               	movlw	1
  1016  005B                     u405:
  1017  005B  1003               	clrc
  1018  005C  0DA6               	rlf	___awdiv@quotient,f
  1019  005D  0DA7               	rlf	___awdiv@quotient+1,f
  1020  005E  3EFF               	addlw	-1
  1021  005F  1D03               	skipz
  1022  0060  285B               	goto	u405
  1023  0061  0821               	movf	___awdiv@divisor+1,w
  1024  0062  0223               	subwf	___awdiv@dividend+1,w
  1025  0063  1D03               	skipz
  1026  0064  2867               	goto	u415
  1027  0065  0820               	movf	___awdiv@divisor,w
  1028  0066  0222               	subwf	___awdiv@dividend,w
  1029  0067                     u415:
  1030  0067  1C03               	skipc
  1031  0068  286A               	goto	u411
  1032  0069  286B               	goto	u410
  1033  006A                     u411:
  1034  006A  2872               	goto	l1183
  1035  006B                     u410:
  1036  006B                     l1179:
  1037  006B  0820               	movf	___awdiv@divisor,w
  1038  006C  02A2               	subwf	___awdiv@dividend,f
  1039  006D  0821               	movf	___awdiv@divisor+1,w
  1040  006E  1C03               	skipc
  1041  006F  03A3               	decf	___awdiv@dividend+1,f
  1042  0070  02A3               	subwf	___awdiv@dividend+1,f
  1043  0071                     l1181:
  1044  0071  1426               	bsf	___awdiv@quotient,0
  1045  0072                     l1183:
  1046  0072  3001               	movlw	1
  1047  0073                     u425:
  1048  0073  1003               	clrc
  1049  0074  0CA1               	rrf	___awdiv@divisor+1,f
  1050  0075  0CA0               	rrf	___awdiv@divisor,f
  1051  0076  3EFF               	addlw	-1
  1052  0077  1D03               	skipz
  1053  0078  2873               	goto	u425
  1054  0079                     l1185:
  1055  0079  3001               	movlw	1
  1056  007A  02A4               	subwf	___awdiv@counter,f
  1057  007B  1D03               	btfss	3,2
  1058  007C  287E               	goto	u431
  1059  007D  287F               	goto	u430
  1060  007E                     u431:
  1061  007E  285A               	goto	l1177
  1062  007F                     u430:
  1063  007F                     l1187:
  1064  007F  0825               	movf	___awdiv@sign,w
  1065  0080  1903               	btfsc	3,2
  1066  0081  2883               	goto	u441
  1067  0082  2884               	goto	u440
  1068  0083                     u441:
  1069  0083  2889               	goto	l1191
  1070  0084                     u440:
  1071  0084                     l1189:
  1072  0084  09A6               	comf	___awdiv@quotient,f
  1073  0085  09A7               	comf	___awdiv@quotient+1,f
  1074  0086  0AA6               	incf	___awdiv@quotient,f
  1075  0087  1903               	skipnz
  1076  0088  0AA7               	incf	___awdiv@quotient+1,f
  1077  0089                     l1191:
  1078  0089  0827               	movf	___awdiv@quotient+1,w
  1079  008A  00A1               	movwf	?___awdiv+1
  1080  008B  0826               	movf	___awdiv@quotient,w
  1081  008C  00A0               	movwf	?___awdiv
  1082  008D                     l336:
  1083  008D  0008               	return
  1084  008E                     __end_of___awdiv:
  1085                           
  1086                           	psect	text5
  1087  008E                     __ptext5:	
  1088 ;; *************** function _isr *****************
  1089 ;; Defined at:
  1090 ;;		line 152 in file "Main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0
  1106 ;;      Temps:          5       0       0       0       0
  1107 ;;      Totals:         5       0       0       0       0
  1108 ;;Total ram usage:        5 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; Hardware stack levels required when called: 1
  1111 ;; This function calls:
  1112 ;;		_reset_timer0
  1113 ;; This function is called by:
  1114 ;;		Interrupt level 1
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           
  1119                           ;psect for function _isr
  1120  008E                     _isr:
  1121  008E                     i1l1065:
  1122                           
  1123                           ;Main.c: 153:     if (T0IF==1){
  1124  008E  1D0B               	btfss	11,2	;volatile
  1125  008F  2891               	goto	u29_21
  1126  0090  2892               	goto	u29_20
  1127  0091                     u29_21:
  1128  0091  28CC               	goto	i1l86
  1129  0092                     u29_20:
  1130  0092                     i1l1067:
  1131                           
  1132                           ;Main.c: 154:         reset_timer0();
  1133  0092  120A  118A  21CA  120A  118A  	fcall	_reset_timer0
  1134                           
  1135                           ;Main.c: 155:         switch(PORTA){
  1136  0097  28B6               	goto	i1l1089
  1137  0098                     i1l88:	
  1138                           ;Main.c: 156:             case 1:
  1139                           
  1140                           
  1141                           ;Main.c: 157:                 RA0=0;
  1142  0098  1005               	bcf	5,0	;volatile
  1143  0099                     i1l1069:
  1144                           
  1145                           ;Main.c: 158:                 PORTD=display[decena];
  1146  0099  083B               	movf	_decena,w
  1147  009A  3E30               	addlw	(low (_display| 0))& (0+255)
  1148  009B  0084               	movwf	4
  1149  009C  1383               	bcf	3,7	;select IRP bank0
  1150  009D  0800               	movf	0,w
  1151  009E  0088               	movwf	8	;volatile
  1152  009F                     i1l1071:
  1153                           
  1154                           ;Main.c: 159:                 RA1=1;
  1155  009F  1485               	bsf	5,1	;volatile
  1156  00A0                     i1l1073:
  1157                           
  1158                           ;Main.c: 160:                 RA2=0;
  1159  00A0  1105               	bcf	5,2	;volatile
  1160                           
  1161                           ;Main.c: 161:                 break;
  1162  00A1  28CB               	goto	i1l89
  1163  00A2                     i1l90:	
  1164                           ;Main.c: 163:             case 2:
  1165                           
  1166                           
  1167                           ;Main.c: 164:                 RA1=0;
  1168  00A2  1085               	bcf	5,1	;volatile
  1169  00A3                     i1l1075:
  1170                           
  1171                           ;Main.c: 165:                 PORTD=display[unidad];
  1172  00A3  083A               	movf	_unidad,w
  1173  00A4  3E30               	addlw	(low (_display| 0))& (0+255)
  1174  00A5  0084               	movwf	4
  1175  00A6  1383               	bcf	3,7	;select IRP bank0
  1176  00A7  0800               	movf	0,w
  1177  00A8  0088               	movwf	8	;volatile
  1178  00A9                     i1l1077:
  1179                           
  1180                           ;Main.c: 166:                 RA2=1;
  1181  00A9  1505               	bsf	5,2	;volatile
  1182  00AA                     i1l1079:
  1183                           
  1184                           ;Main.c: 167:                 RA0=0;
  1185  00AA  1005               	bcf	5,0	;volatile
  1186                           
  1187                           ;Main.c: 168:                 break;
  1188  00AB  28CB               	goto	i1l89
  1189  00AC                     i1l91:	
  1190                           ;Main.c: 170:             case 4:
  1191                           
  1192                           
  1193                           ;Main.c: 171:                 RA2=0;
  1194  00AC  1105               	bcf	5,2	;volatile
  1195  00AD                     i1l1081:
  1196                           
  1197                           ;Main.c: 172:                 PORTD=display[centena];
  1198  00AD  083C               	movf	_centena,w
  1199  00AE  3E30               	addlw	(low (_display| 0))& (0+255)
  1200  00AF  0084               	movwf	4
  1201  00B0  1383               	bcf	3,7	;select IRP bank0
  1202  00B1  0800               	movf	0,w
  1203  00B2  0088               	movwf	8	;volatile
  1204  00B3                     i1l1083:
  1205                           
  1206                           ;Main.c: 173:                 RA0=1;
  1207  00B3  1405               	bsf	5,0	;volatile
  1208  00B4                     i1l1085:
  1209                           
  1210                           ;Main.c: 174:                 RA1=0;
  1211  00B4  1085               	bcf	5,1	;volatile
  1212                           
  1213                           ;Main.c: 175:                 break;
  1214  00B5  28CB               	goto	i1l89
  1215  00B6                     i1l1089:
  1216  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1217  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1218  00B8  0805               	movf	5,w	;volatile
  1219  00B9  00F0               	movwf	??_isr
  1220  00BA  01F1               	clrf	??_isr+1
  1221                           
  1222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1223                           ; Switch size 1, requested type "simple"
  1224                           ; Number of cases is 1, Range of values is 0 to 0
  1225                           ; switch strategies available:
  1226                           ; Name         Instructions Cycles
  1227                           ; simple_byte            4     3 (average)
  1228                           ; direct_byte           11     8 (fixed)
  1229                           ; jumptable            260     6 (fixed)
  1230                           ;	Chosen strategy is simple_byte
  1231  00BB  0871               	movf	??_isr+1,w
  1232  00BC  3A00               	xorlw	0	; case 0
  1233  00BD  1903               	skipnz
  1234  00BE  28C0               	goto	i1l1231
  1235  00BF  28CB               	goto	i1l89
  1236  00C0                     i1l1231:
  1237                           
  1238                           ; Switch size 1, requested type "simple"
  1239                           ; Number of cases is 3, Range of values is 1 to 4
  1240                           ; switch strategies available:
  1241                           ; Name         Instructions Cycles
  1242                           ; simple_byte           10     6 (average)
  1243                           ; direct_byte           23    11 (fixed)
  1244                           ; jumptable            263     9 (fixed)
  1245                           ;	Chosen strategy is simple_byte
  1246  00C0  0870               	movf	??_isr,w
  1247  00C1  3A01               	xorlw	1	; case 1
  1248  00C2  1903               	skipnz
  1249  00C3  2898               	goto	i1l88
  1250  00C4  3A03               	xorlw	3	; case 2
  1251  00C5  1903               	skipnz
  1252  00C6  28A2               	goto	i1l90
  1253  00C7  3A06               	xorlw	6	; case 4
  1254  00C8  1903               	skipnz
  1255  00C9  28AC               	goto	i1l91
  1256  00CA  28CB               	goto	i1l89
  1257  00CB                     i1l89:
  1258                           
  1259                           ;Main.c: 178:         T0IF = 0;
  1260  00CB  110B               	bcf	11,2	;volatile
  1261  00CC                     i1l86:	
  1262                           ;Main.c: 179:     }
  1263                           
  1264                           
  1265                           ;Main.c: 180:     if (RBIF==1){
  1266  00CC  1C0B               	btfss	11,0	;volatile
  1267  00CD  28CF               	goto	u30_21
  1268  00CE  28D0               	goto	u30_20
  1269  00CF                     u30_21:
  1270  00CF  28E3               	goto	i1l97
  1271  00D0                     u30_20:
  1272  00D0                     i1l1091:
  1273                           
  1274                           ;Main.c: 181:         if (RB0==0){
  1275  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1276  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1277  00D2  1806               	btfsc	6,0	;volatile
  1278  00D3  28D5               	goto	u31_21
  1279  00D4  28D6               	goto	u31_20
  1280  00D5                     u31_21:
  1281  00D5  28DC               	goto	i1l93
  1282  00D6                     u31_20:
  1283  00D6                     i1l1093:
  1284                           
  1285                           ;Main.c: 182:             PORTC++;
  1286  00D6  3001               	movlw	1
  1287  00D7  00F0               	movwf	??_isr
  1288  00D8  0870               	movf	??_isr,w
  1289  00D9  0787               	addwf	7,f	;volatile
  1290  00DA                     i1l1095:
  1291                           
  1292                           ;Main.c: 183:             RBIF = 0;
  1293  00DA  100B               	bcf	11,0	;volatile
  1294                           
  1295                           ;Main.c: 184:         }
  1296  00DB  28E3               	goto	i1l97
  1297  00DC                     i1l93:	
  1298                           ;Main.c: 185:         else if(RB1==0){
  1299                           
  1300  00DC  1886               	btfsc	6,1	;volatile
  1301  00DD  28DF               	goto	u32_21
  1302  00DE  28E0               	goto	u32_20
  1303  00DF                     u32_21:
  1304  00DF  28DA               	goto	i1l1095
  1305  00E0                     u32_20:
  1306  00E0                     i1l1097:
  1307                           
  1308                           ;Main.c: 186:             PORTC--;
  1309  00E0  3001               	movlw	1
  1310  00E1  0287               	subwf	7,f	;volatile
  1311  00E2  28DA               	goto	i1l1095
  1312  00E3                     i1l97:
  1313  00E3  0874               	movf	??_isr+4,w
  1314  00E4  008A               	movwf	10
  1315  00E5  0873               	movf	??_isr+3,w
  1316  00E6  0084               	movwf	4
  1317  00E7  0E72               	swapf	??_isr+2,w
  1318  00E8  0083               	movwf	3
  1319  00E9  0EFE               	swapf	btemp,f
  1320  00EA  0E7E               	swapf	btemp,w
  1321  00EB  0009               	retfie
  1322  00EC                     __end_of_isr:
  1323                           
  1324                           	psect	intentry
  1325  0004                     __pintentry:	
  1326                           ;incstack = 0
  1327                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1328                           
  1329  0004                     interrupt_function:
  1330  007E                     saved_w	set	btemp
  1331  0004  00FE               	movwf	btemp
  1332  0005  0E03               	swapf	3,w
  1333  0006  00F2               	movwf	??_isr+2
  1334  0007  0804               	movf	4,w
  1335  0008  00F3               	movwf	??_isr+3
  1336  0009  080A               	movf	10,w
  1337  000A  00F4               	movwf	??_isr+4
  1338  000B  120A  118A  288E   	ljmp	_isr
  1339                           
  1340                           	psect	text6
  1341  01CA                     __ptext6:	
  1342 ;; *************** function _reset_timer0 *****************
  1343 ;; Defined at:
  1344 ;;		line 132 in file "Main.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0
  1361 ;;      Totals:         0       0       0       0       0
  1362 ;;Total ram usage:        0 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_isr
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           
  1372                           ;psect for function _reset_timer0
  1373  01CA                     _reset_timer0:
  1374  01CA                     i1l1047:	
  1375                           ;incstack = 0
  1376                           ; Regs used in _reset_timer0: [wreg+status,2+status,0]
  1377                           
  1378                           
  1379                           ;Main.c: 133:     INTCONbits.T0IF = 0;
  1380  01CA  110B               	bcf	11,2	;volatile
  1381  01CB                     i1l1049:
  1382                           
  1383                           ;Main.c: 134:     TMR0 = 8;
  1384  01CB  3008               	movlw	8
  1385  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1386  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1387  01CE  0081               	movwf	1	;volatile
  1388  01CF                     i1l1051:
  1389                           
  1390                           ;Main.c: 135:     OPTION_REGbits.T0CS = 0;
  1391  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  1392  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  1393  01D1  1281               	bcf	1,5	;volatile
  1394  01D2                     i1l1053:
  1395                           
  1396                           ;Main.c: 136:     OPTION_REGbits.PS = 0;
  1397  01D2  30F8               	movlw	-8
  1398  01D3  0581               	andwf	1,f	;volatile
  1399  01D4                     i1l1055:
  1400                           
  1401                           ;Main.c: 137:     OPTION_REGbits.PS0 = 0;
  1402  01D4  1001               	bcf	1,0	;volatile
  1403  01D5                     i1l1057:
  1404                           
  1405                           ;Main.c: 138:     OPTION_REGbits.PS1 = 1;
  1406  01D5  1481               	bsf	1,1	;volatile
  1407  01D6                     i1l1059:
  1408                           
  1409                           ;Main.c: 139:     OPTION_REGbits.PS2 = 1;
  1410  01D6  1501               	bsf	1,2	;volatile
  1411  01D7                     i1l78:
  1412  01D7  0008               	return
  1413  01D8                     __end_of_reset_timer0:
  1414  007E                     btemp	set	126	;btemp
  1415  007E                     wtemp0	set	126
  1416                           
  1417                           	psect	config
  1418                           
  1419                           ;Config register CONFIG1 @ 0x2007
  1420                           ;	Oscillator Selection bits
  1421                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1422                           ;	Watchdog Timer Enable bit
  1423                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1424                           ;	Power-up Timer Enable bit
  1425                           ;	PWRTE = OFF, PWRT disabled
  1426                           ;	RE3/MCLR pin function select bit
  1427                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1428                           ;	Code Protection bit
  1429                           ;	CP = OFF, Program memory code protection is disabled
  1430                           ;	Data Code Protection bit
  1431                           ;	CPD = OFF, Data memory code protection is disabled
  1432                           ;	Brown Out Reset Selection bits
  1433                           ;	BOREN = ON, BOR enabled
  1434                           ;	Internal External Switchover bit
  1435                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1436                           ;	Fail-Safe Clock Monitor Enabled bit
  1437                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1438                           ;	Low Voltage Programming Enable bit
  1439                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1440                           ;	In-Circuit Debugger Mode bit
  1441                           ;	DEBUG = 0x1, unprogrammed default
  1442  2007                     	org	8199
  1443  2007  3FF4               	dw	16372
  1444                           
  1445                           ;Config register CONFIG2 @ 0x2008
  1446                           ;	Brown-out Reset Selection bit
  1447                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1448                           ;	Flash Program Memory Self Write Enable bits
  1449                           ;	WRT = OFF, Write protection off
  1450  2008                     	org	8200
  1451  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80     16      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divide@c	PTR unsigned char  size(1) Largest target is 1
		 -> unidad(BANK0[1]), 

    divide@b	PTR unsigned char  size(1) Largest target is 1
		 -> decena(BANK0[1]), 

    divide@a	PTR unsigned char  size(1) Largest target is 1
		 -> centena(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_divide
    _divide->___bmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divide
    _divide->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1430
                                             14 BANK0      2     2      0
                             _divide
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _divide                                               7     5      2    1430
                                              7 COMMON     1     1      0
                                              8 BANK0      6     4      2
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     316
                                              5 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              5 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
                       _reset_timer0
 ---------------------------------------------------------------------------------
 (4) _reset_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _divide
     ___awdiv
     ___bmul
   _setup

 _isr (ROOT)
   _reset_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      1D       5       36.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Apr 18 20:48:20 2021

         ___bmul@product 0020                       l81 0199                       l75 0143  
           ___awdiv@sign 0025                      l209 01C9                      l336 008D  
                    l971 00EC                      l981 00FB                      l973 00F7  
                    l991 0100                      l983 00FC                      l975 00F8  
                    l993 0101                      l985 00FD                      l977 00F9  
                    l995 0102                      l987 00FE                      l979 00FA  
                    l997 0103                      l989 00FF                      l999 0104  
                    _RA0 0028                      _RA1 0029                      _RB0 0030  
                    _RA2 002A                      _RB1 0031                      u410 006B  
                    u330 01BB                      u411 006A                      u331 01BA  
                    u340 01C8                      u405 005B                      u341 01C7  
                    u430 007F                      u350 002C                      u431 007E  
                    u415 0067                      u351 002B                      u440 0084  
                    u360 0037                      u441 0083                      u425 0073  
                    u361 0036                      u370 0048                      u371 0047  
                    u390 005A                      u391 0059                      u385 004C  
                    _isr 008E                      fsr0 0004                      indf 0000  
                   l1001 0108                     l1011 0110                     l1003 010B  
                   l1021 0119                     l1013 0114                     l1005 010D  
                   l1031 0127                     l1023 011A                     l1015 0115  
                   l1007 010E                     l1041 013B                     l1033 012B  
                   l1025 011B                     l1017 0116                     l1009 010F  
                   l1043 013F                     l1035 012F                     l1027 011F  
                   l1019 0117                     l1141 01BB                     l1037 0133  
                   l1029 0123                     l1151 0025                     l1143 01BF  
                   l1039 0137                     l1161 0037                     l1153 0028  
                   l1145 01C1                     l1137 01B6                     l1171 004B  
                   l1163 003C                     l1155 002C                     l1147 01C8  
                   l1139 01B7                     l1181 0071                     l1173 0052  
                   l1165 0040                     l1157 0031                     l1191 0089  
                   l1183 0072                     l1175 0056                     l1167 0042  
                   l1159 0033                     l1185 0079                     l1177 005A  
                   l1169 0048                     l1179 006B                     l1187 007F  
                   l1195 0145                     l1189 0084                     l1197 019A  
                   l1199 019F                     ?_isr 0070                     _T0IF 005A  
                   _RBIF 0058                     i1l90 00A2                     i1l91 00AC  
                   i1l93 00DC                     i1l78 01D7                     i1l86 00CC  
                   i1l88 0098                     i1l97 00E3                     i1l89 00CB  
                   _TMR0 0001                     _main 019A                     btemp 007E  
                   start 000E        ___bmul@multiplier 0021                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 008E                    _ANSEL 0188  
        ___awdiv@divisor 0020          ___awdiv@counter 0024                    u30_20 00D0  
                  u30_21 00CF                    u31_20 00D6                    u31_21 00D5  
                  u32_20 00E0                    u32_21 00DF                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u29_20 0092                    u29_21 0091  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 00EC  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 01B3                   ??_main 002E  
       ___awdiv@dividend 0022                   ?_setup 0070                   _ANSELH 0189  
                 i1l1051 01CF                   i1l1053 01D2                   i1l1055 01D4  
                 i1l1047 01CA                   i1l1231 00C0                   i1l1071 009F  
                 i1l1057 01D5                   i1l1049 01CB                   i1l1081 00AD  
                 i1l1073 00A0                   i1l1065 008E                   i1l1059 01D6  
                 i1l1091 00D0                   i1l1083 00B3                   i1l1075 00A3  
                 i1l1067 0092                   i1l1093 00D6                   i1l1085 00B4  
                 i1l1077 00A9                   i1l1069 0099                   i1l1095 00DA  
                 i1l1079 00AA                   i1l1097 00E0                   i1l1089 00B6  
                 ___bmul 01B3                ??___awdiv 0075                   _decena 003B  
                 _divide 0144         ___awdiv@quotient 0026                   _unidad 003A  
                 saved_w 007E  __end_of__initialization 0021      ___bmul@multiplicand 0075  
         __pcstackCOMMON 0070            __end_of_setup 0144           _OPTION_REGbits 0081  
                ??_setup 0075               __pbssBANK0 0030               __pmaintext 019A  
                ?___bmul 0075               __pintentry 0004                  ?_divide 0028  
          _banderas_7seg 0078            ?_reset_timer0 0070          __size_of___bmul 0017  
                ___awdiv 0025          __size_of_divide 0056                  _centena 003C  
                __ptext1 00EC                  __ptext2 0144                  __ptext3 01B3  
                __ptext4 0025                  __ptext5 008E                  __ptext6 01CA  
                _display 0030             __size_of_isr 005E                  divide@a 0077  
                divide@b 0028                  divide@c 0029     end_of_initialization 0021  
         ??_reset_timer0 0070                _TRISBbits 0086           __end_of___bmul 01CA  
         __end_of_divide 019A      start_initialization 0011              __end_of_isr 00EC  
               ??___bmul 0076                 ??_divide 002A              __pbssCOMMON 0078  
   __end_of_reset_timer0 01D8                ___latbits 0002            __pcstackBANK0 0020  
               ?___awdiv 0020           __size_of_setup 0058        interrupt_function 0004  
               _IOCBbits 0096                 _WPUBbits 0095         __size_of___awdiv 0069  
  __size_of_reset_timer0 000E            __size_of_main 0019             _reset_timer0 01CA  
             _INTCONbits 000B                 intlevel1 0000  
