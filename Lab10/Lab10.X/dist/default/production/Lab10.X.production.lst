

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun May 09 21:01:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0019                     _TXREG	set	25
   204  0009                     _PORTE	set	9
   205  0008                     _PORTD	set	8
   206  0007                     _PORTC	set	7
   207  0018                     _RCSTAbits	set	24
   208  0006                     _PORTB	set	6
   209  0005                     _PORTA	set	5
   210  001A                     _RCREG	set	26
   211  0065                     _RCIF	set	101
   212  0099                     _SPBRG	set	153
   213  009A                     _SPBRGH	set	154
   214  0098                     _TXSTAbits	set	152
   215  0089                     _TRISE	set	137
   216  0088                     _TRISD	set	136
   217  0087                     _TRISC	set	135
   218  0086                     _TRISB	set	134
   219  0085                     _TRISA	set	133
   220  0189                     _ANSELH	set	393
   221  0188                     _ANSEL	set	392
   222  0C3B                     _BRG16	set	3131
   223                           
   224                           	psect	strings
   225  0003                     __pstrings:
   226  0003                     stringtab:
   227  0003                     __stringtab:
   228  0003                     stringcode:	
   229                           ;	String table - string pointers are 1 byte each
   230                           
   231  0003                     stringdir:
   232  0003  3000               	movlw	high stringdir
   233  0004  008A               	movwf	10
   234  0005  0804               	movf	4,w
   235  0006  0A84               	incf	4,f
   236  0007  0782               	addwf	2,f
   237  0008                     __stringbase:
   238  0008  3400               	retlw	0
   239  0009                     __end_of__stringtab:
   240  0009                     STR_1:
   241  0009  340D               	retlw	13
   242  000A  3451               	retlw	81	;'Q'
   243  000B  3475               	retlw	117	;'u'
   244  000C  3465               	retlw	101	;'e'
   245  000D  3420               	retlw	32	;' '
   246  000E  3464               	retlw	100	;'d'
   247  000F  3465               	retlw	101	;'e'
   248  0010  3473               	retlw	115	;'s'
   249  0011  3465               	retlw	101	;'e'
   250  0012  3461               	retlw	97	;'a'
   251  0013  3420               	retlw	32	;' '
   252  0014  3448               	retlw	72	;'H'
   253  0015  3461               	retlw	97	;'a'
   254  0016  3463               	retlw	99	;'c'
   255  0017  3465               	retlw	101	;'e'
   256  0018  3472               	retlw	114	;'r'
   257  0019  340D               	retlw	13
   258  001A  3428               	retlw	40	;'('
   259  001B  3431               	retlw	49	;'1'
   260  001C  3429               	retlw	41	;')'
   261  001D  3444               	retlw	68	;'D'
   262  001E  3465               	retlw	101	;'e'
   263  001F  3473               	retlw	115	;'s'
   264  0020  3470               	retlw	112	;'p'
   265  0021  346C               	retlw	108	;'l'
   266  0022  3465               	retlw	101	;'e'
   267  0023  3467               	retlw	103	;'g'
   268  0024  3461               	retlw	97	;'a'
   269  0025  3472               	retlw	114	;'r'
   270  0026  3420               	retlw	32	;' '
   271  0027  3443               	retlw	67	;'C'
   272  0028  3461               	retlw	97	;'a'
   273  0029  3464               	retlw	100	;'d'
   274  002A  3465               	retlw	101	;'e'
   275  002B  346E               	retlw	110	;'n'
   276  002C  3461               	retlw	97	;'a'
   277  002D  3420               	retlw	32	;' '
   278  002E  3464               	retlw	100	;'d'
   279  002F  3465               	retlw	101	;'e'
   280  0030  3420               	retlw	32	;' '
   281  0031  3443               	retlw	67	;'C'
   282  0032  3461               	retlw	97	;'a'
   283  0033  3472               	retlw	114	;'r'
   284  0034  3461               	retlw	97	;'a'
   285  0035  3463               	retlw	99	;'c'
   286  0036  3474               	retlw	116	;'t'
   287  0037  3465               	retlw	101	;'e'
   288  0038  3472               	retlw	114	;'r'
   289  0039  3465               	retlw	101	;'e'
   290  003A  3473               	retlw	115	;'s'
   291  003B  340D               	retlw	13
   292  003C  3400               	retlw	0
   293  003D                     STR_2:
   294  003D  3428               	retlw	40	;'('
   295  003E  3432               	retlw	50	;'2'
   296  003F  3429               	retlw	41	;')'
   297  0040  3443               	retlw	67	;'C'
   298  0041  3461               	retlw	97	;'a'
   299  0042  346D               	retlw	109	;'m'
   300  0043  3462               	retlw	98	;'b'
   301  0044  3469               	retlw	105	;'i'
   302  0045  3461               	retlw	97	;'a'
   303  0046  3472               	retlw	114	;'r'
   304  0047  3420               	retlw	32	;' '
   305  0048  3450               	retlw	80	;'P'
   306  0049  344F               	retlw	79	;'O'
   307  004A  3452               	retlw	82	;'R'
   308  004B  3454               	retlw	84	;'T'
   309  004C  3441               	retlw	65	;'A'
   310  004D  340D               	retlw	13
   311  004E  3428               	retlw	40	;'('
   312  004F  3433               	retlw	51	;'3'
   313  0050  3429               	retlw	41	;')'
   314  0051  3443               	retlw	67	;'C'
   315  0052  3461               	retlw	97	;'a'
   316  0053  346D               	retlw	109	;'m'
   317  0054  3462               	retlw	98	;'b'
   318  0055  3469               	retlw	105	;'i'
   319  0056  3461               	retlw	97	;'a'
   320  0057  3472               	retlw	114	;'r'
   321  0058  3420               	retlw	32	;' '
   322  0059  3450               	retlw	80	;'P'
   323  005A  344F               	retlw	79	;'O'
   324  005B  3452               	retlw	82	;'R'
   325  005C  3454               	retlw	84	;'T'
   326  005D  3442               	retlw	66	;'B'
   327  005E  340D               	retlw	13
   328  005F  3400               	retlw	0
   329  0060                     STR_4:
   330  0060  340D               	retlw	13
   331  0061  3449               	retlw	73	;'I'
   332  0062  346E               	retlw	110	;'n'
   333  0063  3464               	retlw	100	;'d'
   334  0064  3469               	retlw	105	;'i'
   335  0065  3471               	retlw	113	;'q'
   336  0066  3475               	retlw	117	;'u'
   337  0067  3465               	retlw	101	;'e'
   338  0068  3420               	retlw	32	;' '
   339  0069  3465               	retlw	101	;'e'
   340  006A  346C               	retlw	108	;'l'
   341  006B  3420               	retlw	32	;' '
   342  006C  3476               	retlw	118	;'v'
   343  006D  3461               	retlw	97	;'a'
   344  006E  346C               	retlw	108	;'l'
   345  006F  346F               	retlw	111	;'o'
   346  0070  3472               	retlw	114	;'r'
   347  0071  3420               	retlw	32	;' '
   348  0072  3470               	retlw	112	;'p'
   349  0073  3461               	retlw	97	;'a'
   350  0074  3472               	retlw	114	;'r'
   351  0075  3461               	retlw	97	;'a'
   352  0076  3420               	retlw	32	;' '
   353  0077  3450               	retlw	80	;'P'
   354  0078  344F               	retlw	79	;'O'
   355  0079  3452               	retlw	82	;'R'
   356  007A  3454               	retlw	84	;'T'
   357  007B  3441               	retlw	65	;'A'
   358  007C  340D               	retlw	13
   359  007D  3400               	retlw	0
   360  007E                     STR_5:
   361  007E  3449               	retlw	73	;'I'
   362  007F  346E               	retlw	110	;'n'
   363  0080  3464               	retlw	100	;'d'
   364  0081  3469               	retlw	105	;'i'
   365  0082  3471               	retlw	113	;'q'
   366  0083  3475               	retlw	117	;'u'
   367  0084  3465               	retlw	101	;'e'
   368  0085  3420               	retlw	32	;' '
   369  0086  3465               	retlw	101	;'e'
   370  0087  346C               	retlw	108	;'l'
   371  0088  3420               	retlw	32	;' '
   372  0089  3476               	retlw	118	;'v'
   373  008A  3461               	retlw	97	;'a'
   374  008B  346C               	retlw	108	;'l'
   375  008C  346F               	retlw	111	;'o'
   376  008D  3472               	retlw	114	;'r'
   377  008E  3420               	retlw	32	;' '
   378  008F  3470               	retlw	112	;'p'
   379  0090  3461               	retlw	97	;'a'
   380  0091  3472               	retlw	114	;'r'
   381  0092  3461               	retlw	97	;'a'
   382  0093  3420               	retlw	32	;' '
   383  0094  3450               	retlw	80	;'P'
   384  0095  344F               	retlw	79	;'O'
   385  0096  3452               	retlw	82	;'R'
   386  0097  3454               	retlw	84	;'T'
   387  0098  3442               	retlw	66	;'B'
   388  0099  340D               	retlw	13
   389  009A  3400               	retlw	0
   390  009B                     STR_3:
   391  009B  3450               	retlw	80	;'P'
   392  009C  3472               	retlw	114	;'r'
   393  009D  3475               	retlw	117	;'u'
   394  009E  3465               	retlw	101	;'e'
   395  009F  3462               	retlw	98	;'b'
   396  00A0  3461               	retlw	97	;'a'
   397  00A1  3420               	retlw	32	;' '
   398  00A2  3463               	retlw	99	;'c'
   399  00A3  3461               	retlw	97	;'a'
   400  00A4  3464               	retlw	100	;'d'
   401  00A5  3465               	retlw	101	;'e'
   402  00A6  346E               	retlw	110	;'n'
   403  00A7  3461               	retlw	97	;'a'
   404  00A8  3420               	retlw	32	;' '
   405  00A9  3464               	retlw	100	;'d'
   406  00AA  3465               	retlw	101	;'e'
   407  00AB  3420               	retlw	32	;' '
   408  00AC  3463               	retlw	99	;'c'
   409  00AD  3461               	retlw	97	;'a'
   410  00AE  3472               	retlw	114	;'r'
   411  00AF  3461               	retlw	97	;'a'
   412  00B0  3463               	retlw	99	;'c'
   413  00B1  3474               	retlw	116	;'t'
   414  00B2  3465               	retlw	101	;'e'
   415  00B3  3472               	retlw	114	;'r'
   416  00B4  3465               	retlw	101	;'e'
   417  00B5  3473               	retlw	115	;'s'
   418  00B6  340D               	retlw	13
   419  00B7  3400               	retlw	0
   420                           
   421                           	psect	cinit
   422  07FC                     start_initialization:	
   423                           ; #config settings
   424                           
   425  07FC                     __initialization:
   426  07FC                     end_of_initialization:	
   427                           ;End of C runtime variable initialization code
   428                           
   429  07FC                     __end_of__initialization:
   430  07FC  0183               	clrf	3
   431  07FD  120A  118A  2F73   	ljmp	_main	;jump to C main() function
   432                           
   433                           	psect	cstackCOMMON
   434  0070                     __pcstackCOMMON:
   435  0070                     ?_setup:
   436  0070                     ??_setup:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_UART_write:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ??_UART_write:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_main:	
   446                           ; 1 bytes @ 0x0
   447                           
   448                           
   449                           ; 1 bytes @ 0x0
   450  0070                     	ds	1
   451  0071                     UART_write@word:
   452                           
   453                           ; 1 bytes @ 0x1
   454  0071                     	ds	1
   455  0072                     ??_main:
   456                           
   457                           ; 1 bytes @ 0x2
   458  0072                     	ds	3
   459                           
   460                           	psect	maintext
   461  0773                     __pmaintext:	
   462 ;;
   463 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   464 ;;
   465 ;; *************** function _main *****************
   466 ;; Defined at:
   467 ;;		line 51 in file "Main.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : B00/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   481 ;;      Params:         0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0
   483 ;;      Temps:          3       0       0       0       0
   484 ;;      Totals:         3       0       0       0       0
   485 ;;Total ram usage:        3 bytes
   486 ;; Hardware stack levels required when called: 2
   487 ;; This function calls:
   488 ;;		_UART_write
   489 ;;		_setup
   490 ;; This function is called by:
   491 ;;		Startup code after reset
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           
   496                           ;psect for function _main
   497  0773                     _main:
   498  0773                     l744:	
   499                           ;incstack = 0
   500                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   501                           
   502                           
   503                           ;Main.c: 52:     setup();
   504  0773  120A  118A  274E  120A  118A  	fcall	_setup
   505  0778                     l746:
   506                           
   507                           ;Main.c: 55:         UART_write("\rQue desea Hacer\r(1)Desplegar Cadena de Caracteres\r"
      +                          );
   508  0778  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   509  0779  120A  118A  272B  120A  118A  	fcall	_UART_write
   510  077E                     l748:
   511                           
   512                           ;Main.c: 56:         _delay((unsigned long)((50)*(4000000/4000.0)));
   513  077E  3041               	movlw	65
   514  077F  00F3               	movwf	??_main+1
   515  0780  30EE               	movlw	238
   516  0781  00F2               	movwf	??_main
   517  0782                     u177:
   518  0782  0BF2               	decfsz	??_main,f
   519  0783  2F82               	goto	u177
   520  0784  0BF3               	decfsz	??_main+1,f
   521  0785  2F82               	goto	u177
   522  0786  0000               	nop
   523  0787                     l750:
   524                           
   525                           ;Main.c: 57:         UART_write("(2)Cambiar PORTA\r(3)Cambiar PORTB\r");
   526  0787  3035               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   527  0788  120A  118A  272B  120A  118A  	fcall	_UART_write
   528                           
   529                           ;Main.c: 58:         while(!RCIF){
   530  078D  2F8F               	goto	l52
   531  078E                     l53:
   532                           
   533                           ;Main.c: 59:             _delay((unsigned long)((1)*(4000000/4000000.0)));
   534  078E  0000               	nop
   535  078F                     l52:	
   536                           ;Main.c: 60:         }
   537                           
   538                           
   539                           ;Main.c: 58:         while(!RCIF){
   540  078F  1283               	bcf	3,5	;RP0=0, select bank0
   541  0790  1303               	bcf	3,6	;RP1=0, select bank0
   542  0791  1E8C               	btfss	12,5	;volatile
   543  0792  2F94               	goto	u111
   544  0793  2F95               	goto	u110
   545  0794                     u111:
   546  0794  2F8E               	goto	l53
   547  0795                     u110:
   548  0795                     l752:
   549                           
   550                           ;Main.c: 61:         if(RCREG==49){
   551  0795  3031               	movlw	49
   552  0796  061A               	xorwf	26,w	;volatile
   553  0797  1D03               	btfss	3,2
   554  0798  2F9A               	goto	u121
   555  0799  2F9B               	goto	u120
   556  079A                     u121:
   557  079A  2FAE               	goto	l758
   558  079B                     u120:
   559  079B                     l754:
   560                           
   561                           ;Main.c: 62:             UART_write("Prueba cadena de caracteres\r");
   562  079B  3093               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   563  079C  120A  118A  272B  120A  118A  	fcall	_UART_write
   564  07A1                     l756:
   565                           
   566                           ;Main.c: 63:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   567  07A1  3006               	movlw	6
   568  07A2  00F4               	movwf	??_main+2
   569  07A3  3013               	movlw	19
   570  07A4  00F3               	movwf	??_main+1
   571  07A5  30AD               	movlw	173
   572  07A6  00F2               	movwf	??_main
   573  07A7                     u187:
   574  07A7  0BF2               	decfsz	??_main,f
   575  07A8  2FA7               	goto	u187
   576  07A9  0BF3               	decfsz	??_main+1,f
   577  07AA  2FA7               	goto	u187
   578  07AB  0BF4               	decfsz	??_main+2,f
   579  07AC  2FA7               	goto	u187
   580  07AD  2FAE               	nop2
   581  07AE                     l758:
   582                           
   583                           ;Main.c: 65:         if(RCREG==50){
   584  07AE  3032               	movlw	50
   585  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   586  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   587  07B1  061A               	xorwf	26,w	;volatile
   588  07B2  1D03               	btfss	3,2
   589  07B3  2FB5               	goto	u131
   590  07B4  2FB6               	goto	u130
   591  07B5                     u131:
   592  07B5  2FD3               	goto	l764
   593  07B6                     u130:
   594  07B6                     l760:
   595                           
   596                           ;Main.c: 66:             UART_write("\rIndique el valor para PORTA\r");
   597  07B6  3058               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   598  07B7  120A  118A  272B  120A  118A  	fcall	_UART_write
   599                           
   600                           ;Main.c: 67:             while(!RCIF){
   601  07BC  2FBE               	goto	l57
   602  07BD                     l58:
   603                           
   604                           ;Main.c: 68:                 _delay((unsigned long)((1)*(4000000/4000000.0)));
   605  07BD  0000               	nop
   606  07BE                     l57:	
   607                           ;Main.c: 69:             }
   608                           
   609                           
   610                           ;Main.c: 67:             while(!RCIF){
   611  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   612  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   613  07C0  1E8C               	btfss	12,5	;volatile
   614  07C1  2FC3               	goto	u141
   615  07C2  2FC4               	goto	u140
   616  07C3                     u141:
   617  07C3  2FBD               	goto	l58
   618  07C4                     u140:
   619  07C4                     l762:
   620                           
   621                           ;Main.c: 70:             PORTA = RCREG;
   622  07C4  081A               	movf	26,w	;volatile
   623  07C5  0085               	movwf	5	;volatile
   624                           
   625                           ;Main.c: 71:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   626  07C6  3006               	movlw	6
   627  07C7  00F4               	movwf	??_main+2
   628  07C8  3013               	movlw	19
   629  07C9  00F3               	movwf	??_main+1
   630  07CA  30AD               	movlw	173
   631  07CB  00F2               	movwf	??_main
   632  07CC                     u197:
   633  07CC  0BF2               	decfsz	??_main,f
   634  07CD  2FCC               	goto	u197
   635  07CE  0BF3               	decfsz	??_main+1,f
   636  07CF  2FCC               	goto	u197
   637  07D0  0BF4               	decfsz	??_main+2,f
   638  07D1  2FCC               	goto	u197
   639  07D2  2FD3               	nop2
   640  07D3                     l764:
   641                           
   642                           ;Main.c: 73:         if(RCREG==51){
   643  07D3  3033               	movlw	51
   644  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   645  07D5  1303               	bcf	3,6	;RP1=0, select bank0
   646  07D6  061A               	xorwf	26,w	;volatile
   647  07D7  1D03               	btfss	3,2
   648  07D8  2FDA               	goto	u151
   649  07D9  2FDB               	goto	u150
   650  07DA                     u151:
   651  07DA  2F78               	goto	l746
   652  07DB                     u150:
   653  07DB                     l766:
   654                           
   655                           ;Main.c: 74:             UART_write("Indique el valor para PORTB\r");
   656  07DB  3076               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   657  07DC  120A  118A  272B  120A  118A  	fcall	_UART_write
   658                           
   659                           ;Main.c: 75:             while(!RCIF){
   660  07E1  2FE3               	goto	l61
   661  07E2                     l62:
   662                           
   663                           ;Main.c: 76:                 _delay((unsigned long)((1)*(4000000/4000000.0)));
   664  07E2  0000               	nop
   665  07E3                     l61:	
   666                           ;Main.c: 77:             }
   667                           
   668                           
   669                           ;Main.c: 75:             while(!RCIF){
   670  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   671  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   672  07E5  1E8C               	btfss	12,5	;volatile
   673  07E6  2FE8               	goto	u161
   674  07E7  2FE9               	goto	u160
   675  07E8                     u161:
   676  07E8  2FE2               	goto	l62
   677  07E9                     u160:
   678  07E9                     l768:
   679                           
   680                           ;Main.c: 78:             PORTB = RCREG;
   681  07E9  081A               	movf	26,w	;volatile
   682  07EA  0086               	movwf	6	;volatile
   683                           
   684                           ;Main.c: 79:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   685  07EB  3006               	movlw	6
   686  07EC  00F4               	movwf	??_main+2
   687  07ED  3013               	movlw	19
   688  07EE  00F3               	movwf	??_main+1
   689  07EF  30AD               	movlw	173
   690  07F0  00F2               	movwf	??_main
   691  07F1                     u207:
   692  07F1  0BF2               	decfsz	??_main,f
   693  07F2  2FF1               	goto	u207
   694  07F3  0BF3               	decfsz	??_main+1,f
   695  07F4  2FF1               	goto	u207
   696  07F5  0BF4               	decfsz	??_main+2,f
   697  07F6  2FF1               	goto	u207
   698  07F7  2FF8               	nop2
   699  07F8  2F78               	goto	l746
   700  07F9  120A  118A  2800   	ljmp	start
   701  07FC                     __end_of_main:
   702                           
   703                           	psect	text1
   704  074E                     __ptext1:	
   705 ;; *************** function _setup *****************
   706 ;; Defined at:
   707 ;;		line 87 in file "Main.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;		None
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, status,2
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   721 ;;      Params:         0       0       0       0       0
   722 ;;      Locals:         0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0
   724 ;;      Totals:         0       0       0       0       0
   725 ;;Total ram usage:        0 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _setup
   736  074E                     _setup:
   737  074E                     l670:	
   738                           ;incstack = 0
   739                           ; Regs used in _setup: [wreg+status,2]
   740                           
   741                           
   742                           ;Main.c: 89:     ANSEL = 0;
   743  074E  1683               	bsf	3,5	;RP0=1, select bank3
   744  074F  1703               	bsf	3,6	;RP1=1, select bank3
   745  0750  0188               	clrf	8	;volatile
   746                           
   747                           ;Main.c: 90:     ANSELH = 0;
   748  0751  0189               	clrf	9	;volatile
   749                           
   750                           ;Main.c: 91:     TRISA = 0;
   751  0752  1683               	bsf	3,5	;RP0=1, select bank1
   752  0753  1303               	bcf	3,6	;RP1=0, select bank1
   753  0754  0185               	clrf	5	;volatile
   754                           
   755                           ;Main.c: 92:     TRISB = 0;
   756  0755  0186               	clrf	6	;volatile
   757  0756                     l672:
   758                           
   759                           ;Main.c: 93:     TRISC = 128;
   760  0756  3080               	movlw	128
   761  0757  0087               	movwf	7	;volatile
   762  0758                     l674:
   763                           
   764                           ;Main.c: 94:     TRISD = 0;
   765  0758  0188               	clrf	8	;volatile
   766  0759                     l676:
   767                           
   768                           ;Main.c: 95:     TRISE = 0;
   769  0759  0189               	clrf	9	;volatile
   770  075A                     l678:
   771                           
   772                           ;Main.c: 98:     TXSTAbits.TXEN = 1;
   773  075A  1698               	bsf	24,5	;volatile
   774  075B                     l680:
   775                           
   776                           ;Main.c: 99:     TXSTAbits.SYNC = 0;
   777  075B  1218               	bcf	24,4	;volatile
   778  075C                     l682:
   779                           
   780                           ;Main.c: 100:     RCSTAbits.SPEN = 1;
   781  075C  1283               	bcf	3,5	;RP0=0, select bank0
   782  075D  1303               	bcf	3,6	;RP1=0, select bank0
   783  075E  1798               	bsf	24,7	;volatile
   784  075F                     l684:
   785                           
   786                           ;Main.c: 101:     TXSTAbits.BRGH = 1;
   787  075F  1683               	bsf	3,5	;RP0=1, select bank1
   788  0760  1303               	bcf	3,6	;RP1=0, select bank1
   789  0761  1518               	bsf	24,2	;volatile
   790  0762                     l686:
   791                           
   792                           ;Main.c: 102:     BRG16 = 0;
   793  0762  1683               	bsf	3,5	;RP0=1, select bank3
   794  0763  1703               	bsf	3,6	;RP1=1, select bank3
   795  0764  1187               	bcf	7,3	;volatile
   796  0765                     l688:
   797                           
   798                           ;Main.c: 103:     SPBRGH = 0;
   799  0765  1683               	bsf	3,5	;RP0=1, select bank1
   800  0766  1303               	bcf	3,6	;RP1=0, select bank1
   801  0767  019A               	clrf	26	;volatile
   802                           
   803                           ;Main.c: 104:     SPBRG = 25;
   804  0768  3019               	movlw	25
   805  0769  0099               	movwf	25	;volatile
   806  076A                     l690:
   807                           
   808                           ;Main.c: 107:     RCSTAbits.CREN = 1;
   809  076A  1283               	bcf	3,5	;RP0=0, select bank0
   810  076B  1303               	bcf	3,6	;RP1=0, select bank0
   811  076C  1618               	bsf	24,4	;volatile
   812  076D                     l692:
   813                           
   814                           ;Main.c: 109:     PORTA = 0;
   815  076D  0185               	clrf	5	;volatile
   816  076E                     l694:
   817                           
   818                           ;Main.c: 110:     PORTB = 0;
   819  076E  0186               	clrf	6	;volatile
   820  076F                     l696:
   821                           
   822                           ;Main.c: 111:     PORTC = 0;
   823  076F  0187               	clrf	7	;volatile
   824  0770                     l698:
   825                           
   826                           ;Main.c: 112:     PORTD = 0;
   827  0770  0188               	clrf	8	;volatile
   828  0771                     l700:
   829                           
   830                           ;Main.c: 113:     PORTE = 0;
   831  0771  0189               	clrf	9	;volatile
   832  0772                     l69:
   833  0772  0008               	return
   834  0773                     __end_of_setup:
   835                           
   836                           	psect	text2
   837  072B                     __ptext2:	
   838 ;; *************** function _UART_write *****************
   839 ;; Defined at:
   840 ;;		line 116 in file "Main.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  word            1    wreg     PTR unsigned char 
   843 ;;		 -> STR_5(29), STR_4(30), STR_3(29), STR_2(35), 
   844 ;;		 -> STR_1(52), 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  word            1    1[COMMON] PTR unsigned char 
   847 ;;		 -> STR_5(29), STR_4(30), STR_3(29), STR_2(35), 
   848 ;;		 -> STR_1(52), 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         1       0       0       0       0
   860 ;;      Temps:          1       0       0       0       0
   861 ;;      Totals:         2       0       0       0       0
   862 ;;Total ram usage:        2 bytes
   863 ;; Hardware stack levels used: 2
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           
   872                           ;psect for function _UART_write
   873  072B                     _UART_write:
   874                           
   875                           ;incstack = 0
   876                           ; Regs used in _UART_write: [wreg-fsr0h+status,2+status,0+pclath]
   877                           ;UART_write@word stored from wreg
   878  072B  00F1               	movwf	UART_write@word
   879  072C                     l736:
   880                           
   881                           ;Main.c: 117:     while (*word != 0){
   882  072C  2F41               	goto	l742
   883  072D                     l738:
   884                           
   885                           ;Main.c: 118:         TXREG = (*word);
   886  072D  0871               	movf	UART_write@word,w
   887  072E  0084               	movwf	4
   888  072F  120A  118A  2003  120A  118A  	fcall	stringdir
   889  0734  1283               	bcf	3,5	;RP0=0, select bank0
   890  0735  1303               	bcf	3,6	;RP1=0, select bank0
   891  0736  0099               	movwf	25	;volatile
   892  0737                     l74:	
   893                           ;Main.c: 119:         while(!TXSTAbits.TRMT);
   894                           
   895  0737  1683               	bsf	3,5	;RP0=1, select bank1
   896  0738  1303               	bcf	3,6	;RP1=0, select bank1
   897  0739  1C98               	btfss	24,1	;volatile
   898  073A  2F3C               	goto	u91
   899  073B  2F3D               	goto	u90
   900  073C                     u91:
   901  073C  2F37               	goto	l74
   902  073D                     u90:
   903  073D                     l740:
   904                           
   905                           ;Main.c: 120:         word++;
   906  073D  3001               	movlw	1
   907  073E  00F0               	movwf	??_UART_write
   908  073F  0870               	movf	??_UART_write,w
   909  0740  07F1               	addwf	UART_write@word,f
   910  0741                     l742:
   911                           
   912                           ;Main.c: 117:     while (*word != 0){
   913  0741  0871               	movf	UART_write@word,w
   914  0742  0084               	movwf	4
   915  0743  120A  118A  2003  120A  118A  	fcall	stringdir
   916  0748  3A00               	xorlw	0
   917  0749  1D03               	skipz
   918  074A  2F4C               	goto	u101
   919  074B  2F4D               	goto	u100
   920  074C                     u101:
   921  074C  2F2D               	goto	l738
   922  074D                     u100:
   923  074D                     l78:
   924  074D  0008               	return
   925  074E                     __end_of_UART_write:
   926  007E                     btemp	set	126	;btemp
   927  007E                     wtemp0	set	126
   928                           
   929                           	psect	config
   930                           
   931                           ;Config register CONFIG1 @ 0x2007
   932                           ;	Oscillator Selection bits
   933                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   934                           ;	Watchdog Timer Enable bit
   935                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   936                           ;	Power-up Timer Enable bit
   937                           ;	PWRTE = OFF, PWRT disabled
   938                           ;	RE3/MCLR pin function select bit
   939                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   940                           ;	Code Protection bit
   941                           ;	CP = OFF, Program memory code protection is disabled
   942                           ;	Data Code Protection bit
   943                           ;	CPD = OFF, Data memory code protection is disabled
   944                           ;	Brown Out Reset Selection bits
   945                           ;	BOREN = ON, BOR enabled
   946                           ;	Internal External Switchover bit
   947                           ;	IESO = ON, Internal/External Switchover mode is enabled
   948                           ;	Fail-Safe Clock Monitor Enabled bit
   949                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   950                           ;	Low Voltage Programming Enable bit
   951                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   952                           ;	In-Circuit Debugger Mode bit
   953                           ;	DEBUG = 0x1, unprogrammed default
   954  2007                     	org	8199
   955  2007  3FF4               	dw	16372
   956                           
   957                           ;Config register CONFIG2 @ 0x2008
   958                           ;	Brown-out Reset Selection bit
   959                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   960                           ;	Flash Program Memory Self Write Enable bits
   961                           ;	WRT = OFF, Write protection off
   962  2008                     	org	8200
   963  2008  3FFF               	dw	16383

Data Sizes:
    Strings     175
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_write@word	PTR unsigned char  size(1) Largest target is 52
		 -> STR_5(CODE[29]), STR_4(CODE[30]), STR_3(CODE[29]), STR_2(CODE[35]), 
		 -> STR_1(CODE[52]), 


Critical Paths under _main in COMMON

    _main->_UART_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     210
                                              2 COMMON     3     3      0
                         _UART_write
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           2     2      0     210
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_write
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun May 09 21:01:23 2021

                      pc 0002                       l52 078F                       l61 07E3  
                     l53 078E                       l62 07E2                       l57 07BE  
                     l74 0737                       l58 07BD                       l69 0772  
                     l78 074D                       u90 073D                       u91 073C  
                     fsr 0004                      l700 0771                      l740 073D  
                    l742 0741                      l670 074E                      l750 0787  
                    l736 072C                      l680 075B                      l672 0756  
                    l760 07B6                      l752 0795                      l744 0773  
                    l738 072D                      l690 076A                      l682 075C  
                    l674 0758                      l762 07C4                      l754 079B  
                    l746 0778                      l692 076D                      l684 075F  
                    l676 0759                      l764 07D3                      l756 07A1  
                    l748 077E                      l694 076E                      l686 0762  
                    l678 075A                      l766 07DB                      l758 07AE  
                    l696 076F                      l688 0765                      l768 07E9  
                    l698 0770                      u100 074D                      u101 074C  
                    u110 0795                      u111 0794                      u120 079B  
                    u121 079A                      u130 07B6                      u131 07B5  
                    u140 07C4                      u141 07C3                      u150 07DB  
                    u207 07F1                      u151 07DA                      u160 07E9  
                    u161 07E8                      u177 0782                      u187 07A7  
                    u197 07CC                      fsr0 0004                     STR_1 0009  
                   STR_2 003D                     STR_3 009B                     STR_4 0060  
                   STR_5 007E                     _RCIF 0065                     _main 0773  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _BRG16 0C3B                    _ANSEL 0188                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _TXREG 0019  
            ?_UART_write 0070                    _setup 074E                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0072                   ?_setup 0070  
                 _ANSELH 0189                   _SPBRGH 009A      __size_of_UART_write 0023  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_setup 0773  
                ??_setup 0070               __pmaintext 0773             ??_UART_write 0070  
             __stringtab 0003       __end_of_UART_write 074E                  __ptext1 074E  
                __ptext2 072B     end_of_initialization 07FC                _RCSTAbits 0018  
              _TXSTAbits 0098      start_initialization 07FC                ___latbits 0002  
              __pstrings 0003           __size_of_setup 0025              __stringbase 0008  
         UART_write@word 0071       __end_of__stringtab 0009            __size_of_main 0089  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
             _UART_write 072B  
