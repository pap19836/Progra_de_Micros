

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 31 16:50:16 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  001E                     _ADRESH	set	30
   205  0009                     _PORTE	set	9
   206  0008                     _PORTD	set	8
   207  0007                     _PORTC	set	7
   208  0006                     _PORTB	set	6
   209  0005                     _PORTA	set	5
   210  000B                     _INTCONbits	set	11
   211  0012                     _T2CONbits	set	18
   212  0012                     _T2CON	set	18
   213  001F                     _ADCON0	set	31
   214  001B                     _CCPR2L	set	27
   215  0015                     _CCPR1L	set	21
   216  00FA                     _CHS0	set	250
   217  0066                     _ADIF	set	102
   218  0061                     _TMR2IF	set	97
   219  00EA                     _CCP2M2	set	234
   220  00EB                     _CCP2M3	set	235
   221  00BA                     _CCP1M2	set	186
   222  00BB                     _CCP1M3	set	187
   223  00EC                     _DC2B0	set	236
   224  00ED                     _DC2B1	set	237
   225  00BC                     _DC1B0	set	188
   226  00BD                     _DC1B1	set	189
   227  00F9                     _GO	set	249
   228  008C                     _PIE1bits	set	140
   229  0092                     _PR2	set	146
   230  009F                     _ADCON1bits	set	159
   231  008F                     _OSCCON	set	143
   232  0089                     _TRISE	set	137
   233  0088                     _TRISD	set	136
   234  0087                     _TRISC	set	135
   235  0086                     _TRISB	set	134
   236  0085                     _TRISA	set	133
   237  0189                     _ANSELH	set	393
   238  0188                     _ANSEL	set	392
   239                           
   240                           	psect	cinit
   241  000F                     start_initialization:	
   242                           ; #config settings
   243                           
   244  000F                     __initialization:
   245                           
   246                           ; Clear objects allocated to COMMON
   247  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   248  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   249  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   250  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   251  0013                     end_of_initialization:	
   252                           ;End of C runtime variable initialization code
   253                           
   254  0013                     __end_of__initialization:
   255  0013  0183               	clrf	3
   256  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   257                           
   258                           	psect	bssCOMMON
   259  0075                     __pbssCOMMON:
   260  0075                     _pulse_width2:
   261  0075                     	ds	1
   262  0076                     _pot2:
   263  0076                     	ds	1
   264  0077                     _pulse_width1:
   265  0077                     	ds	1
   266  0078                     _pot1:
   267  0078                     	ds	1
   268                           
   269                           	psect	cstackCOMMON
   270  0070                     __pcstackCOMMON:
   271  0070                     ?_setup:
   272  0070                     ?_main:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_isr:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ??_isr:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 1 bytes @ 0x0
   283  0070                     	ds	3
   284  0073                     ??_setup:
   285  0073                     ??_main:	
   286                           ; 1 bytes @ 0x3
   287                           
   288                           
   289                           ; 1 bytes @ 0x3
   290  0073                     	ds	2
   291                           
   292                           	psect	maintext
   293  0017                     __pmaintext:	
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 51 in file "Main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0, pclath, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : B00/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0
   315 ;;      Temps:          2       0       0       0       0
   316 ;;      Totals:         2       0       0       0       0
   317 ;;Total ram usage:        2 bytes
   318 ;; Hardware stack levels required when called: 2
   319 ;; This function calls:
   320 ;;		_setup
   321 ;; This function is called by:
   322 ;;		Startup code after reset
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           
   327                           ;psect for function _main
   328  0017                     _main:
   329  0017                     l739:	
   330                           ;incstack = 0
   331                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   332                           
   333                           
   334                           ;Main.c: 52:     setup();
   335  0017  120A  118A  2062  120A  118A  	fcall	_setup
   336  001C                     l741:
   337                           
   338                           ;Main.c: 54:         GO = 1;
   339  001C  1283               	bcf	3,5	;RP0=0, select bank0
   340  001D  1303               	bcf	3,6	;RP1=0, select bank0
   341  001E  149F               	bsf	31,1	;volatile
   342  001F                     l743:
   343                           
   344                           ;Main.c: 55:         _delay((unsigned long)((10)*(2000000/4000000.0)));
   345  001F  2820               	nop2	;2 cycle nop
   346  0020  2821               	nop2	;2 cycle nop
   347  0021  0000               	nop
   348  0022                     l745:
   349                           
   350                           ;Main.c: 56:         pulse_width1 = (pot1 >> 1) + 125;
   351  0022  0878               	movf	_pot1,w
   352  0023  00F3               	movwf	??_main
   353  0024  1003               	clrc
   354  0025  0C73               	rrf	??_main,w
   355  0026  3E7D               	addlw	125
   356  0027  00F4               	movwf	??_main+1
   357  0028  0874               	movf	??_main+1,w
   358  0029  00F7               	movwf	_pulse_width1
   359  002A                     l747:
   360                           
   361                           ;Main.c: 57:         pulse_width2 = (pot2 >> 1) + 125;
   362  002A  0876               	movf	_pot2,w
   363  002B  00F3               	movwf	??_main
   364  002C  1003               	clrc
   365  002D  0C73               	rrf	??_main,w
   366  002E  3E7D               	addlw	125
   367  002F  00F4               	movwf	??_main+1
   368  0030  0874               	movf	??_main+1,w
   369  0031  00F5               	movwf	_pulse_width2
   370  0032                     l749:
   371                           
   372                           ;Main.c: 58:         DC1B1 = pulse_width1 & 2;
   373  0032  1283               	bcf	3,5	;RP0=0, select bank0
   374  0033  1303               	bcf	3,6	;RP1=0, select bank0
   375  0034  1297               	bcf	23,5	;volatile
   376  0035                     l751:
   377                           
   378                           ;Main.c: 59:         DC1B0 = pulse_width1 & 1;
   379  0035  1877               	btfsc	_pulse_width1,0
   380  0036  2838               	goto	u21
   381  0037  283C               	goto	u20
   382  0038                     u21:
   383  0038  1283               	bcf	3,5	;RP0=0, select bank0
   384  0039  1303               	bcf	3,6	;RP1=0, select bank0
   385  003A  1617               	bsf	23,4	;volatile
   386  003B  283F               	goto	u34
   387  003C                     u20:
   388  003C  1283               	bcf	3,5	;RP0=0, select bank0
   389  003D  1303               	bcf	3,6	;RP1=0, select bank0
   390  003E  1217               	bcf	23,4	;volatile
   391  003F                     u34:
   392  003F                     l753:
   393                           
   394                           ;Main.c: 60:         CCPR1L = pulse_width1 >> 2;
   395  003F  0877               	movf	_pulse_width1,w
   396  0040  00F3               	movwf	??_main
   397  0041  3002               	movlw	2
   398  0042                     u45:
   399  0042  1003               	clrc
   400  0043  0CF3               	rrf	??_main,f
   401  0044  3EFF               	addlw	-1
   402  0045  1D03               	skipz
   403  0046  2842               	goto	u45
   404  0047  0873               	movf	??_main,w
   405  0048  0095               	movwf	21	;volatile
   406  0049                     l755:
   407                           
   408                           ;Main.c: 61:         DC2B1 = pulse_width2 & 2;
   409  0049  129D               	bcf	29,5	;volatile
   410  004A                     l757:
   411                           
   412                           ;Main.c: 62:         DC2B0 = pulse_width2 & 1;
   413  004A  1875               	btfsc	_pulse_width2,0
   414  004B  284D               	goto	u51
   415  004C  2851               	goto	u50
   416  004D                     u51:
   417  004D  1283               	bcf	3,5	;RP0=0, select bank0
   418  004E  1303               	bcf	3,6	;RP1=0, select bank0
   419  004F  161D               	bsf	29,4	;volatile
   420  0050  2854               	goto	u64
   421  0051                     u50:
   422  0051  1283               	bcf	3,5	;RP0=0, select bank0
   423  0052  1303               	bcf	3,6	;RP1=0, select bank0
   424  0053  121D               	bcf	29,4	;volatile
   425  0054                     u64:
   426  0054                     l759:
   427                           
   428                           ;Main.c: 63:         CCPR2L = pulse_width2 >> 2;
   429  0054  0875               	movf	_pulse_width2,w
   430  0055  00F3               	movwf	??_main
   431  0056  3002               	movlw	2
   432  0057                     u75:
   433  0057  1003               	clrc
   434  0058  0CF3               	rrf	??_main,f
   435  0059  3EFF               	addlw	-1
   436  005A  1D03               	skipz
   437  005B  2857               	goto	u75
   438  005C  0873               	movf	??_main,w
   439  005D  009B               	movwf	27	;volatile
   440  005E  281C               	goto	l741
   441  005F  120A  118A  280C   	ljmp	start
   442  0062                     __end_of_main:
   443                           
   444                           	psect	text1
   445  0062                     __ptext1:	
   446 ;; *************** function _setup *****************
   447 ;; Defined at:
   448 ;;		line 69 in file "Main.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, status,2
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   462 ;;      Params:         0       0       0       0       0
   463 ;;      Locals:         0       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0
   465 ;;      Totals:         0       0       0       0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels used: 1
   468 ;; Hardware stack levels required when called: 1
   469 ;; This function calls:
   470 ;;		Nothing
   471 ;; This function is called by:
   472 ;;		_main
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           
   477                           ;psect for function _setup
   478  0062                     _setup:
   479  0062                     l697:	
   480                           ;incstack = 0
   481                           ; Regs used in _setup: [wreg+status,2]
   482                           
   483                           
   484                           ;Main.c: 71:     ANSEL = 3;
   485  0062  3003               	movlw	3
   486  0063  1683               	bsf	3,5	;RP0=1, select bank3
   487  0064  1703               	bsf	3,6	;RP1=1, select bank3
   488  0065  0088               	movwf	8	;volatile
   489  0066                     l699:
   490                           
   491                           ;Main.c: 72:     ANSELH = 0;
   492  0066  0189               	clrf	9	;volatile
   493  0067                     l701:
   494                           
   495                           ;Main.c: 73:     TRISA = 3;
   496  0067  3003               	movlw	3
   497  0068  1683               	bsf	3,5	;RP0=1, select bank1
   498  0069  1303               	bcf	3,6	;RP1=0, select bank1
   499  006A  0085               	movwf	5	;volatile
   500                           
   501                           ;Main.c: 74:     TRISB = 0;
   502  006B  0186               	clrf	6	;volatile
   503                           
   504                           ;Main.c: 75:     TRISC = 0;
   505  006C  0187               	clrf	7	;volatile
   506                           
   507                           ;Main.c: 76:     TRISD = 0;
   508  006D  0188               	clrf	8	;volatile
   509                           
   510                           ;Main.c: 77:     TRISE = 0;
   511  006E  0189               	clrf	9	;volatile
   512  006F                     l703:
   513                           
   514                           ;Main.c: 79:     OSCCON = 0b01010000;
   515  006F  3050               	movlw	80
   516  0070  008F               	movwf	15	;volatile
   517  0071                     l705:
   518                           
   519                           ;Main.c: 81:     ADCON1bits.ADFM = 0;
   520  0071  139F               	bcf	31,7	;volatile
   521  0072                     l707:
   522                           
   523                           ;Main.c: 82:     ADCON0 = 0b01000001;
   524  0072  3041               	movlw	65
   525  0073  1283               	bcf	3,5	;RP0=0, select bank0
   526  0074  1303               	bcf	3,6	;RP1=0, select bank0
   527  0075  009F               	movwf	31	;volatile
   528  0076                     l709:
   529                           
   530                           ;Main.c: 85:     TRISC = 6;
   531  0076  3006               	movlw	6
   532  0077  1683               	bsf	3,5	;RP0=1, select bank1
   533  0078  1303               	bcf	3,6	;RP1=0, select bank1
   534  0079  0087               	movwf	7	;volatile
   535  007A                     l711:
   536                           
   537                           ;Main.c: 86:     PR2 = 249;
   538  007A  30F9               	movlw	249
   539  007B  0092               	movwf	18	;volatile
   540  007C                     l713:
   541                           
   542                           ;Main.c: 87:     CCP1M3 = 1;
   543  007C  1283               	bcf	3,5	;RP0=0, select bank0
   544  007D  1303               	bcf	3,6	;RP1=0, select bank0
   545  007E  1597               	bsf	23,3	;volatile
   546  007F                     l715:
   547                           
   548                           ;Main.c: 88:     CCP1M2 = 1;
   549  007F  1517               	bsf	23,2	;volatile
   550  0080                     l717:
   551                           
   552                           ;Main.c: 89:     CCPR1L = 32;
   553  0080  3020               	movlw	32
   554  0081  0095               	movwf	21	;volatile
   555  0082                     l719:
   556                           
   557                           ;Main.c: 92:     CCP2M3 = 1;
   558  0082  159D               	bsf	29,3	;volatile
   559  0083                     l721:
   560                           
   561                           ;Main.c: 93:     CCP2M2 = 1;
   562  0083  151D               	bsf	29,2	;volatile
   563  0084                     l723:
   564                           
   565                           ;Main.c: 94:     CCPR2L = 32;
   566  0084  3020               	movlw	32
   567  0085  009B               	movwf	27	;volatile
   568  0086                     l725:
   569                           
   570                           ;Main.c: 96:     TMR2IF = 0;
   571  0086  108C               	bcf	12,1	;volatile
   572  0087                     l727:
   573                           
   574                           ;Main.c: 97:     T2CON = 3;
   575  0087  3003               	movlw	3
   576  0088  0092               	movwf	18	;volatile
   577  0089                     l729:
   578                           
   579                           ;Main.c: 98:     T2CONbits.TMR2ON = 1;
   580  0089  1512               	bsf	18,2	;volatile
   581  008A                     l93:	
   582                           ;Main.c: 100:     }
   583                           
   584                           
   585                           ;Main.c: 99:     while(TMR2IF==0){
   586  008A  1C8C               	btfss	12,1	;volatile
   587  008B  288D               	goto	u11
   588  008C  288E               	goto	u10
   589  008D                     u11:
   590  008D  288A               	goto	l93
   591  008E                     u10:
   592  008E                     l731:
   593                           
   594                           ;Main.c: 101:     TRISC = 0;
   595  008E  1683               	bsf	3,5	;RP0=1, select bank1
   596  008F  1303               	bcf	3,6	;RP1=0, select bank1
   597  0090  0187               	clrf	7	;volatile
   598  0091                     l733:
   599                           
   600                           ;Main.c: 104:     INTCONbits.GIE = 1;
   601  0091  178B               	bsf	11,7	;volatile
   602  0092                     l735:
   603                           
   604                           ;Main.c: 105:     INTCONbits.PEIE = 1;
   605  0092  170B               	bsf	11,6	;volatile
   606  0093                     l737:
   607                           
   608                           ;Main.c: 106:     PIE1bits.ADIE = 1;
   609  0093  170C               	bsf	12,6	;volatile
   610                           
   611                           ;Main.c: 110:     PORTA = 0;
   612  0094  1283               	bcf	3,5	;RP0=0, select bank0
   613  0095  1303               	bcf	3,6	;RP1=0, select bank0
   614  0096  0185               	clrf	5	;volatile
   615                           
   616                           ;Main.c: 111:     PORTB = 0;
   617  0097  0186               	clrf	6	;volatile
   618                           
   619                           ;Main.c: 112:     PORTC = 0;
   620  0098  0187               	clrf	7	;volatile
   621                           
   622                           ;Main.c: 113:     PORTD = 0;
   623  0099  0188               	clrf	8	;volatile
   624                           
   625                           ;Main.c: 114:     PORTE = 0;
   626  009A  0189               	clrf	9	;volatile
   627  009B                     l96:
   628  009B  0008               	return
   629  009C                     __end_of_setup:
   630                           
   631                           	psect	text2
   632  009C                     __ptext2:	
   633 ;; *************** function _isr *****************
   634 ;; Defined at:
   635 ;;		line 122 in file "Main.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   649 ;;      Params:         0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0
   651 ;;      Temps:          3       0       0       0       0
   652 ;;      Totals:         3       0       0       0       0
   653 ;;Total ram usage:        3 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		Interrupt level 1
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           
   663                           ;psect for function _isr
   664  009C                     _isr:
   665  009C                     i1l761:
   666                           
   667                           ;Main.c: 123:     if (ADIF==1){
   668  009C  1283               	bcf	3,5	;RP0=0, select bank0
   669  009D  1303               	bcf	3,6	;RP1=0, select bank0
   670  009E  1F0C               	btfss	12,6	;volatile
   671  009F  28A1               	goto	u8_21
   672  00A0  28A2               	goto	u8_20
   673  00A1                     u8_21:
   674  00A1  28B6               	goto	i1l105
   675  00A2                     u8_20:
   676  00A2                     i1l763:
   677                           
   678                           ;Main.c: 124:         if(CHS0==0) {
   679  00A2  191F               	btfsc	31,2	;volatile
   680  00A3  28A5               	goto	u9_21
   681  00A4  28A6               	goto	u9_20
   682  00A5                     u9_21:
   683  00A5  28AC               	goto	i1l102
   684  00A6                     u9_20:
   685  00A6                     i1l765:
   686                           
   687                           ;Main.c: 125:             pot1 = ADRESH;
   688  00A6  081E               	movf	30,w	;volatile
   689  00A7  00F0               	movwf	??_isr
   690  00A8  0870               	movf	??_isr,w
   691  00A9  00F8               	movwf	_pot1
   692  00AA                     i1l767:
   693                           
   694                           ;Main.c: 126:             CHS0 = 1;
   695  00AA  151F               	bsf	31,2	;volatile
   696                           
   697                           ;Main.c: 127:         }
   698  00AB  28B5               	goto	i1l773
   699  00AC                     i1l102:	
   700                           ;Main.c: 128:         else if(CHS0==1) {
   701                           
   702  00AC  1D1F               	btfss	31,2	;volatile
   703  00AD  28AF               	goto	u10_21
   704  00AE  28B0               	goto	u10_20
   705  00AF                     u10_21:
   706  00AF  28B5               	goto	i1l773
   707  00B0                     u10_20:
   708  00B0                     i1l769:
   709                           
   710                           ;Main.c: 129:             pot2 = ADRESH;
   711  00B0  081E               	movf	30,w	;volatile
   712  00B1  00F0               	movwf	??_isr
   713  00B2  0870               	movf	??_isr,w
   714  00B3  00F6               	movwf	_pot2
   715  00B4                     i1l771:
   716                           
   717                           ;Main.c: 130:             CHS0 = 0;
   718  00B4  111F               	bcf	31,2	;volatile
   719  00B5                     i1l773:
   720                           
   721                           ;Main.c: 132:         ADIF = 0;
   722  00B5  130C               	bcf	12,6	;volatile
   723  00B6                     i1l105:
   724  00B6  0872               	movf	??_isr+2,w
   725  00B7  008A               	movwf	10
   726  00B8  0E71               	swapf	??_isr+1,w
   727  00B9  0083               	movwf	3
   728  00BA  0EFE               	swapf	btemp,f
   729  00BB  0E7E               	swapf	btemp,w
   730  00BC  0009               	retfie
   731  00BD                     __end_of_isr:
   732  007E                     btemp	set	126	;btemp
   733  007E                     wtemp0	set	126
   734                           
   735                           	psect	intentry
   736  0004                     __pintentry:	
   737                           ;incstack = 0
   738                           ; Regs used in _isr: [wreg]
   739                           
   740  0004                     interrupt_function:
   741  007E                     saved_w	set	btemp
   742  0004  00FE               	movwf	btemp
   743  0005  0E03               	swapf	3,w
   744  0006  00F1               	movwf	??_isr+1
   745  0007  080A               	movf	10,w
   746  0008  00F2               	movwf	??_isr+2
   747  0009  120A  118A  289C   	ljmp	_isr
   748                           
   749                           	psect	config
   750                           
   751                           ;Config register CONFIG1 @ 0x2007
   752                           ;	Oscillator Selection bits
   753                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   754                           ;	Watchdog Timer Enable bit
   755                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   756                           ;	Power-up Timer Enable bit
   757                           ;	PWRTE = OFF, PWRT disabled
   758                           ;	RE3/MCLR pin function select bit
   759                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   760                           ;	Code Protection bit
   761                           ;	CP = OFF, Program memory code protection is disabled
   762                           ;	Data Code Protection bit
   763                           ;	CPD = OFF, Data memory code protection is disabled
   764                           ;	Brown Out Reset Selection bits
   765                           ;	BOREN = ON, BOR enabled
   766                           ;	Internal External Switchover bit
   767                           ;	IESO = ON, Internal/External Switchover mode is enabled
   768                           ;	Fail-Safe Clock Monitor Enabled bit
   769                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   770                           ;	Low Voltage Programming Enable bit
   771                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   772                           ;	In-Circuit Debugger Mode bit
   773                           ;	DEBUG = 0x1, unprogrammed default
   774  2007                     	org	8199
   775  2007  3FF4               	dw	16372
   776                           
   777                           ;Config register CONFIG2 @ 0x2008
   778                           ;	Brown-out Reset Selection bit
   779                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   780                           ;	Flash Program Memory Self Write Enable bits
   781                           ;	WRT = OFF, Write protection off
   782  2008                     	org	8200
   783  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMMON     2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 31 16:50:16 2021

                     l93 008A                       l96 009B                       _GO 00F9  
                     u10 008E                       u11 008D                       u20 003C  
                     u21 0038                       u50 0051                       u34 003F  
                     u51 004D                       u45 0042                       u64 0054  
                     u75 0057                      l701 0067                      l711 007A  
                    l703 006F                      l721 0083                      l713 007C  
                    l705 0071                      l731 008E                      l723 0084  
                    l715 007F                      l707 0072                      l733 0091  
                    l725 0086                      l717 0080                      l709 0076  
                    l741 001C                      l735 0092                      l727 0087  
                    l719 0082                      l751 0035                      l743 001F  
                    l737 0093                      l729 0089                      l753 003F  
                    l745 0022                      l755 0049                      l747 002A  
                    l739 0017                      l757 004A                      l749 0032  
                    l759 0054                      l697 0062                      l699 0066  
                    _PR2 0092                      _isr 009C             _pulse_width1 0077  
           _pulse_width2 0075                     _ADIF 0066                     ?_isr 0070  
                   _CHS0 00FA                     u8_20 00A2                     u8_21 00A1  
                   u9_20 00A6                     u9_21 00A5                     _main 0017  
                   _pot1 0078                     _pot2 0076                     btemp 007E  
                   start 000C                    ??_isr 0070                    _DC1B0 00BC  
                  _DC1B1 00BD                    _DC2B0 00EC                    _DC2B1 00ED  
                  ?_main 0070                    _ANSEL 0188                    _T2CON 0012  
                  i1l102 00AC                    i1l105 00B6                    i1l761 009C  
                  i1l771 00B4                    i1l763 00A2                    i1l773 00B5  
                  i1l765 00A6                    i1l767 00AA                    i1l769 00B0  
                  u10_20 00B0                    u10_21 00AF                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _setup 0062                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0062  
                 ??_main 0073                   _ADCON0 001F                   _CCP1M2 00BA  
                 _CCP1M3 00BB                   _CCP2M2 00EA                   _CCP2M3 00EB  
                 _ADRESH 001E                   _CCPR1L 0015                   _CCPR2L 001B  
                 ?_setup 0070                   _ANSELH 0189                   _OSCCON 008F  
                 _TMR2IF 0061                   saved_w 007E  __end_of__initialization 0013  
         __pcstackCOMMON 0070            __end_of_setup 009C                  ??_setup 0073  
             __pmaintext 0017               __pintentry 0004                  __ptext1 0062  
                __ptext2 009C                _T2CONbits 0012             __size_of_isr 0021  
   end_of_initialization 0013      start_initialization 000F              __end_of_isr 00BD  
            __pbssCOMMON 0075                ___latbits 0002           __size_of_setup 003A  
      interrupt_function 0004                 _PIE1bits 008C               _ADCON1bits 009F  
          __size_of_main 004B               _INTCONbits 000B                 intlevel1 0000  
