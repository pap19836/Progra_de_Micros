

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 27 13:01:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  001E                     _ADRESH	set	30
   205  0009                     _PORTE	set	9
   206  0008                     _PORTD	set	8
   207  0007                     _PORTC	set	7
   208  0006                     _PORTB	set	6
   209  0005                     _PORTA	set	5
   210  000B                     _INTCONbits	set	11
   211  0012                     _T2CONbits	set	18
   212  0012                     _T2CON	set	18
   213  001F                     _ADCON0	set	31
   214  001B                     _CCPR2L	set	27
   215  0015                     _CCPR1L	set	21
   216  00FA                     _CHS0	set	250
   217  0066                     _ADIF	set	102
   218  0061                     _TMR2IF	set	97
   219  00EA                     _CCP2M2	set	234
   220  00EB                     _CCP2M3	set	235
   221  00BA                     _CCP1M2	set	186
   222  00BB                     _CCP1M3	set	187
   223  00EC                     _DC2B0	set	236
   224  00ED                     _DC2B1	set	237
   225  00BC                     _DC1B0	set	188
   226  00BD                     _DC1B1	set	189
   227  00F9                     _GO	set	249
   228  008C                     _PIE1bits	set	140
   229  0092                     _PR2	set	146
   230  009F                     _ADCON1bits	set	159
   231  008F                     _OSCCON	set	143
   232  0089                     _TRISE	set	137
   233  0088                     _TRISD	set	136
   234  0087                     _TRISC	set	135
   235  0086                     _TRISB	set	134
   236  0085                     _TRISA	set	133
   237  0189                     _ANSELH	set	393
   238  0188                     _ANSEL	set	392
   239                           
   240                           	psect	cinit
   241  000F                     start_initialization:	
   242                           ; #config settings
   243                           
   244  000F                     __initialization:
   245                           
   246                           ; Clear objects allocated to COMMON
   247  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   248  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   249  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   250  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   251  0013                     end_of_initialization:	
   252                           ;End of C runtime variable initialization code
   253                           
   254  0013                     __end_of__initialization:
   255  0013  0183               	clrf	3
   256  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   257                           
   258                           	psect	bssCOMMON
   259  0075                     __pbssCOMMON:
   260  0075                     _pulse_width2:
   261  0075                     	ds	1
   262  0076                     _pot2:
   263  0076                     	ds	1
   264  0077                     _pulse_width1:
   265  0077                     	ds	1
   266  0078                     _pot1:
   267  0078                     	ds	1
   268                           
   269                           	psect	cstackCOMMON
   270  0070                     __pcstackCOMMON:
   271  0070                     ?_setup:
   272  0070                     ?_main:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_isr:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ??_isr:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 1 bytes @ 0x0
   283  0070                     	ds	3
   284  0073                     ??_setup:
   285  0073                     ??_main:	
   286                           ; 1 bytes @ 0x3
   287                           
   288                           
   289                           ; 1 bytes @ 0x3
   290  0073                     	ds	2
   291                           
   292                           	psect	maintext
   293  0017                     __pmaintext:	
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 51 in file "Main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0, pclath, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : B00/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0
   315 ;;      Temps:          2       0       0       0       0
   316 ;;      Totals:         2       0       0       0       0
   317 ;;Total ram usage:        2 bytes
   318 ;; Hardware stack levels required when called: 2
   319 ;; This function calls:
   320 ;;		_setup
   321 ;; This function is called by:
   322 ;;		Startup code after reset
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           
   327                           ;psect for function _main
   328  0017                     _main:
   329  0017                     l739:	
   330                           ;incstack = 0
   331                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   332                           
   333                           
   334                           ;Main.c: 52:     setup();
   335  0017  120A  118A  206A  120A  118A  	fcall	_setup
   336  001C                     l741:
   337                           
   338                           ;Main.c: 54:         GO = 1;
   339  001C  1283               	bcf	3,5	;RP0=0, select bank0
   340  001D  1303               	bcf	3,6	;RP1=0, select bank0
   341  001E  149F               	bsf	31,1	;volatile
   342  001F                     l743:
   343                           
   344                           ;Main.c: 55:         _delay((unsigned long)((10)*(500000/4000000.0)));
   345  001F  0000               	nop
   346  0020                     l745:
   347                           
   348                           ;Main.c: 56:         pulse_width1 = (pot1 >> 3) + 32;
   349  0020  0878               	movf	_pot1,w
   350  0021  00F3               	movwf	??_main
   351  0022  3003               	movlw	3
   352  0023                     u25:
   353  0023  1003               	clrc
   354  0024  0CF3               	rrf	??_main,f
   355  0025  3EFF               	addlw	-1
   356  0026  1D03               	skipz
   357  0027  2823               	goto	u25
   358  0028  0873               	movf	??_main,w
   359  0029  3E20               	addlw	32
   360  002A  00F4               	movwf	??_main+1
   361  002B  0874               	movf	??_main+1,w
   362  002C  00F7               	movwf	_pulse_width1
   363  002D                     l747:
   364                           
   365                           ;Main.c: 57:         pulse_width2 = (pot2 >> 3) + 32;
   366  002D  0876               	movf	_pot2,w
   367  002E  00F3               	movwf	??_main
   368  002F  3003               	movlw	3
   369  0030                     u35:
   370  0030  1003               	clrc
   371  0031  0CF3               	rrf	??_main,f
   372  0032  3EFF               	addlw	-1
   373  0033  1D03               	skipz
   374  0034  2830               	goto	u35
   375  0035  0873               	movf	??_main,w
   376  0036  3E20               	addlw	32
   377  0037  00F4               	movwf	??_main+1
   378  0038  0874               	movf	??_main+1,w
   379  0039  00F5               	movwf	_pulse_width2
   380  003A                     l749:
   381                           
   382                           ;Main.c: 58:         DC1B1 = pulse_width1 & 2;
   383  003A  1283               	bcf	3,5	;RP0=0, select bank0
   384  003B  1303               	bcf	3,6	;RP1=0, select bank0
   385  003C  1297               	bcf	23,5	;volatile
   386  003D                     l751:
   387                           
   388                           ;Main.c: 59:         DC1B0 = pulse_width1 & 1;
   389  003D  1877               	btfsc	_pulse_width1,0
   390  003E  2840               	goto	u41
   391  003F  2844               	goto	u40
   392  0040                     u41:
   393  0040  1283               	bcf	3,5	;RP0=0, select bank0
   394  0041  1303               	bcf	3,6	;RP1=0, select bank0
   395  0042  1617               	bsf	23,4	;volatile
   396  0043  2847               	goto	u54
   397  0044                     u40:
   398  0044  1283               	bcf	3,5	;RP0=0, select bank0
   399  0045  1303               	bcf	3,6	;RP1=0, select bank0
   400  0046  1217               	bcf	23,4	;volatile
   401  0047                     u54:
   402  0047                     l753:
   403                           
   404                           ;Main.c: 60:         CCPR1L = pulse_width1 >> 2;
   405  0047  0877               	movf	_pulse_width1,w
   406  0048  00F3               	movwf	??_main
   407  0049  3002               	movlw	2
   408  004A                     u65:
   409  004A  1003               	clrc
   410  004B  0CF3               	rrf	??_main,f
   411  004C  3EFF               	addlw	-1
   412  004D  1D03               	skipz
   413  004E  284A               	goto	u65
   414  004F  0873               	movf	??_main,w
   415  0050  0095               	movwf	21	;volatile
   416  0051                     l755:
   417                           
   418                           ;Main.c: 61:         DC2B1 = pulse_width2 & 2;
   419  0051  129D               	bcf	29,5	;volatile
   420  0052                     l757:
   421                           
   422                           ;Main.c: 62:         DC2B0 = pulse_width2 & 1;
   423  0052  1875               	btfsc	_pulse_width2,0
   424  0053  2855               	goto	u71
   425  0054  2859               	goto	u70
   426  0055                     u71:
   427  0055  1283               	bcf	3,5	;RP0=0, select bank0
   428  0056  1303               	bcf	3,6	;RP1=0, select bank0
   429  0057  161D               	bsf	29,4	;volatile
   430  0058  285C               	goto	u84
   431  0059                     u70:
   432  0059  1283               	bcf	3,5	;RP0=0, select bank0
   433  005A  1303               	bcf	3,6	;RP1=0, select bank0
   434  005B  121D               	bcf	29,4	;volatile
   435  005C                     u84:
   436  005C                     l759:
   437                           
   438                           ;Main.c: 63:         CCPR2L = pulse_width2 >> 2;
   439  005C  0875               	movf	_pulse_width2,w
   440  005D  00F3               	movwf	??_main
   441  005E  3002               	movlw	2
   442  005F                     u95:
   443  005F  1003               	clrc
   444  0060  0CF3               	rrf	??_main,f
   445  0061  3EFF               	addlw	-1
   446  0062  1D03               	skipz
   447  0063  285F               	goto	u95
   448  0064  0873               	movf	??_main,w
   449  0065  009B               	movwf	27	;volatile
   450  0066  281C               	goto	l741
   451  0067  120A  118A  280C   	ljmp	start
   452  006A                     __end_of_main:
   453                           
   454                           	psect	text1
   455  006A                     __ptext1:	
   456 ;; *************** function _setup *****************
   457 ;; Defined at:
   458 ;;		line 69 in file "Main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, status,2
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   472 ;;      Params:         0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0
   475 ;;      Totals:         0       0       0       0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels used: 1
   478 ;; Hardware stack levels required when called: 1
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           
   487                           ;psect for function _setup
   488  006A                     _setup:
   489  006A                     l697:	
   490                           ;incstack = 0
   491                           ; Regs used in _setup: [wreg+status,2]
   492                           
   493                           
   494                           ;Main.c: 71:     ANSEL = 3;
   495  006A  3003               	movlw	3
   496  006B  1683               	bsf	3,5	;RP0=1, select bank3
   497  006C  1703               	bsf	3,6	;RP1=1, select bank3
   498  006D  0088               	movwf	8	;volatile
   499  006E                     l699:
   500                           
   501                           ;Main.c: 72:     ANSELH = 0;
   502  006E  0189               	clrf	9	;volatile
   503  006F                     l701:
   504                           
   505                           ;Main.c: 73:     TRISA = 3;
   506  006F  3003               	movlw	3
   507  0070  1683               	bsf	3,5	;RP0=1, select bank1
   508  0071  1303               	bcf	3,6	;RP1=0, select bank1
   509  0072  0085               	movwf	5	;volatile
   510                           
   511                           ;Main.c: 74:     TRISB = 0;
   512  0073  0186               	clrf	6	;volatile
   513                           
   514                           ;Main.c: 75:     TRISC = 0;
   515  0074  0187               	clrf	7	;volatile
   516                           
   517                           ;Main.c: 76:     TRISD = 0;
   518  0075  0188               	clrf	8	;volatile
   519                           
   520                           ;Main.c: 77:     TRISE = 0;
   521  0076  0189               	clrf	9	;volatile
   522  0077                     l703:
   523                           
   524                           ;Main.c: 79:     OSCCON = 0b00110000;
   525  0077  3030               	movlw	48
   526  0078  008F               	movwf	15	;volatile
   527  0079                     l705:
   528                           
   529                           ;Main.c: 81:     ADCON1bits.ADFM = 0;
   530  0079  139F               	bcf	31,7	;volatile
   531  007A                     l707:
   532                           
   533                           ;Main.c: 82:     ADCON0 = 0b01000001;
   534  007A  3041               	movlw	65
   535  007B  1283               	bcf	3,5	;RP0=0, select bank0
   536  007C  1303               	bcf	3,6	;RP1=0, select bank0
   537  007D  009F               	movwf	31	;volatile
   538  007E                     l709:
   539                           
   540                           ;Main.c: 85:     TRISC = 6;
   541  007E  3006               	movlw	6
   542  007F  1683               	bsf	3,5	;RP0=1, select bank1
   543  0080  1303               	bcf	3,6	;RP1=0, select bank1
   544  0081  0087               	movwf	7	;volatile
   545  0082                     l711:
   546                           
   547                           ;Main.c: 86:     PR2 = 164;
   548  0082  30A4               	movlw	164
   549  0083  0092               	movwf	18	;volatile
   550  0084                     l713:
   551                           
   552                           ;Main.c: 87:     CCP1M3 = 1;
   553  0084  1283               	bcf	3,5	;RP0=0, select bank0
   554  0085  1303               	bcf	3,6	;RP1=0, select bank0
   555  0086  1597               	bsf	23,3	;volatile
   556  0087                     l715:
   557                           
   558                           ;Main.c: 88:     CCP1M2 = 1;
   559  0087  1517               	bsf	23,2	;volatile
   560  0088                     l717:
   561                           
   562                           ;Main.c: 89:     CCPR1L = 32;
   563  0088  3020               	movlw	32
   564  0089  0095               	movwf	21	;volatile
   565  008A                     l719:
   566                           
   567                           ;Main.c: 92:     CCP2M3 = 1;
   568  008A  159D               	bsf	29,3	;volatile
   569  008B                     l721:
   570                           
   571                           ;Main.c: 93:     CCP2M2 = 1;
   572  008B  151D               	bsf	29,2	;volatile
   573  008C                     l723:
   574                           
   575                           ;Main.c: 94:     CCPR2L = 32;
   576  008C  3020               	movlw	32
   577  008D  009B               	movwf	27	;volatile
   578  008E                     l725:
   579                           
   580                           ;Main.c: 96:     TMR2IF = 0;
   581  008E  108C               	bcf	12,1	;volatile
   582  008F                     l727:
   583                           
   584                           ;Main.c: 97:     T2CON = 3;
   585  008F  3003               	movlw	3
   586  0090  0092               	movwf	18	;volatile
   587  0091                     l729:
   588                           
   589                           ;Main.c: 98:     T2CONbits.TMR2ON = 1;
   590  0091  1512               	bsf	18,2	;volatile
   591  0092                     l93:	
   592                           ;Main.c: 100:     }
   593                           
   594                           
   595                           ;Main.c: 99:     while(TMR2IF==0){
   596  0092  1C8C               	btfss	12,1	;volatile
   597  0093  2895               	goto	u11
   598  0094  2896               	goto	u10
   599  0095                     u11:
   600  0095  2892               	goto	l93
   601  0096                     u10:
   602  0096                     l731:
   603                           
   604                           ;Main.c: 101:     TRISC = 0;
   605  0096  1683               	bsf	3,5	;RP0=1, select bank1
   606  0097  1303               	bcf	3,6	;RP1=0, select bank1
   607  0098  0187               	clrf	7	;volatile
   608  0099                     l733:
   609                           
   610                           ;Main.c: 104:     INTCONbits.GIE = 1;
   611  0099  178B               	bsf	11,7	;volatile
   612  009A                     l735:
   613                           
   614                           ;Main.c: 105:     INTCONbits.PEIE = 1;
   615  009A  170B               	bsf	11,6	;volatile
   616  009B                     l737:
   617                           
   618                           ;Main.c: 106:     PIE1bits.ADIE = 1;
   619  009B  170C               	bsf	12,6	;volatile
   620                           
   621                           ;Main.c: 110:     PORTA = 0;
   622  009C  1283               	bcf	3,5	;RP0=0, select bank0
   623  009D  1303               	bcf	3,6	;RP1=0, select bank0
   624  009E  0185               	clrf	5	;volatile
   625                           
   626                           ;Main.c: 111:     PORTB = 0;
   627  009F  0186               	clrf	6	;volatile
   628                           
   629                           ;Main.c: 112:     PORTC = 0;
   630  00A0  0187               	clrf	7	;volatile
   631                           
   632                           ;Main.c: 113:     PORTD = 0;
   633  00A1  0188               	clrf	8	;volatile
   634                           
   635                           ;Main.c: 114:     PORTE = 0;
   636  00A2  0189               	clrf	9	;volatile
   637  00A3                     l96:
   638  00A3  0008               	return
   639  00A4                     __end_of_setup:
   640                           
   641                           	psect	text2
   642  00A4                     __ptext2:	
   643 ;; *************** function _isr *****************
   644 ;; Defined at:
   645 ;;		line 122 in file "Main.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   659 ;;      Params:         0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0
   661 ;;      Temps:          3       0       0       0       0
   662 ;;      Totals:         3       0       0       0       0
   663 ;;Total ram usage:        3 bytes
   664 ;; Hardware stack levels used: 1
   665 ;; This function calls:
   666 ;;		Nothing
   667 ;; This function is called by:
   668 ;;		Interrupt level 1
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           
   673                           ;psect for function _isr
   674  00A4                     _isr:
   675  00A4                     i1l761:
   676                           
   677                           ;Main.c: 123:     if (ADIF==1){
   678  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   679  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   680  00A6  1F0C               	btfss	12,6	;volatile
   681  00A7  28A9               	goto	u10_21
   682  00A8  28AA               	goto	u10_20
   683  00A9                     u10_21:
   684  00A9  28BE               	goto	i1l105
   685  00AA                     u10_20:
   686  00AA                     i1l763:
   687                           
   688                           ;Main.c: 124:         if(CHS0==0) {
   689  00AA  191F               	btfsc	31,2	;volatile
   690  00AB  28AD               	goto	u11_21
   691  00AC  28AE               	goto	u11_20
   692  00AD                     u11_21:
   693  00AD  28B4               	goto	i1l102
   694  00AE                     u11_20:
   695  00AE                     i1l765:
   696                           
   697                           ;Main.c: 125:             pot1 = ADRESH;
   698  00AE  081E               	movf	30,w	;volatile
   699  00AF  00F0               	movwf	??_isr
   700  00B0  0870               	movf	??_isr,w
   701  00B1  00F8               	movwf	_pot1
   702  00B2                     i1l767:
   703                           
   704                           ;Main.c: 126:             CHS0 = 1;
   705  00B2  151F               	bsf	31,2	;volatile
   706                           
   707                           ;Main.c: 127:         }
   708  00B3  28BD               	goto	i1l773
   709  00B4                     i1l102:	
   710                           ;Main.c: 128:         else if(CHS0==1) {
   711                           
   712  00B4  1D1F               	btfss	31,2	;volatile
   713  00B5  28B7               	goto	u12_21
   714  00B6  28B8               	goto	u12_20
   715  00B7                     u12_21:
   716  00B7  28BD               	goto	i1l773
   717  00B8                     u12_20:
   718  00B8                     i1l769:
   719                           
   720                           ;Main.c: 129:             pot2 = ADRESH;
   721  00B8  081E               	movf	30,w	;volatile
   722  00B9  00F0               	movwf	??_isr
   723  00BA  0870               	movf	??_isr,w
   724  00BB  00F6               	movwf	_pot2
   725  00BC                     i1l771:
   726                           
   727                           ;Main.c: 130:             CHS0 = 0;
   728  00BC  111F               	bcf	31,2	;volatile
   729  00BD                     i1l773:
   730                           
   731                           ;Main.c: 132:         ADIF = 0;
   732  00BD  130C               	bcf	12,6	;volatile
   733  00BE                     i1l105:
   734  00BE  0872               	movf	??_isr+2,w
   735  00BF  008A               	movwf	10
   736  00C0  0E71               	swapf	??_isr+1,w
   737  00C1  0083               	movwf	3
   738  00C2  0EFE               	swapf	btemp,f
   739  00C3  0E7E               	swapf	btemp,w
   740  00C4  0009               	retfie
   741  00C5                     __end_of_isr:
   742  007E                     btemp	set	126	;btemp
   743  007E                     wtemp0	set	126
   744                           
   745                           	psect	intentry
   746  0004                     __pintentry:	
   747                           ;incstack = 0
   748                           ; Regs used in _isr: [wreg]
   749                           
   750  0004                     interrupt_function:
   751  007E                     saved_w	set	btemp
   752  0004  00FE               	movwf	btemp
   753  0005  0E03               	swapf	3,w
   754  0006  00F1               	movwf	??_isr+1
   755  0007  080A               	movf	10,w
   756  0008  00F2               	movwf	??_isr+2
   757  0009  120A  118A  28A4   	ljmp	_isr
   758                           
   759                           	psect	config
   760                           
   761                           ;Config register CONFIG1 @ 0x2007
   762                           ;	Oscillator Selection bits
   763                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   764                           ;	Watchdog Timer Enable bit
   765                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   766                           ;	Power-up Timer Enable bit
   767                           ;	PWRTE = OFF, PWRT disabled
   768                           ;	RE3/MCLR pin function select bit
   769                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   770                           ;	Code Protection bit
   771                           ;	CP = OFF, Program memory code protection is disabled
   772                           ;	Data Code Protection bit
   773                           ;	CPD = OFF, Data memory code protection is disabled
   774                           ;	Brown Out Reset Selection bits
   775                           ;	BOREN = ON, BOR enabled
   776                           ;	Internal External Switchover bit
   777                           ;	IESO = ON, Internal/External Switchover mode is enabled
   778                           ;	Fail-Safe Clock Monitor Enabled bit
   779                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   780                           ;	Low Voltage Programming Enable bit
   781                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   782                           ;	In-Circuit Debugger Mode bit
   783                           ;	DEBUG = 0x1, unprogrammed default
   784  2007                     	org	8199
   785  2007  3FF4               	dw	16372
   786                           
   787                           ;Config register CONFIG2 @ 0x2008
   788                           ;	Brown-out Reset Selection bit
   789                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   790                           ;	Flash Program Memory Self Write Enable bits
   791                           ;	WRT = OFF, Write protection off
   792  2008                     	org	8200
   793  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMMON     2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 27 13:01:25 2021

                     l93 0092                       l96 00A3                       _GO 00F9  
                     u10 0096                       u11 0095                       u40 0044  
                     u41 0040                       u25 0023                       u35 0030  
                     u70 0059                       u54 0047                       u71 0055  
                     u65 004A                       u84 005C                       u95 005F  
                    l701 006F                      l711 0082                      l703 0077  
                    l721 008B                      l713 0084                      l705 0079  
                    l731 0096                      l723 008C                      l715 0087  
                    l707 007A                      l733 0099                      l725 008E  
                    l717 0088                      l709 007E                      l741 001C  
                    l735 009A                      l727 008F                      l719 008A  
                    l751 003D                      l743 001F                      l737 009B  
                    l729 0091                      l753 0047                      l745 0020  
                    l755 0051                      l747 002D                      l739 0017  
                    l757 0052                      l749 003A                      l759 005C  
                    l697 006A                      l699 006E                      _PR2 0092  
                    _isr 00A4             _pulse_width1 0077             _pulse_width2 0075  
                   _ADIF 0066                     ?_isr 0070                     _CHS0 00FA  
                   _main 0017                     _pot1 0078                     _pot2 0076  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  _DC1B0 00BC                    _DC1B1 00BD                    _DC2B0 00EC  
                  _DC2B1 00ED                    ?_main 0070                    _ANSEL 0188  
                  _T2CON 0012                    i1l102 00B4                    i1l105 00BE  
                  i1l761 00A4                    i1l771 00BC                    i1l763 00AA  
                  i1l773 00BD                    i1l765 00AE                    i1l767 00B2  
                  i1l769 00B8                    u10_20 00AA                    u10_21 00A9  
                  u11_20 00AE                    u11_21 00AD                    u12_20 00B8  
                  u12_21 00B7                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 006A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 006A                   ??_main 0073  
                 _ADCON0 001F                   _CCP1M2 00BA                   _CCP1M3 00BB  
                 _CCP2M2 00EA                   _CCP2M3 00EB                   _ADRESH 001E  
                 _CCPR1L 0015                   _CCPR2L 001B                   ?_setup 0070  
                 _ANSELH 0189                   _OSCCON 008F                   _TMR2IF 0061  
                 saved_w 007E  __end_of__initialization 0013           __pcstackCOMMON 0070  
          __end_of_setup 00A4                  ??_setup 0073               __pmaintext 0017  
             __pintentry 0004                  __ptext1 006A                  __ptext2 00A4  
              _T2CONbits 0012             __size_of_isr 0021     end_of_initialization 0013  
    start_initialization 000F              __end_of_isr 00C5              __pbssCOMMON 0075  
              ___latbits 0002           __size_of_setup 003A        interrupt_function 0004  
               _PIE1bits 008C               _ADCON1bits 009F            __size_of_main 0053  
             _INTCONbits 000B                 intlevel1 0000  
