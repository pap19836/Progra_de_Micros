

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 03 15:28:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  001E                     _ADRESH	set	30
   214  0019                     _TXREG	set	25
   215  0009                     _PORTE	set	9
   216  0008                     _PORTD	set	8
   217  0007                     _PORTC	set	7
   218  0006                     _PORTB	set	6
   219  0005                     _PORTA	set	5
   220  0012                     _T2CONbits	set	18
   221  0012                     _T2CON	set	18
   222  0001                     _TMR0	set	1
   223  001F                     _ADCON0	set	31
   224  0018                     _RCSTAbits	set	24
   225  001A                     _RCREG	set	26
   226  0015                     _CCPR1L	set	21
   227  00FB                     _CHS1	set	251
   228  00FA                     _CHS0	set	250
   229  0066                     _ADIF	set	102
   230  0042                     _RD2	set	66
   231  0041                     _RD1	set	65
   232  0040                     _RD0	set	64
   233  005D                     _TMR0IE	set	93
   234  005E                     _PEIE	set	94
   235  005F                     _GIE	set	95
   236  0061                     _TMR2IF	set	97
   237  00BA                     _CCP1M2	set	186
   238  00BB                     _CCP1M3	set	187
   239  005A                     _TMR0IF	set	90
   240  002D                     _RA5	set	45
   241  002C                     _RA4	set	44
   242  0065                     _RCIF	set	101
   243  00BC                     _DC1B0	set	188
   244  00BD                     _DC1B1	set	189
   245  00F9                     _GO	set	249
   246  009E                     _ADRESL	set	158
   247  0092                     _PR2	set	146
   248  0087                     _TRISCbits	set	135
   249  0081                     _OPTION_REGbits	set	129
   250  009F                     _ADCON1bits	set	159
   251  0099                     _SPBRG	set	153
   252  009A                     _SPBRGH	set	154
   253  0098                     _TXSTAbits	set	152
   254  0089                     _TRISE	set	137
   255  0088                     _TRISD	set	136
   256  0087                     _TRISC	set	135
   257  0086                     _TRISB	set	134
   258  0085                     _TRISA	set	133
   259  0466                     _ADIE	set	1126
   260  040D                     _T0CS	set	1037
   261  040B                     _PSA	set	1035
   262  010C                     _EEDATA	set	268
   263  010D                     _EEADR	set	269
   264  018D                     _EECON2	set	397
   265  0189                     _ANSELH	set	393
   266  0188                     _ANSEL	set	392
   267  0C60                     _RD	set	3168
   268  0C61                     _WR	set	3169
   269  0C62                     _WREN	set	3170
   270  0C67                     _EEPGD	set	3175
   271  0C3B                     _BRG16	set	3131
   272                           
   273                           	psect	strings
   274  0300                     __pstrings:
   275  0300                     stringtab:
   276  0300                     __stringtab:
   277  0300                     stringcode:	
   278                           ;	String table - string pointers are 1 byte each
   279                           
   280  0300                     stringdir:
   281  0300  3003               	movlw	high stringdir
   282  0301  008A               	movwf	10
   283  0302  0804               	movf	4,w
   284  0303  0A84               	incf	4,f
   285  0304  0782               	addwf	2,f
   286  0305                     __stringbase:
   287  0305  3400               	retlw	0
   288  0306                     __end_of__stringtab:
   289  0306                     STR_5:
   290  0306  3453               	retlw	83	;'S'
   291  0307  3420               	retlw	32	;' '
   292  0308  342D               	retlw	45	;'-'
   293  0309  3420               	retlw	32	;' '
   294  030A  3447               	retlw	71	;'G'
   295  030B  3475               	retlw	117	;'u'
   296  030C  3461               	retlw	97	;'a'
   297  030D  3472               	retlw	114	;'r'
   298  030E  3464               	retlw	100	;'d'
   299  030F  3461               	retlw	97	;'a'
   300  0310  3472               	retlw	114	;'r'
   301  0311  3420               	retlw	32	;' '
   302  0312  3445               	retlw	69	;'E'
   303  0313  3473               	retlw	115	;'s'
   304  0314  3474               	retlw	116	;'t'
   305  0315  3461               	retlw	97	;'a'
   306  0316  3464               	retlw	100	;'d'
   307  0317  346F               	retlw	111	;'o'
   308  0318  340A               	retlw	10
   309  0319  3453               	retlw	83	;'S'
   310  031A  3450               	retlw	80	;'P'
   311  031B  3441               	retlw	65	;'A'
   312  031C  3443               	retlw	67	;'C'
   313  031D  3445               	retlw	69	;'E'
   314  031E  3420               	retlw	32	;' '
   315  031F  342D               	retlw	45	;'-'
   316  0320  3420               	retlw	32	;' '
   317  0321  3452               	retlw	82	;'R'
   318  0322  3465               	retlw	101	;'e'
   319  0323  3467               	retlw	103	;'g'
   320  0324  3472               	retlw	114	;'r'
   321  0325  3465               	retlw	101	;'e'
   322  0326  3473               	retlw	115	;'s'
   323  0327  3461               	retlw	97	;'a'
   324  0328  3472               	retlw	114	;'r'
   325  0329  3420               	retlw	32	;' '
   326  032A  3461               	retlw	97	;'a'
   327  032B  3420               	retlw	32	;' '
   328  032C  3465               	retlw	101	;'e'
   329  032D  3473               	retlw	115	;'s'
   330  032E  3474               	retlw	116	;'t'
   331  032F  3461               	retlw	97	;'a'
   332  0330  3464               	retlw	100	;'d'
   333  0331  346F               	retlw	111	;'o'
   334  0332  340A               	retlw	10
   335  0333  3400               	retlw	0
   336  0334                     STR_4:
   337  0334  340A               	retlw	10
   338  0335  3449               	retlw	73	;'I'
   339  0336  346E               	retlw	110	;'n'
   340  0337  3473               	retlw	115	;'s'
   341  0338  3474               	retlw	116	;'t'
   342  0339  3472               	retlw	114	;'r'
   343  033A  3475               	retlw	117	;'u'
   344  033B  3463               	retlw	99	;'c'
   345  033C  3463               	retlw	99	;'c'
   346  033D  3469               	retlw	105	;'i'
   347  033E  346F               	retlw	111	;'o'
   348  033F  346E               	retlw	110	;'n'
   349  0340  3465               	retlw	101	;'e'
   350  0341  3473               	retlw	115	;'s'
   351  0342  3420               	retlw	32	;' '
   352  0343  3470               	retlw	112	;'p'
   353  0344  3461               	retlw	97	;'a'
   354  0345  3472               	retlw	114	;'r'
   355  0346  3461               	retlw	97	;'a'
   356  0347  3420               	retlw	32	;' '
   357  0348  3463               	retlw	99	;'c'
   358  0349  346F               	retlw	111	;'o'
   359  034A  346E               	retlw	110	;'n'
   360  034B  3474               	retlw	116	;'t'
   361  034C  3472               	retlw	114	;'r'
   362  034D  346F               	retlw	111	;'o'
   363  034E  346C               	retlw	108	;'l'
   364  034F  3420               	retlw	32	;' '
   365  0350  3464               	retlw	100	;'d'
   366  0351  3465               	retlw	101	;'e'
   367  0352  3420               	retlw	32	;' '
   368  0353  3465               	retlw	101	;'e'
   369  0354  3473               	retlw	115	;'s'
   370  0355  3474               	retlw	116	;'t'
   371  0356  3461               	retlw	97	;'a'
   372  0357  3464               	retlw	100	;'d'
   373  0358  346F               	retlw	111	;'o'
   374  0359  340A               	retlw	10
   375  035A  3400               	retlw	0
   376  035B                     STR_6:
   377  035B  3446               	retlw	70	;'F'
   378  035C  3420               	retlw	32	;' '
   379  035D  342D               	retlw	45	;'-'
   380  035E  3420               	retlw	32	;' '
   381  035F  344D               	retlw	77	;'M'
   382  0360  346F               	retlw	111	;'o'
   383  0361  3476               	retlw	118	;'v'
   384  0362  3469               	retlw	105	;'i'
   385  0363  346D               	retlw	109	;'m'
   386  0364  3469               	retlw	105	;'i'
   387  0365  3465               	retlw	101	;'e'
   388  0366  346E               	retlw	110	;'n'
   389  0367  3474               	retlw	116	;'t'
   390  0368  346F               	retlw	111	;'o'
   391  0369  3420               	retlw	32	;' '
   392  036A  346C               	retlw	108	;'l'
   393  036B  3469               	retlw	105	;'i'
   394  036C  3462               	retlw	98	;'b'
   395  036D  3472               	retlw	114	;'r'
   396  036E  3465               	retlw	101	;'e'
   397  036F  3420               	retlw	32	;' '
   398  0370  3464               	retlw	100	;'d'
   399  0371  3465               	retlw	101	;'e'
   400  0372  3420               	retlw	32	;' '
   401  0373  346C               	retlw	108	;'l'
   402  0374  3461               	retlw	97	;'a'
   403  0375  3420               	retlw	32	;' '
   404  0376  3467               	retlw	103	;'g'
   405  0377  3461               	retlw	97	;'a'
   406  0378  3472               	retlw	114	;'r'
   407  0379  3472               	retlw	114	;'r'
   408  037A  3461               	retlw	97	;'a'
   409  037B  340A               	retlw	10
   410  037C  3400               	retlw	0
   411  037D                     STR_3:
   412  037D  340A               	retlw	10
   413  037E  340A               	retlw	10
   414  037F  344D               	retlw	77	;'M'
   415  0380  346F               	retlw	111	;'o'
   416  0381  3476               	retlw	118	;'v'
   417  0382  3469               	retlw	105	;'i'
   418  0383  346D               	retlw	109	;'m'
   419  0384  3469               	retlw	105	;'i'
   420  0385  3465               	retlw	101	;'e'
   421  0386  346E               	retlw	110	;'n'
   422  0387  3474               	retlw	116	;'t'
   423  0388  346F               	retlw	111	;'o'
   424  0389  3420               	retlw	32	;' '
   425  038A  344C               	retlw	76	;'L'
   426  038B  3469               	retlw	105	;'i'
   427  038C  3462               	retlw	98	;'b'
   428  038D  3472               	retlw	114	;'r'
   429  038E  3465               	retlw	101	;'e'
   430  038F  3420               	retlw	32	;' '
   431  0390  3448               	retlw	72	;'H'
   432  0391  3461               	retlw	97	;'a'
   433  0392  3462               	retlw	98	;'b'
   434  0393  3469               	retlw	105	;'i'
   435  0394  346C               	retlw	108	;'l'
   436  0395  3469               	retlw	105	;'i'
   437  0396  3474               	retlw	116	;'t'
   438  0397  3461               	retlw	97	;'a'
   439  0398  3464               	retlw	100	;'d'
   440  0399  346F               	retlw	111	;'o'
   441  039A  340A               	retlw	10
   442  039B  3400               	retlw	0
   443  039C                     STR_1:
   444  039C  340A               	retlw	10
   445  039D  344E               	retlw	78	;'N'
   446  039E  3455               	retlw	85	;'U'
   447  039F  3445               	retlw	69	;'E'
   448  03A0  3456               	retlw	86	;'V'
   449  03A1  344F               	retlw	79	;'O'
   450  03A2  3420               	retlw	32	;' '
   451  03A3  3445               	retlw	69	;'E'
   452  03A4  3473               	retlw	115	;'s'
   453  03A5  3474               	retlw	116	;'t'
   454  03A6  3461               	retlw	97	;'a'
   455  03A7  3464               	retlw	100	;'d'
   456  03A8  346F               	retlw	111	;'o'
   457  03A9  3420               	retlw	32	;' '
   458  03AA  3447               	retlw	71	;'G'
   459  03AB  3475               	retlw	117	;'u'
   460  03AC  3461               	retlw	97	;'a'
   461  03AD  3472               	retlw	114	;'r'
   462  03AE  3464               	retlw	100	;'d'
   463  03AF  3461               	retlw	97	;'a'
   464  03B0  3464               	retlw	100	;'d'
   465  03B1  346F               	retlw	111	;'o'
   466  03B2  3421               	retlw	33	;'!'
   467  03B3  340A               	retlw	10
   468  03B4  3400               	retlw	0
   469  03B5                     STR_2:
   470  03B5  340A               	retlw	10
   471  03B6  3452               	retlw	82	;'R'
   472  03B7  3465               	retlw	101	;'e'
   473  03B8  3467               	retlw	103	;'g'
   474  03B9  3472               	retlw	114	;'r'
   475  03BA  3465               	retlw	101	;'e'
   476  03BB  3473               	retlw	115	;'s'
   477  03BC  3461               	retlw	97	;'a'
   478  03BD  346E               	retlw	110	;'n'
   479  03BE  3464               	retlw	100	;'d'
   480  03BF  346F               	retlw	111	;'o'
   481  03C0  3420               	retlw	32	;' '
   482  03C1  3461               	retlw	97	;'a'
   483  03C2  3420               	retlw	32	;' '
   484  03C3  3465               	retlw	101	;'e'
   485  03C4  3473               	retlw	115	;'s'
   486  03C5  3474               	retlw	116	;'t'
   487  03C6  3461               	retlw	97	;'a'
   488  03C7  3464               	retlw	100	;'d'
   489  03C8  346F               	retlw	111	;'o'
   490  03C9  340A               	retlw	10
   491  03CA  3400               	retlw	0
   492                           
   493                           	psect	cinit
   494  0011                     start_initialization:	
   495                           ; #config settings
   496                           
   497  0011                     __initialization:
   498                           
   499                           ; Clear objects allocated to COMMON
   500  0011  01FA               	clrf	__pbssCOMMON& (0+127)
   501                           
   502                           ; Clear objects allocated to BANK0
   503  0012  1283               	bcf	3,5	;RP0=0, select bank0
   504  0013  1303               	bcf	3,6	;RP1=0, select bank0
   505  0014  01AD               	clrf	__pbssBANK0& (0+127)
   506  0015  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   507  0016  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   508  0017  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   509  0018  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   510  0019  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   511  001A  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   512  001B  01B4               	clrf	(__pbssBANK0+7)& (0+127)
   513  001C                     end_of_initialization:	
   514                           ;End of C runtime variable initialization code
   515                           
   516  001C                     __end_of__initialization:
   517  001C  0183               	clrf	3
   518  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   519                           
   520                           	psect	bssCOMMON
   521  007A                     __pbssCOMMON:
   522  007A                     _servo:
   523  007A                     	ds	1
   524                           
   525                           	psect	bssBANK0
   526  002D                     __pbssBANK0:
   527  002D                     _pot3:
   528  002D                     	ds	2
   529  002F                     _pot2:
   530  002F                     	ds	2
   531  0031                     _pot1:
   532  0031                     	ds	2
   533  0033                     _pot0:
   534  0033                     	ds	2
   535                           
   536                           	psect	cstackCOMMON
   537  0070                     __pcstackCOMMON:
   538  0070                     ?_setup:
   539  0070                     ?_menu:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_UART_write:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_EEPROM_R:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_main:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_delay_pulse:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_isr:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_concat_bits:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     concat_bits@x:	
   561                           ; 2 bytes @ 0x0
   562                           
   563  0070                     delay_pulse@time:	
   564                           ; 2 bytes @ 0x0
   565                           
   566                           
   567                           ; 2 bytes @ 0x0
   568  0070                     	ds	2
   569  0072                     ??_delay_pulse:
   570  0072                     concat_bits@y:	
   571                           ; 1 bytes @ 0x2
   572                           
   573                           
   574                           ; 2 bytes @ 0x2
   575  0072                     	ds	2
   576  0074                     ??_concat_bits:
   577                           
   578                           ; 1 bytes @ 0x4
   579  0074                     	ds	4
   580  0078                     concat_bits@z:
   581                           
   582                           ; 2 bytes @ 0x8
   583  0078                     	ds	2
   584                           
   585                           	psect	cstackBANK0
   586  0020                     __pcstackBANK0:
   587  0020                     ??_isr:
   588                           
   589                           ; 1 bytes @ 0x0
   590  0020                     	ds	6
   591  0026                     ??_setup:
   592  0026                     ?_EEPROM_W:	
   593                           ; 1 bytes @ 0x6
   594                           
   595  0026                     ??_UART_write:	
   596                           ; 1 bytes @ 0x6
   597                           
   598  0026                     ??_EEPROM_R:	
   599                           ; 1 bytes @ 0x6
   600                           
   601  0026                     EEPROM_W@data:	
   602                           ; 1 bytes @ 0x6
   603                           
   604                           
   605                           ; 1 bytes @ 0x6
   606  0026                     	ds	1
   607  0027                     ??_EEPROM_W:
   608  0027                     UART_write@word:	
   609                           ; 1 bytes @ 0x7
   610                           
   611  0027                     EEPROM_W@address:	
   612                           ; 1 bytes @ 0x7
   613                           
   614  0027                     EEPROM_R@address:	
   615                           ; 1 bytes @ 0x7
   616                           
   617                           
   618                           ; 1 bytes @ 0x7
   619  0027                     	ds	1
   620  0028                     ??_menu:
   621  0028                     EEPROM_R@data:	
   622                           ; 1 bytes @ 0x8
   623                           
   624                           
   625                           ; 1 bytes @ 0x8
   626  0028                     	ds	2
   627  002A                     ??_main:
   628                           
   629                           ; 1 bytes @ 0xA
   630  002A                     	ds	3
   631                           
   632                           	psect	maintext
   633  0020                     __pmaintext:	
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   636 ;;
   637 ;; *************** function _main *****************
   638 ;; Defined at:
   639 ;;		line 60 in file "Main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : B00/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          0       3       0       0       0
   656 ;;      Totals:         0       3       0       0       0
   657 ;;Total ram usage:        3 bytes
   658 ;; Hardware stack levels required when called: 4
   659 ;; This function calls:
   660 ;;		_EEPROM_R
   661 ;;		_EEPROM_W
   662 ;;		_UART_write
   663 ;;		_menu
   664 ;;		_setup
   665 ;; This function is called by:
   666 ;;		Startup code after reset
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           
   671                           ;psect for function _main
   672  0020                     _main:
   673  0020                     l1186:	
   674                           ;incstack = 0
   675                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   676                           
   677                           
   678                           ;Main.c: 61:     setup();
   679  0020  120A  118A  23CB  120A  118A  	fcall	_setup
   680  0025                     l1188:
   681                           
   682                           ;Main.c: 62:     menu();
   683  0025  120A  118A  241E  120A  118A  	fcall	_menu
   684  002A                     l1190:
   685                           
   686                           ;Main.c: 66:         GO = 1;
   687  002A  1283               	bcf	3,5	;RP0=0, select bank0
   688  002B  1303               	bcf	3,6	;RP1=0, select bank0
   689  002C  149F               	bsf	31,1	;volatile
   690  002D                     l1192:
   691                           
   692                           ;Main.c: 67:         _delay((unsigned long)((50)*(4000000/4000000.0)));
   693  002D  300F               	movlw	15
   694  002E  1283               	bcf	3,5	;RP0=0, select bank0
   695  002F  1303               	bcf	3,6	;RP1=0, select bank0
   696  0030  00AA               	movwf	??_main
   697  0031                     u537:
   698  0031  0BAA               	decfsz	??_main,f
   699  0032  2831               	goto	u537
   700  0033  2834               	nop2
   701  0034                     l1194:
   702                           
   703                           ;Main.c: 69:         DC1B1 = (uint8_t)pot3 & 2;
   704  0034  1283               	bcf	3,5	;RP0=0, select bank0
   705  0035  1303               	bcf	3,6	;RP1=0, select bank0
   706  0036  1297               	bcf	23,5	;volatile
   707  0037                     l1196:
   708                           
   709                           ;Main.c: 70:         DC1B0 = (uint8_t)pot3 & 1;
   710  0037  182D               	btfsc	_pot3,0
   711  0038  283A               	goto	u331
   712  0039  283E               	goto	u330
   713  003A                     u331:
   714  003A  1283               	bcf	3,5	;RP0=0, select bank0
   715  003B  1303               	bcf	3,6	;RP1=0, select bank0
   716  003C  1617               	bsf	23,4	;volatile
   717  003D  2841               	goto	u344
   718  003E                     u330:
   719  003E  1283               	bcf	3,5	;RP0=0, select bank0
   720  003F  1303               	bcf	3,6	;RP1=0, select bank0
   721  0040  1217               	bcf	23,4	;volatile
   722  0041                     u344:
   723  0041                     l1198:
   724                           
   725                           ;Main.c: 71:         CCPR1L = (uint8_t)(pot3>>2);
   726  0041  082E               	movf	_pot3+1,w
   727  0042  00AB               	movwf	??_main+1
   728  0043  082D               	movf	_pot3,w
   729  0044  00AA               	movwf	??_main
   730  0045  1003               	clrc
   731  0046  0CAB               	rrf	??_main+1,f
   732  0047  0CAA               	rrf	??_main,f
   733  0048  1003               	clrc
   734  0049  0CAB               	rrf	??_main+1,f
   735  004A  0CAA               	rrf	??_main,f
   736  004B  082A               	movf	??_main,w
   737  004C  0095               	movwf	21	;volatile
   738  004D                     l1200:
   739                           
   740                           ;Main.c: 74:         if(RCIF){
   741  004D  1E8C               	btfss	12,5	;volatile
   742  004E  2850               	goto	u351
   743  004F  2851               	goto	u350
   744  0050                     u351:
   745  0050  282A               	goto	l1190
   746  0051                     u350:
   747  0051                     l1202:
   748                           
   749                           ;Main.c: 75:             if(RCREG==115){
   750  0051  3073               	movlw	115
   751  0052  061A               	xorwf	26,w	;volatile
   752  0053  1D03               	btfss	3,2
   753  0054  2856               	goto	u361
   754  0055  2857               	goto	u360
   755  0056                     u361:
   756  0056  28D1               	goto	l1220
   757  0057                     u360:
   758  0057                     l1204:
   759                           
   760                           ;Main.c: 76:                 RA4 = 1;
   761  0057  1605               	bsf	5,4	;volatile
   762  0058                     l1206:
   763                           
   764                           ;Main.c: 77:                 EEPROM_W(0, 40+(uint8_t)(pot0>>3));
   765  0058  0834               	movf	_pot0+1,w
   766  0059  00AB               	movwf	??_main+1
   767  005A  0833               	movf	_pot0,w
   768  005B  00AA               	movwf	??_main
   769  005C  1003               	clrc
   770  005D  0CAB               	rrf	??_main+1,f
   771  005E  0CAA               	rrf	??_main,f
   772  005F  1003               	clrc
   773  0060  0CAB               	rrf	??_main+1,f
   774  0061  0CAA               	rrf	??_main,f
   775  0062  1003               	clrc
   776  0063  0CAB               	rrf	??_main+1,f
   777  0064  0CAA               	rrf	??_main,f
   778  0065  082A               	movf	??_main,w
   779  0066  3E28               	addlw	40
   780  0067  00AC               	movwf	??_main+2
   781  0068  082C               	movf	??_main+2,w
   782  0069  00A6               	movwf	EEPROM_W@data
   783  006A  3000               	movlw	0
   784  006B  120A  118A  246C  120A  118A  	fcall	_EEPROM_W
   785  0070                     l1208:
   786                           
   787                           ;Main.c: 78:                 _delay((unsigned long)((10)*(4000000/4000.0)));
   788  0070  300D               	movlw	13
   789  0071  1283               	bcf	3,5	;RP0=0, select bank0
   790  0072  1303               	bcf	3,6	;RP1=0, select bank0
   791  0073  00AB               	movwf	??_main+1
   792  0074  30FB               	movlw	251
   793  0075  00AA               	movwf	??_main
   794  0076                     u547:
   795  0076  0BAA               	decfsz	??_main,f
   796  0077  2876               	goto	u547
   797  0078  0BAB               	decfsz	??_main+1,f
   798  0079  2876               	goto	u547
   799  007A                     l1210:
   800                           
   801                           ;Main.c: 79:                 EEPROM_W(1, 40+(uint8_t)(pot1>>3));
   802  007A  1283               	bcf	3,5	;RP0=0, select bank0
   803  007B  1303               	bcf	3,6	;RP1=0, select bank0
   804  007C  0832               	movf	_pot1+1,w
   805  007D  00AB               	movwf	??_main+1
   806  007E  0831               	movf	_pot1,w
   807  007F  00AA               	movwf	??_main
   808  0080  1003               	clrc
   809  0081  0CAB               	rrf	??_main+1,f
   810  0082  0CAA               	rrf	??_main,f
   811  0083  1003               	clrc
   812  0084  0CAB               	rrf	??_main+1,f
   813  0085  0CAA               	rrf	??_main,f
   814  0086  1003               	clrc
   815  0087  0CAB               	rrf	??_main+1,f
   816  0088  0CAA               	rrf	??_main,f
   817  0089  082A               	movf	??_main,w
   818  008A  3E28               	addlw	40
   819  008B  00AC               	movwf	??_main+2
   820  008C  082C               	movf	??_main+2,w
   821  008D  00A6               	movwf	EEPROM_W@data
   822  008E  3001               	movlw	1
   823  008F  120A  118A  246C  120A  118A  	fcall	_EEPROM_W
   824                           
   825                           ;Main.c: 80:                 _delay((unsigned long)((10)*(4000000/4000.0)));
   826  0094  300D               	movlw	13
   827  0095  1283               	bcf	3,5	;RP0=0, select bank0
   828  0096  1303               	bcf	3,6	;RP1=0, select bank0
   829  0097  00AB               	movwf	??_main+1
   830  0098  30FB               	movlw	251
   831  0099  00AA               	movwf	??_main
   832  009A                     u557:
   833  009A  0BAA               	decfsz	??_main,f
   834  009B  289A               	goto	u557
   835  009C  0BAB               	decfsz	??_main+1,f
   836  009D  289A               	goto	u557
   837  009E                     l1212:
   838                           
   839                           ;Main.c: 81:                 EEPROM_W(2, 40+(uint8_t)(pot2>>3));
   840  009E  1283               	bcf	3,5	;RP0=0, select bank0
   841  009F  1303               	bcf	3,6	;RP1=0, select bank0
   842  00A0  0830               	movf	_pot2+1,w
   843  00A1  00AB               	movwf	??_main+1
   844  00A2  082F               	movf	_pot2,w
   845  00A3  00AA               	movwf	??_main
   846  00A4  1003               	clrc
   847  00A5  0CAB               	rrf	??_main+1,f
   848  00A6  0CAA               	rrf	??_main,f
   849  00A7  1003               	clrc
   850  00A8  0CAB               	rrf	??_main+1,f
   851  00A9  0CAA               	rrf	??_main,f
   852  00AA  1003               	clrc
   853  00AB  0CAB               	rrf	??_main+1,f
   854  00AC  0CAA               	rrf	??_main,f
   855  00AD  082A               	movf	??_main,w
   856  00AE  3E28               	addlw	40
   857  00AF  00AC               	movwf	??_main+2
   858  00B0  082C               	movf	??_main+2,w
   859  00B1  00A6               	movwf	EEPROM_W@data
   860  00B2  3002               	movlw	2
   861  00B3  120A  118A  246C  120A  118A  	fcall	_EEPROM_W
   862  00B8                     l1214:
   863                           
   864                           ;Main.c: 82:                 UART_write("\nNUEVO Estado Guardado!\n");
   865  00B8  3097               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   866  00B9  120A  118A  2447  120A  118A  	fcall	_UART_write
   867  00BE                     l1216:
   868                           
   869                           ;Main.c: 83:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
   870  00BE  3006               	movlw	6
   871  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   872  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   873  00C1  00AC               	movwf	??_main+2
   874  00C2  3013               	movlw	19
   875  00C3  00AB               	movwf	??_main+1
   876  00C4  30AD               	movlw	173
   877  00C5  00AA               	movwf	??_main
   878  00C6                     u567:
   879  00C6  0BAA               	decfsz	??_main,f
   880  00C7  28C6               	goto	u567
   881  00C8  0BAB               	decfsz	??_main+1,f
   882  00C9  28C6               	goto	u567
   883  00CA  0BAC               	decfsz	??_main+2,f
   884  00CB  28C6               	goto	u567
   885  00CC                     l1218:
   886                           
   887                           ;Main.c: 84:                 menu();
   888  00CC  120A  118A  241E  120A  118A  	fcall	_menu
   889  00D1                     l1220:
   890                           
   891                           ;Main.c: 86:             if(RCREG==32){
   892  00D1  3020               	movlw	32
   893  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   894  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   895  00D4  061A               	xorwf	26,w	;volatile
   896  00D5  1D03               	btfss	3,2
   897  00D6  28D8               	goto	u371
   898  00D7  28D9               	goto	u370
   899  00D8                     u371:
   900  00D8  2944               	goto	l1232
   901  00D9                     u370:
   902  00D9                     l1222:
   903                           
   904                           ;Main.c: 87:                 RA5 = 1;
   905  00D9  1685               	bsf	5,5	;volatile
   906  00DA                     l1224:
   907                           
   908                           ;Main.c: 88:                 pot0 =(uint16_t)(EEPROM_R(0)-40)<<3;
   909  00DA  3000               	movlw	0
   910  00DB  120A  118A  24AC  120A  118A  	fcall	_EEPROM_R
   911  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   912  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   913  00E2  00AA               	movwf	??_main
   914  00E3  01AB               	clrf	??_main+1
   915  00E4  1003               	clrc
   916  00E5  0DAA               	rlf	??_main,f
   917  00E6  0DAB               	rlf	??_main+1,f
   918  00E7  1003               	clrc
   919  00E8  0DAA               	rlf	??_main,f
   920  00E9  0DAB               	rlf	??_main+1,f
   921  00EA  1003               	clrc
   922  00EB  0DAA               	rlf	??_main,f
   923  00EC  0DAB               	rlf	??_main+1,f
   924  00ED  082A               	movf	??_main,w
   925  00EE  3EC0               	addlw	192
   926  00EF  00B3               	movwf	_pot0
   927  00F0  082B               	movf	??_main+1,w
   928  00F1  1803               	skipnc
   929  00F2  3E01               	addlw	1
   930  00F3  3EFE               	addlw	254
   931  00F4  00B4               	movwf	_pot0+1
   932                           
   933                           ;Main.c: 89:                 pot1 =(uint16_t)(EEPROM_R(1)-40)<<3;
   934  00F5  3001               	movlw	1
   935  00F6  120A  118A  24AC  120A  118A  	fcall	_EEPROM_R
   936  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   937  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   938  00FD  00AA               	movwf	??_main
   939  00FE  01AB               	clrf	??_main+1
   940  00FF  1003               	clrc
   941  0100  0DAA               	rlf	??_main,f
   942  0101  0DAB               	rlf	??_main+1,f
   943  0102  1003               	clrc
   944  0103  0DAA               	rlf	??_main,f
   945  0104  0DAB               	rlf	??_main+1,f
   946  0105  1003               	clrc
   947  0106  0DAA               	rlf	??_main,f
   948  0107  0DAB               	rlf	??_main+1,f
   949  0108  082A               	movf	??_main,w
   950  0109  3EC0               	addlw	192
   951  010A  00B1               	movwf	_pot1
   952  010B  082B               	movf	??_main+1,w
   953  010C  1803               	skipnc
   954  010D  3E01               	addlw	1
   955  010E  3EFE               	addlw	254
   956  010F  00B2               	movwf	_pot1+1
   957                           
   958                           ;Main.c: 90:                 pot2 =(uint16_t)(EEPROM_R(2)-40)<<3;
   959  0110  3002               	movlw	2
   960  0111  120A  118A  24AC  120A  118A  	fcall	_EEPROM_R
   961  0116  1283               	bcf	3,5	;RP0=0, select bank0
   962  0117  1303               	bcf	3,6	;RP1=0, select bank0
   963  0118  00AA               	movwf	??_main
   964  0119  01AB               	clrf	??_main+1
   965  011A  1003               	clrc
   966  011B  0DAA               	rlf	??_main,f
   967  011C  0DAB               	rlf	??_main+1,f
   968  011D  1003               	clrc
   969  011E  0DAA               	rlf	??_main,f
   970  011F  0DAB               	rlf	??_main+1,f
   971  0120  1003               	clrc
   972  0121  0DAA               	rlf	??_main,f
   973  0122  0DAB               	rlf	??_main+1,f
   974  0123  082A               	movf	??_main,w
   975  0124  3EC0               	addlw	192
   976  0125  00AF               	movwf	_pot2
   977  0126  082B               	movf	??_main+1,w
   978  0127  1803               	skipnc
   979  0128  3E01               	addlw	1
   980  0129  3EFE               	addlw	254
   981  012A  00B0               	movwf	_pot2+1
   982  012B                     l1226:
   983                           
   984                           ;Main.c: 91:                 UART_write("\nRegresando a estado\n");
   985  012B  30B0               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   986  012C  120A  118A  2447  120A  118A  	fcall	_UART_write
   987  0131                     l1228:
   988                           
   989                           ;Main.c: 92:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
   990  0131  3006               	movlw	6
   991  0132  1283               	bcf	3,5	;RP0=0, select bank0
   992  0133  1303               	bcf	3,6	;RP1=0, select bank0
   993  0134  00AC               	movwf	??_main+2
   994  0135  3013               	movlw	19
   995  0136  00AB               	movwf	??_main+1
   996  0137  30AD               	movlw	173
   997  0138  00AA               	movwf	??_main
   998  0139                     u577:
   999  0139  0BAA               	decfsz	??_main,f
  1000  013A  2939               	goto	u577
  1001  013B  0BAB               	decfsz	??_main+1,f
  1002  013C  2939               	goto	u577
  1003  013D  0BAC               	decfsz	??_main+2,f
  1004  013E  2939               	goto	u577
  1005  013F                     l1230:
  1006                           
  1007                           ;Main.c: 93:                 menu();
  1008  013F  120A  118A  241E  120A  118A  	fcall	_menu
  1009  0144                     l1232:
  1010                           
  1011                           ;Main.c: 95:             if(RCREG==102){
  1012  0144  3066               	movlw	102
  1013  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0147  061A               	xorwf	26,w	;volatile
  1016  0148  1D03               	btfss	3,2
  1017  0149  294B               	goto	u381
  1018  014A  294C               	goto	u380
  1019  014B                     u381:
  1020  014B  282A               	goto	l1190
  1021  014C                     u380:
  1022  014C                     l1234:
  1023                           
  1024                           ;Main.c: 96:                 RA4 = 0;
  1025  014C  1205               	bcf	5,4	;volatile
  1026                           
  1027                           ;Main.c: 97:                 RA5 = 0;
  1028  014D  1285               	bcf	5,5	;volatile
  1029  014E                     l1236:
  1030                           
  1031                           ;Main.c: 98:                 UART_write("\n\nMovimiento Libre Habilitado\n");
  1032  014E  3078               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1033  014F  120A  118A  2447  120A  118A  	fcall	_UART_write
  1034  0154                     l1238:
  1035                           
  1036                           ;Main.c: 99:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
  1037  0154  3006               	movlw	6
  1038  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0157  00AC               	movwf	??_main+2
  1041  0158  3013               	movlw	19
  1042  0159  00AB               	movwf	??_main+1
  1043  015A  30AD               	movlw	173
  1044  015B  00AA               	movwf	??_main
  1045  015C                     u587:
  1046  015C  0BAA               	decfsz	??_main,f
  1047  015D  295C               	goto	u587
  1048  015E  0BAB               	decfsz	??_main+1,f
  1049  015F  295C               	goto	u587
  1050  0160  0BAC               	decfsz	??_main+2,f
  1051  0161  295C               	goto	u587
  1052  0162  2825               	goto	l1188
  1053  0163  120A  118A  280E   	ljmp	start
  1054  0166                     __end_of_main:
  1055                           
  1056                           	psect	text1
  1057  03CB                     __ptext1:	
  1058 ;; *************** function _setup *****************
  1059 ;; Defined at:
  1060 ;;		line 109 in file "Main.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0
  1077 ;;      Totals:         0       0       0       0       0
  1078 ;;Total ram usage:        0 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 2
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _setup
  1090  03CB                     _setup:
  1091  03CB                     l1066:	
  1092                           ;incstack = 0
  1093                           ; Regs used in _setup: [wreg+status,2+status,0]
  1094                           
  1095                           
  1096                           ;Main.c: 111:     ANSEL = 0b00001111;
  1097  03CB  300F               	movlw	15
  1098  03CC  1683               	bsf	3,5	;RP0=1, select bank3
  1099  03CD  1703               	bsf	3,6	;RP1=1, select bank3
  1100  03CE  0088               	movwf	8	;volatile
  1101  03CF                     l1068:
  1102                           
  1103                           ;Main.c: 112:     ANSELH = 0;
  1104  03CF  0189               	clrf	9	;volatile
  1105  03D0                     l1070:
  1106                           
  1107                           ;Main.c: 113:     TRISA = 0b00001111;
  1108  03D0  300F               	movlw	15
  1109  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  1110  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  1111  03D3  0085               	movwf	5	;volatile
  1112                           
  1113                           ;Main.c: 114:     TRISB = 0;
  1114  03D4  0186               	clrf	6	;volatile
  1115  03D5                     l1072:
  1116                           
  1117                           ;Main.c: 115:     TRISC = 128;
  1118  03D5  3080               	movlw	128
  1119  03D6  0087               	movwf	7	;volatile
  1120  03D7                     l1074:
  1121                           
  1122                           ;Main.c: 116:     TRISD = 0;
  1123  03D7  0188               	clrf	8	;volatile
  1124  03D8                     l1076:
  1125                           
  1126                           ;Main.c: 117:     TRISE = 0;
  1127  03D8  0189               	clrf	9	;volatile
  1128  03D9                     l1078:
  1129                           
  1130                           ;Main.c: 120:     TXSTAbits.TXEN = 1;
  1131  03D9  1698               	bsf	24,5	;volatile
  1132  03DA                     l1080:
  1133                           
  1134                           ;Main.c: 121:     TXSTAbits.SYNC = 0;
  1135  03DA  1218               	bcf	24,4	;volatile
  1136  03DB                     l1082:
  1137                           
  1138                           ;Main.c: 122:     RCSTAbits.SPEN = 1;
  1139  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  1140  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  1141  03DD  1798               	bsf	24,7	;volatile
  1142  03DE                     l1084:
  1143                           
  1144                           ;Main.c: 123:     TXSTAbits.BRGH = 1;
  1145  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  1146  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  1147  03E0  1518               	bsf	24,2	;volatile
  1148  03E1                     l1086:
  1149                           
  1150                           ;Main.c: 124:     BRG16 = 0;
  1151  03E1  1683               	bsf	3,5	;RP0=1, select bank3
  1152  03E2  1703               	bsf	3,6	;RP1=1, select bank3
  1153  03E3  1187               	bcf	7,3	;volatile
  1154  03E4                     l1088:
  1155                           
  1156                           ;Main.c: 125:     SPBRGH = 0;
  1157  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  1158  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  1159  03E6  019A               	clrf	26	;volatile
  1160                           
  1161                           ;Main.c: 126:     SPBRG = 25;
  1162  03E7  3019               	movlw	25
  1163  03E8  0099               	movwf	25	;volatile
  1164  03E9                     l1090:
  1165                           
  1166                           ;Main.c: 129:     RCSTAbits.CREN = 1;
  1167  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1168  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  1169  03EB  1618               	bsf	24,4	;volatile
  1170  03EC                     l1092:
  1171                           
  1172                           ;Main.c: 132:     ADCON1bits.ADFM = 0;
  1173  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  1174  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  1175  03EE  139F               	bcf	31,7	;volatile
  1176                           
  1177                           ;Main.c: 133:     ADCON0 = 0b01000001;
  1178  03EF  3041               	movlw	65
  1179  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  1180  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  1181  03F2  009F               	movwf	31	;volatile
  1182                           
  1183                           ;Main.c: 136:     TMR0 = 8;
  1184  03F3  3008               	movlw	8
  1185  03F4  0081               	movwf	1	;volatile
  1186  03F5                     l1094:
  1187                           
  1188                           ;Main.c: 137:     OPTION_REGbits.PS = 0b101;
  1189  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  1190  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  1191  03F7  0801               	movf	1,w	;volatile
  1192  03F8  39F8               	andlw	-8
  1193  03F9  3805               	iorlw	5
  1194  03FA  0081               	movwf	1	;volatile
  1195  03FB                     l1096:
  1196                           
  1197                           ;Main.c: 138:     PSA = 0;
  1198  03FB  1181               	bcf	1,3	;volatile
  1199  03FC                     l1098:
  1200                           
  1201                           ;Main.c: 139:     T0CS = 0;
  1202  03FC  1281               	bcf	1,5	;volatile
  1203  03FD                     l1100:
  1204                           
  1205                           ;Main.c: 140:     TMR0IF = 0;
  1206  03FD  110B               	bcf	11,2	;volatile
  1207  03FE                     l1102:
  1208                           
  1209                           ;Main.c: 144:     TRISCbits.TRISC2 = 1;
  1210  03FE  1507               	bsf	7,2	;volatile
  1211  03FF                     l1104:
  1212                           
  1213                           ;Main.c: 145:     PR2 = 249;
  1214  03FF  30F9               	movlw	249
  1215  0400  0092               	movwf	18	;volatile
  1216  0401                     l1106:
  1217                           
  1218                           ;Main.c: 146:     CCP1M3 = 1;
  1219  0401  1283               	bcf	3,5	;RP0=0, select bank0
  1220  0402  1303               	bcf	3,6	;RP1=0, select bank0
  1221  0403  1597               	bsf	23,3	;volatile
  1222  0404                     l1108:
  1223                           
  1224                           ;Main.c: 147:     CCP1M2 = 1;
  1225  0404  1517               	bsf	23,2	;volatile
  1226  0405                     l1110:
  1227                           
  1228                           ;Main.c: 148:     CCPR1L = 0;
  1229  0405  0195               	clrf	21	;volatile
  1230  0406                     l1112:
  1231                           
  1232                           ;Main.c: 150:     TMR2IF = 0;
  1233  0406  108C               	bcf	12,1	;volatile
  1234  0407                     l1114:
  1235                           
  1236                           ;Main.c: 151:     T2CON = 3;
  1237  0407  3003               	movlw	3
  1238  0408  0092               	movwf	18	;volatile
  1239  0409                     l1116:
  1240                           
  1241                           ;Main.c: 152:     T2CONbits.TMR2ON = 1;
  1242  0409  1512               	bsf	18,2	;volatile
  1243  040A                     l155:	
  1244                           ;Main.c: 154:     }
  1245                           
  1246                           
  1247                           ;Main.c: 153:     while(TMR2IF==0){
  1248  040A  1C8C               	btfss	12,1	;volatile
  1249  040B  2C0D               	goto	u291
  1250  040C  2C0E               	goto	u290
  1251  040D                     u291:
  1252  040D  2C0A               	goto	l155
  1253  040E                     u290:
  1254  040E                     l1118:
  1255                           
  1256                           ;Main.c: 155:     TRISC = 128;
  1257  040E  3080               	movlw	128
  1258  040F  1683               	bsf	3,5	;RP0=1, select bank1
  1259  0410  1303               	bcf	3,6	;RP1=0, select bank1
  1260  0411  0087               	movwf	7	;volatile
  1261  0412                     l1120:
  1262                           
  1263                           ;Main.c: 158:     GIE = 1;
  1264  0412  178B               	bsf	11,7	;volatile
  1265  0413                     l1122:
  1266                           
  1267                           ;Main.c: 159:     PEIE = 1;
  1268  0413  170B               	bsf	11,6	;volatile
  1269  0414                     l1124:
  1270                           
  1271                           ;Main.c: 160:     TMR0IE = 1;
  1272  0414  168B               	bsf	11,5	;volatile
  1273  0415                     l1126:
  1274                           
  1275                           ;Main.c: 161:     ADIE = 1;
  1276  0415  170C               	bsf	12,6	;volatile
  1277  0416                     l1128:
  1278                           
  1279                           ;Main.c: 164:     PORTA = 0;
  1280  0416  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0417  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0418  0185               	clrf	5	;volatile
  1283  0419                     l1130:
  1284                           
  1285                           ;Main.c: 165:     PORTB = 0;
  1286  0419  0186               	clrf	6	;volatile
  1287  041A                     l1132:
  1288                           
  1289                           ;Main.c: 166:     PORTC = 0;
  1290  041A  0187               	clrf	7	;volatile
  1291  041B                     l1134:
  1292                           
  1293                           ;Main.c: 167:     PORTD = 0;
  1294  041B  0188               	clrf	8	;volatile
  1295  041C                     l1136:
  1296                           
  1297                           ;Main.c: 168:     PORTE = 0;
  1298  041C  0189               	clrf	9	;volatile
  1299  041D                     l158:
  1300  041D  0008               	return
  1301  041E                     __end_of_setup:
  1302                           
  1303                           	psect	text2
  1304  041E                     __ptext2:	
  1305 ;; *************** function _menu *****************
  1306 ;; Defined at:
  1307 ;;		line 179 in file "Main.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0
  1323 ;;      Temps:          0       2       0       0       0
  1324 ;;      Totals:         0       2       0       0       0
  1325 ;;Total ram usage:        2 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 3
  1328 ;; This function calls:
  1329 ;;		_UART_write
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           
  1336                           ;psect for function _menu
  1337  041E                     _menu:
  1338  041E                     l1138:	
  1339                           ;incstack = 0
  1340                           ; Regs used in _menu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1341                           
  1342                           
  1343                           ;Main.c: 180:     UART_write("\nInstrucciones para control de estado\n");
  1344  041E  302F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1345  041F  120A  118A  2447  120A  118A  	fcall	_UART_write
  1346  0424                     l1140:
  1347                           
  1348                           ;Main.c: 181:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1349  0424  3041               	movlw	65
  1350  0425  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0426  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0427  00A9               	movwf	??_menu+1
  1353  0428  30ED               	movlw	237
  1354  0429  00A8               	movwf	??_menu
  1355  042A                     u597:
  1356  042A  0BA8               	decfsz	??_menu,f
  1357  042B  2C2A               	goto	u597
  1358  042C  0BA9               	decfsz	??_menu+1,f
  1359  042D  2C2A               	goto	u597
  1360  042E  2C2F               	nop2
  1361  042F                     l1142:
  1362                           
  1363                           ;Main.c: 182:     UART_write("S - Guardar Estado\nSPACE - Regresar a estado\n");
  1364  042F  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1365  0430  120A  118A  2447  120A  118A  	fcall	_UART_write
  1366                           
  1367                           ;Main.c: 183:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1368  0435  3041               	movlw	65
  1369  0436  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0437  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0438  00A9               	movwf	??_menu+1
  1372  0439  30ED               	movlw	237
  1373  043A  00A8               	movwf	??_menu
  1374  043B                     u607:
  1375  043B  0BA8               	decfsz	??_menu,f
  1376  043C  2C3B               	goto	u607
  1377  043D  0BA9               	decfsz	??_menu+1,f
  1378  043E  2C3B               	goto	u607
  1379  043F  2C40               	nop2
  1380  0440                     l1144:
  1381                           
  1382                           ;Main.c: 184:     UART_write("F - Movimiento libre de la garra\n");
  1383  0440  3056               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1384  0441  120A  118A  2447  120A  118A  	fcall	_UART_write
  1385  0446                     l170:
  1386  0446  0008               	return
  1387  0447                     __end_of_menu:
  1388                           
  1389                           	psect	text3
  1390  0447                     __ptext3:	
  1391 ;; *************** function _UART_write *****************
  1392 ;; Defined at:
  1393 ;;		line 171 in file "Main.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  word            1    wreg     PTR unsigned char 
  1396 ;;		 -> STR_6(34), STR_5(46), STR_4(39), STR_3(31), 
  1397 ;;		 -> STR_2(22), STR_1(25), 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  word            1    7[BANK0 ] PTR unsigned char 
  1400 ;;		 -> STR_6(34), STR_5(46), STR_4(39), STR_3(31), 
  1401 ;;		 -> STR_2(22), STR_1(25), 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1411 ;;      Params:         0       0       0       0       0
  1412 ;;      Locals:         0       1       0       0       0
  1413 ;;      Temps:          0       1       0       0       0
  1414 ;;      Totals:         0       2       0       0       0
  1415 ;;Total ram usage:        2 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 2
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;;		_menu
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function _UART_write
  1428  0447                     _UART_write:
  1429                           
  1430                           ;incstack = 0
  1431                           ; Regs used in _UART_write: [wreg-fsr0h+status,2+status,0+pclath]
  1432                           ;UART_write@word stored from wreg
  1433  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0448  1303               	bcf	3,6	;RP1=0, select bank0
  1435  0449  00A7               	movwf	UART_write@word
  1436  044A                     l1058:
  1437                           
  1438                           ;Main.c: 172:     while (*word != 0){
  1439  044A  2C5F               	goto	l1064
  1440  044B                     l1060:
  1441                           
  1442                           ;Main.c: 173:         TXREG = (*word);
  1443  044B  0827               	movf	UART_write@word,w
  1444  044C  0084               	movwf	4
  1445  044D  120A  118A  2300  120A  118A  	fcall	stringdir
  1446  0452  0099               	movwf	25	;volatile
  1447  0453                     l163:	
  1448                           ;Main.c: 174:         while(!TXSTAbits.TRMT);
  1449                           
  1450  0453  1683               	bsf	3,5	;RP0=1, select bank1
  1451  0454  1303               	bcf	3,6	;RP1=0, select bank1
  1452  0455  1C98               	btfss	24,1	;volatile
  1453  0456  2C58               	goto	u271
  1454  0457  2C59               	goto	u270
  1455  0458                     u271:
  1456  0458  2C53               	goto	l163
  1457  0459                     u270:
  1458  0459                     l1062:
  1459                           
  1460                           ;Main.c: 175:         word++;
  1461  0459  3001               	movlw	1
  1462  045A  1283               	bcf	3,5	;RP0=0, select bank0
  1463  045B  1303               	bcf	3,6	;RP1=0, select bank0
  1464  045C  00A6               	movwf	??_UART_write
  1465  045D  0826               	movf	??_UART_write,w
  1466  045E  07A7               	addwf	UART_write@word,f
  1467  045F                     l1064:
  1468                           
  1469                           ;Main.c: 172:     while (*word != 0){
  1470  045F  0827               	movf	UART_write@word,w
  1471  0460  0084               	movwf	4
  1472  0461  120A  118A  2300  120A  118A  	fcall	stringdir
  1473  0466  3A00               	xorlw	0
  1474  0467  1D03               	skipz
  1475  0468  2C6A               	goto	u281
  1476  0469  2C6B               	goto	u280
  1477  046A                     u281:
  1478  046A  2C4B               	goto	l1060
  1479  046B                     u280:
  1480  046B                     l167:
  1481  046B  0008               	return
  1482  046C                     __end_of_UART_write:
  1483                           
  1484                           	psect	text4
  1485  046C                     __ptext4:	
  1486 ;; *************** function _EEPROM_W *****************
  1487 ;; Defined at:
  1488 ;;		line 199 in file "Main.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  address         1    wreg     unsigned char 
  1491 ;;  data            1    6[BANK0 ] unsigned char 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;  address         1    7[BANK0 ] unsigned char 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1503 ;;      Params:         0       1       0       0       0
  1504 ;;      Locals:         0       1       0       0       0
  1505 ;;      Temps:          0       0       0       0       0
  1506 ;;      Totals:         0       2       0       0       0
  1507 ;;Total ram usage:        2 bytes
  1508 ;; Hardware stack levels used: 1
  1509 ;; Hardware stack levels required when called: 2
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           
  1518                           ;psect for function _EEPROM_W
  1519  046C                     _EEPROM_W:
  1520                           
  1521                           ;incstack = 0
  1522                           ; Regs used in _EEPROM_W: [wreg]
  1523                           ;EEPROM_W@address stored from wreg
  1524  046C  1283               	bcf	3,5	;RP0=0, select bank0
  1525  046D  1303               	bcf	3,6	;RP1=0, select bank0
  1526  046E  00A7               	movwf	EEPROM_W@address
  1527  046F                     l1146:
  1528                           
  1529                           ;Main.c: 200:     EEADR = address;
  1530  046F  0827               	movf	EEPROM_W@address,w
  1531  0470  1283               	bcf	3,5	;RP0=0, select bank2
  1532  0471  1703               	bsf	3,6	;RP1=1, select bank2
  1533  0472  008D               	movwf	13	;volatile
  1534                           
  1535                           ;Main.c: 201:     EEDATA = data;
  1536  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0475  0826               	movf	EEPROM_W@data,w
  1539  0476  1283               	bcf	3,5	;RP0=0, select bank2
  1540  0477  1703               	bsf	3,6	;RP1=1, select bank2
  1541  0478  008C               	movwf	12	;volatile
  1542  0479                     l1148:
  1543                           
  1544                           ;Main.c: 202:     EEPGD = 0;
  1545  0479  1683               	bsf	3,5	;RP0=1, select bank3
  1546  047A  1703               	bsf	3,6	;RP1=1, select bank3
  1547  047B  138C               	bcf	12,7	;volsfr
  1548  047C                     l1150:
  1549                           
  1550                           ;Main.c: 203:     WREN = 1;
  1551  047C  150C               	bsf	12,2	;volsfr
  1552  047D                     l1152:
  1553                           
  1554                           ;Main.c: 204:     GIE = 0;
  1555  047D  138B               	bcf	11,7	;volatile
  1556  047E                     l182:	
  1557                           ;Main.c: 207:     }
  1558                           
  1559                           
  1560                           ;Main.c: 205:     while(GIE){
  1561  047E  1B8B               	btfsc	11,7	;volatile
  1562  047F  2C81               	goto	u301
  1563  0480  2C82               	goto	u300
  1564  0481                     u301:
  1565  0481  2C7D               	goto	l1152
  1566  0482                     u300:
  1567  0482                     l1154:
  1568                           
  1569                           ;Main.c: 208:     EECON2 = 0x55;
  1570  0482  3055               	movlw	85
  1571  0483  1683               	bsf	3,5	;RP0=1, select bank3
  1572  0484  1703               	bsf	3,6	;RP1=1, select bank3
  1573  0485  008D               	movwf	13	;volsfr
  1574                           
  1575                           ;Main.c: 209:     EECON2 = 0xAA;
  1576  0486  30AA               	movlw	170
  1577  0487  008D               	movwf	13	;volsfr
  1578  0488                     l1156:
  1579                           
  1580                           ;Main.c: 210:     WR = 1;
  1581  0488  148C               	bsf	12,1	;volsfr
  1582  0489                     l1158:
  1583                           
  1584                           ;Main.c: 211:     GIE = 1;
  1585  0489  178B               	bsf	11,7	;volatile
  1586  048A                     l1160:
  1587                           
  1588                           ;Main.c: 212:     WREN = 0;
  1589  048A  110C               	bcf	12,2	;volsfr
  1590  048B                     l185:
  1591  048B  0008               	return
  1592  048C                     __end_of_EEPROM_W:
  1593                           
  1594                           	psect	text5
  1595  04AC                     __ptext5:	
  1596 ;; *************** function _EEPROM_R *****************
  1597 ;; Defined at:
  1598 ;;		line 214 in file "Main.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  address         1    wreg     unsigned char 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  address         1    7[BANK0 ] unsigned char 
  1603 ;;  data            1    8[BANK0 ] unsigned char 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      unsigned char 
  1606 ;; Registers used:
  1607 ;;		wreg
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1613 ;;      Params:         0       0       0       0       0
  1614 ;;      Locals:         0       2       0       0       0
  1615 ;;      Temps:          0       1       0       0       0
  1616 ;;      Totals:         0       3       0       0       0
  1617 ;;Total ram usage:        3 bytes
  1618 ;; Hardware stack levels used: 1
  1619 ;; Hardware stack levels required when called: 2
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_main
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           
  1628                           ;psect for function _EEPROM_R
  1629  04AC                     _EEPROM_R:
  1630                           
  1631                           ;incstack = 0
  1632                           ; Regs used in _EEPROM_R: [wreg]
  1633                           ;EEPROM_R@address stored from wreg
  1634  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1635  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1636  04AE  00A7               	movwf	EEPROM_R@address
  1637  04AF                     l1162:
  1638                           
  1639                           ;Main.c: 215:     uint8_t data;;Main.c: 216:     EEADR = address;
  1640  04AF  0827               	movf	EEPROM_R@address,w
  1641  04B0  1283               	bcf	3,5	;RP0=0, select bank2
  1642  04B1  1703               	bsf	3,6	;RP1=1, select bank2
  1643  04B2  008D               	movwf	13	;volatile
  1644  04B3                     l1164:
  1645                           
  1646                           ;Main.c: 217:     EEPGD = 0;
  1647  04B3  1683               	bsf	3,5	;RP0=1, select bank3
  1648  04B4  1703               	bsf	3,6	;RP1=1, select bank3
  1649  04B5  138C               	bcf	12,7	;volsfr
  1650  04B6                     l1166:
  1651                           
  1652                           ;Main.c: 218:     RD = 1;
  1653  04B6  140C               	bsf	12,0	;volsfr
  1654                           
  1655                           ;Main.c: 219:     data = EEDATA;
  1656  04B7  1283               	bcf	3,5	;RP0=0, select bank2
  1657  04B8  1703               	bsf	3,6	;RP1=1, select bank2
  1658  04B9  080C               	movf	12,w	;volatile
  1659  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  1660  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  1661  04BC  00A6               	movwf	??_EEPROM_R
  1662  04BD  0826               	movf	??_EEPROM_R,w
  1663  04BE  00A8               	movwf	EEPROM_R@data
  1664                           
  1665                           ;Main.c: 220:     return data;
  1666  04BF  0828               	movf	EEPROM_R@data,w
  1667  04C0                     l188:
  1668  04C0  0008               	return
  1669  04C1                     __end_of_EEPROM_R:
  1670                           
  1671                           	psect	text6
  1672  0166                     __ptext6:	
  1673 ;; *************** function _isr *****************
  1674 ;; Defined at:
  1675 ;;		line 225 in file "Main.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;		None
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, status,2, status,0, pclath, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1689 ;;      Params:         0       0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0
  1691 ;;      Temps:          0       6       0       0       0
  1692 ;;      Totals:         0       6       0       0       0
  1693 ;;Total ram usage:        6 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 1
  1696 ;; This function calls:
  1697 ;;		_concat_bits
  1698 ;;		_delay_pulse
  1699 ;; This function is called by:
  1700 ;;		Interrupt level 1
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           
  1705                           ;psect for function _isr
  1706  0166                     _isr:
  1707  0166                     i1l1242:
  1708                           
  1709                           ;Main.c: 226:     if (TMR0IF){
  1710  0166  1D0B               	btfss	11,2	;volatile
  1711  0167  2969               	goto	u39_21
  1712  0168  296A               	goto	u39_20
  1713  0169                     u39_21:
  1714  0169  29EB               	goto	i1l1282
  1715  016A                     u39_20:
  1716  016A                     i1l1244:
  1717                           
  1718                           ;Main.c: 227:         TMR0 = 8;
  1719  016A  3008               	movlw	8
  1720  016B  0081               	movwf	1	;volatile
  1721  016C                     i1l1246:
  1722                           
  1723                           ;Main.c: 228:         OPTION_REGbits.PS = 0b101;
  1724  016C  1683               	bsf	3,5	;RP0=1, select bank1
  1725  016D  1303               	bcf	3,6	;RP1=0, select bank1
  1726  016E  0801               	movf	1,w	;volatile
  1727  016F  39F8               	andlw	-8
  1728  0170  3805               	iorlw	5
  1729  0171  0081               	movwf	1	;volatile
  1730  0172                     i1l1248:
  1731                           
  1732                           ;Main.c: 229:         PSA = 0;
  1733  0172  1181               	bcf	1,3	;volatile
  1734  0173                     i1l1250:
  1735                           
  1736                           ;Main.c: 230:         if (servo == 0){
  1737  0173  087A               	movf	_servo,w
  1738  0174  1D03               	btfss	3,2
  1739  0175  2977               	goto	u40_21
  1740  0176  2978               	goto	u40_20
  1741  0177                     u40_21:
  1742  0177  299C               	goto	i1l1260
  1743  0178                     u40_20:
  1744  0178                     i1l1252:
  1745                           
  1746                           ;Main.c: 231:             RD0 = 1;
  1747  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1748  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1749  017A  1408               	bsf	8,0	;volatile
  1750  017B                     i1l1254:
  1751                           
  1752                           ;Main.c: 232:             delay_pulse(40+(pot0>>3));
  1753  017B  0834               	movf	_pot0+1,w
  1754  017C  00A1               	movwf	??_isr+1
  1755  017D  0833               	movf	_pot0,w
  1756  017E  00A0               	movwf	??_isr
  1757  017F  1003               	clrc
  1758  0180  0CA1               	rrf	??_isr+1,f
  1759  0181  0CA0               	rrf	??_isr,f
  1760  0182  1003               	clrc
  1761  0183  0CA1               	rrf	??_isr+1,f
  1762  0184  0CA0               	rrf	??_isr,f
  1763  0185  1003               	clrc
  1764  0186  0CA1               	rrf	??_isr+1,f
  1765  0187  0CA0               	rrf	??_isr,f
  1766  0188  0820               	movf	??_isr,w
  1767  0189  3E28               	addlw	40
  1768  018A  00F0               	movwf	delay_pulse@time
  1769  018B  0821               	movf	??_isr+1,w
  1770  018C  1803               	skipnc
  1771  018D  3E01               	addlw	1
  1772  018E  3E00               	addlw	0
  1773  018F  00F1               	movwf	delay_pulse@time+1
  1774  0190  120A  118A  24C1  120A  118A  	fcall	_delay_pulse
  1775  0195                     i1l1256:
  1776                           
  1777                           ;Main.c: 233:             RD0 = 0;
  1778  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1780  0197  1008               	bcf	8,0	;volatile
  1781  0198                     i1l1258:
  1782                           
  1783                           ;Main.c: 234:             servo++;
  1784  0198  3001               	movlw	1
  1785  0199  00A0               	movwf	??_isr
  1786  019A  0820               	movf	??_isr,w
  1787  019B  07FA               	addwf	_servo,f
  1788  019C                     i1l1260:
  1789                           
  1790                           ;Main.c: 236:         if (servo == 1){
  1791  019C  037A               	decf	_servo,w
  1792  019D  1D03               	btfss	3,2
  1793  019E  29A0               	goto	u41_21
  1794  019F  29A1               	goto	u41_20
  1795  01A0                     u41_21:
  1796  01A0  29C4               	goto	i1l1270
  1797  01A1                     u41_20:
  1798  01A1                     i1l1262:
  1799                           
  1800                           ;Main.c: 237:             RD1 = 1;
  1801  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1802  01A2  1488               	bsf	8,1	;volatile
  1803  01A3                     i1l1264:
  1804                           
  1805                           ;Main.c: 238:             delay_pulse(40+(pot1>>3));
  1806  01A3  0832               	movf	_pot1+1,w
  1807  01A4  00A1               	movwf	??_isr+1
  1808  01A5  0831               	movf	_pot1,w
  1809  01A6  00A0               	movwf	??_isr
  1810  01A7  1003               	clrc
  1811  01A8  0CA1               	rrf	??_isr+1,f
  1812  01A9  0CA0               	rrf	??_isr,f
  1813  01AA  1003               	clrc
  1814  01AB  0CA1               	rrf	??_isr+1,f
  1815  01AC  0CA0               	rrf	??_isr,f
  1816  01AD  1003               	clrc
  1817  01AE  0CA1               	rrf	??_isr+1,f
  1818  01AF  0CA0               	rrf	??_isr,f
  1819  01B0  0820               	movf	??_isr,w
  1820  01B1  3E28               	addlw	40
  1821  01B2  00F0               	movwf	delay_pulse@time
  1822  01B3  0821               	movf	??_isr+1,w
  1823  01B4  1803               	skipnc
  1824  01B5  3E01               	addlw	1
  1825  01B6  3E00               	addlw	0
  1826  01B7  00F1               	movwf	delay_pulse@time+1
  1827  01B8  120A  118A  24C1  120A  118A  	fcall	_delay_pulse
  1828  01BD                     i1l1266:
  1829                           
  1830                           ;Main.c: 239:             RD1 = 0;
  1831  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1832  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1833  01BF  1088               	bcf	8,1	;volatile
  1834  01C0                     i1l1268:
  1835                           
  1836                           ;Main.c: 240:             servo++;
  1837  01C0  3001               	movlw	1
  1838  01C1  00A0               	movwf	??_isr
  1839  01C2  0820               	movf	??_isr,w
  1840  01C3  07FA               	addwf	_servo,f
  1841  01C4                     i1l1270:
  1842                           
  1843                           ;Main.c: 242:         if (servo == 2){
  1844  01C4  3002               	movlw	2
  1845  01C5  067A               	xorwf	_servo,w
  1846  01C6  1D03               	btfss	3,2
  1847  01C7  29C9               	goto	u42_21
  1848  01C8  29CA               	goto	u42_20
  1849  01C9                     u42_21:
  1850  01C9  29EA               	goto	i1l1280
  1851  01CA                     u42_20:
  1852  01CA                     i1l1272:
  1853                           
  1854                           ;Main.c: 243:             RD2 = 1;
  1855  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1856  01CB  1508               	bsf	8,2	;volatile
  1857  01CC                     i1l1274:
  1858                           
  1859                           ;Main.c: 244:             delay_pulse(40+(pot2>>3));
  1860  01CC  0830               	movf	_pot2+1,w
  1861  01CD  00A1               	movwf	??_isr+1
  1862  01CE  082F               	movf	_pot2,w
  1863  01CF  00A0               	movwf	??_isr
  1864  01D0  1003               	clrc
  1865  01D1  0CA1               	rrf	??_isr+1,f
  1866  01D2  0CA0               	rrf	??_isr,f
  1867  01D3  1003               	clrc
  1868  01D4  0CA1               	rrf	??_isr+1,f
  1869  01D5  0CA0               	rrf	??_isr,f
  1870  01D6  1003               	clrc
  1871  01D7  0CA1               	rrf	??_isr+1,f
  1872  01D8  0CA0               	rrf	??_isr,f
  1873  01D9  0820               	movf	??_isr,w
  1874  01DA  3E28               	addlw	40
  1875  01DB  00F0               	movwf	delay_pulse@time
  1876  01DC  0821               	movf	??_isr+1,w
  1877  01DD  1803               	skipnc
  1878  01DE  3E01               	addlw	1
  1879  01DF  3E00               	addlw	0
  1880  01E0  00F1               	movwf	delay_pulse@time+1
  1881  01E1  120A  118A  24C1  120A  118A  	fcall	_delay_pulse
  1882  01E6                     i1l1276:
  1883                           
  1884                           ;Main.c: 245:             RD2 = 0;
  1885  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1886  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1887  01E8  1108               	bcf	8,2	;volatile
  1888  01E9                     i1l1278:
  1889                           
  1890                           ;Main.c: 246:             servo = 0;
  1891  01E9  01FA               	clrf	_servo
  1892  01EA                     i1l1280:
  1893                           
  1894                           ;Main.c: 248:         TMR0IF = 0;
  1895  01EA  110B               	bcf	11,2	;volatile
  1896  01EB                     i1l1282:
  1897                           
  1898                           ;Main.c: 251:      if (ADIF==1){
  1899  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1900  01EC  1F0C               	btfss	12,6	;volatile
  1901  01ED  29EF               	goto	u43_21
  1902  01EE  29F0               	goto	u43_20
  1903  01EF                     u43_21:
  1904  01EF  2A92               	goto	i1l206
  1905  01F0                     u43_20:
  1906  01F0                     i1l1284:
  1907                           
  1908                           ;Main.c: 252:          if(!RA5){
  1909  01F0  1A85               	btfsc	5,5	;volatile
  1910  01F1  29F3               	goto	u44_21
  1911  01F2  29F4               	goto	u44_20
  1912  01F3                     u44_21:
  1913  01F3  2A91               	goto	i1l1316
  1914  01F4                     u44_20:
  1915  01F4                     i1l1286:
  1916                           
  1917                           ;Main.c: 253:             if(CHS0==0 && CHS1==0) {
  1918  01F4  191F               	btfsc	31,2	;volatile
  1919  01F5  29F7               	goto	u45_21
  1920  01F6  29F8               	goto	u45_20
  1921  01F7                     u45_21:
  1922  01F7  2A1B               	goto	i1l199
  1923  01F8                     u45_20:
  1924  01F8                     i1l1288:
  1925  01F8  199F               	btfsc	31,3	;volatile
  1926  01F9  29FB               	goto	u46_21
  1927  01FA  29FC               	goto	u46_20
  1928  01FB                     u46_21:
  1929  01FB  2A1B               	goto	i1l199
  1930  01FC                     u46_20:
  1931  01FC                     i1l1290:
  1932                           
  1933                           ;Main.c: 254:                 pot0 = concat_bits(ADRESH, ADRESL);
  1934  01FC  081E               	movf	30,w	;volatile
  1935  01FD  00A0               	movwf	??_isr
  1936  01FE  01A1               	clrf	??_isr+1
  1937  01FF  0820               	movf	??_isr,w
  1938  0200  00F0               	movwf	concat_bits@x
  1939  0201  0821               	movf	??_isr+1,w
  1940  0202  00F1               	movwf	concat_bits@x+1
  1941  0203  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0204  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0205  081E               	movf	30,w	;volatile
  1944  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0208  00A2               	movwf	??_isr+2
  1947  0209  01A3               	clrf	??_isr+3
  1948  020A  0822               	movf	??_isr+2,w
  1949  020B  00F2               	movwf	concat_bits@y
  1950  020C  0823               	movf	??_isr+3,w
  1951  020D  00F3               	movwf	concat_bits@y+1
  1952  020E  120A  118A  248C  120A  118A  	fcall	_concat_bits
  1953  0213  0871               	movf	?_concat_bits+1,w
  1954  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0216  00B4               	movwf	_pot0+1
  1957  0217  0870               	movf	?_concat_bits,w
  1958  0218  00B3               	movwf	_pot0
  1959  0219                     i1l1292:
  1960                           
  1961                           ;Main.c: 255:                 CHS0 = 1;
  1962  0219  151F               	bsf	31,2	;volatile
  1963                           
  1964                           ;Main.c: 257:             }
  1965  021A  2A91               	goto	i1l1316
  1966  021B                     i1l199:	
  1967                           ;Main.c: 258:             else if(CHS0==1 && CHS1==0) {
  1968                           
  1969  021B  1D1F               	btfss	31,2	;volatile
  1970  021C  2A1E               	goto	u47_21
  1971  021D  2A1F               	goto	u47_20
  1972  021E                     u47_21:
  1973  021E  2A43               	goto	i1l201
  1974  021F                     u47_20:
  1975  021F                     i1l1294:
  1976  021F  199F               	btfsc	31,3	;volatile
  1977  0220  2A22               	goto	u48_21
  1978  0221  2A23               	goto	u48_20
  1979  0222                     u48_21:
  1980  0222  2A43               	goto	i1l201
  1981  0223                     u48_20:
  1982  0223                     i1l1296:
  1983                           
  1984                           ;Main.c: 259:                 pot1 = concat_bits(ADRESH, ADRESL);
  1985  0223  081E               	movf	30,w	;volatile
  1986  0224  00A0               	movwf	??_isr
  1987  0225  01A1               	clrf	??_isr+1
  1988  0226  0820               	movf	??_isr,w
  1989  0227  00F0               	movwf	concat_bits@x
  1990  0228  0821               	movf	??_isr+1,w
  1991  0229  00F1               	movwf	concat_bits@x+1
  1992  022A  1683               	bsf	3,5	;RP0=1, select bank1
  1993  022B  1303               	bcf	3,6	;RP1=0, select bank1
  1994  022C  081E               	movf	30,w	;volatile
  1995  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1996  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1997  022F  00A2               	movwf	??_isr+2
  1998  0230  01A3               	clrf	??_isr+3
  1999  0231  0822               	movf	??_isr+2,w
  2000  0232  00F2               	movwf	concat_bits@y
  2001  0233  0823               	movf	??_isr+3,w
  2002  0234  00F3               	movwf	concat_bits@y+1
  2003  0235  120A  118A  248C  120A  118A  	fcall	_concat_bits
  2004  023A  0871               	movf	?_concat_bits+1,w
  2005  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2006  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2007  023D  00B2               	movwf	_pot1+1
  2008  023E  0870               	movf	?_concat_bits,w
  2009  023F  00B1               	movwf	_pot1
  2010  0240                     i1l1298:
  2011                           
  2012                           ;Main.c: 260:                 CHS0 = 0;
  2013  0240  111F               	bcf	31,2	;volatile
  2014  0241                     i1l1300:
  2015                           
  2016                           ;Main.c: 261:                 CHS1 = 1;
  2017  0241  159F               	bsf	31,3	;volatile
  2018                           
  2019                           ;Main.c: 262:             }
  2020  0242  2A91               	goto	i1l1316
  2021  0243                     i1l201:	
  2022                           ;Main.c: 263:             else if(CHS0==0 && CHS1==1) {
  2023                           
  2024  0243  191F               	btfsc	31,2	;volatile
  2025  0244  2A46               	goto	u49_21
  2026  0245  2A47               	goto	u49_20
  2027  0246                     u49_21:
  2028  0246  2A69               	goto	i1l203
  2029  0247                     u49_20:
  2030  0247                     i1l1302:
  2031  0247  1D9F               	btfss	31,3	;volatile
  2032  0248  2A4A               	goto	u50_21
  2033  0249  2A4B               	goto	u50_20
  2034  024A                     u50_21:
  2035  024A  2A69               	goto	i1l203
  2036  024B                     u50_20:
  2037  024B                     i1l1304:
  2038                           
  2039                           ;Main.c: 264:                 pot2 = concat_bits(ADRESH, ADRESL);
  2040  024B  081E               	movf	30,w	;volatile
  2041  024C  00A0               	movwf	??_isr
  2042  024D  01A1               	clrf	??_isr+1
  2043  024E  0820               	movf	??_isr,w
  2044  024F  00F0               	movwf	concat_bits@x
  2045  0250  0821               	movf	??_isr+1,w
  2046  0251  00F1               	movwf	concat_bits@x+1
  2047  0252  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0253  1303               	bcf	3,6	;RP1=0, select bank1
  2049  0254  081E               	movf	30,w	;volatile
  2050  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0257  00A2               	movwf	??_isr+2
  2053  0258  01A3               	clrf	??_isr+3
  2054  0259  0822               	movf	??_isr+2,w
  2055  025A  00F2               	movwf	concat_bits@y
  2056  025B  0823               	movf	??_isr+3,w
  2057  025C  00F3               	movwf	concat_bits@y+1
  2058  025D  120A  118A  248C  120A  118A  	fcall	_concat_bits
  2059  0262  0871               	movf	?_concat_bits+1,w
  2060  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0264  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0265  00B0               	movwf	_pot2+1
  2063  0266  0870               	movf	?_concat_bits,w
  2064  0267  00AF               	movwf	_pot2
  2065  0268  2A19               	goto	i1l1292
  2066  0269                     i1l203:	
  2067                           ;Main.c: 267:             else if(CHS0==1 && CHS1==1) {
  2068                           
  2069  0269  1D1F               	btfss	31,2	;volatile
  2070  026A  2A6C               	goto	u51_21
  2071  026B  2A6D               	goto	u51_20
  2072  026C                     u51_21:
  2073  026C  2A91               	goto	i1l200
  2074  026D                     u51_20:
  2075  026D                     i1l1308:
  2076  026D  1D9F               	btfss	31,3	;volatile
  2077  026E  2A70               	goto	u52_21
  2078  026F  2A71               	goto	u52_20
  2079  0270                     u52_21:
  2080  0270  2A91               	goto	i1l200
  2081  0271                     u52_20:
  2082  0271                     i1l1310:
  2083                           
  2084                           ;Main.c: 268:                 pot3 = concat_bits(ADRESH, ADRESL);
  2085  0271  081E               	movf	30,w	;volatile
  2086  0272  00A0               	movwf	??_isr
  2087  0273  01A1               	clrf	??_isr+1
  2088  0274  0820               	movf	??_isr,w
  2089  0275  00F0               	movwf	concat_bits@x
  2090  0276  0821               	movf	??_isr+1,w
  2091  0277  00F1               	movwf	concat_bits@x+1
  2092  0278  1683               	bsf	3,5	;RP0=1, select bank1
  2093  0279  1303               	bcf	3,6	;RP1=0, select bank1
  2094  027A  081E               	movf	30,w	;volatile
  2095  027B  1283               	bcf	3,5	;RP0=0, select bank0
  2096  027C  1303               	bcf	3,6	;RP1=0, select bank0
  2097  027D  00A2               	movwf	??_isr+2
  2098  027E  01A3               	clrf	??_isr+3
  2099  027F  0822               	movf	??_isr+2,w
  2100  0280  00F2               	movwf	concat_bits@y
  2101  0281  0823               	movf	??_isr+3,w
  2102  0282  00F3               	movwf	concat_bits@y+1
  2103  0283  120A  118A  248C  120A  118A  	fcall	_concat_bits
  2104  0288  0871               	movf	?_concat_bits+1,w
  2105  0289  1283               	bcf	3,5	;RP0=0, select bank0
  2106  028A  1303               	bcf	3,6	;RP1=0, select bank0
  2107  028B  00AE               	movwf	_pot3+1
  2108  028C  0870               	movf	?_concat_bits,w
  2109  028D  00AD               	movwf	_pot3
  2110  028E                     i1l1312:
  2111                           
  2112                           ;Main.c: 269:                 CHS0 = 0;
  2113  028E  111F               	bcf	31,2	;volatile
  2114  028F                     i1l1314:
  2115                           
  2116                           ;Main.c: 270:                 CHS1 = 0;
  2117  028F  119F               	bcf	31,3	;volatile
  2118  0290  2A91               	goto	i1l1316
  2119  0291                     i1l200:
  2120  0291                     i1l1316:
  2121                           
  2122                           ;Main.c: 273:         ADIF = 0;
  2123  0291  130C               	bcf	12,6	;volatile
  2124  0292                     i1l206:
  2125  0292  0825               	movf	??_isr+5,w
  2126  0293  008A               	movwf	10
  2127  0294  0E24               	swapf	??_isr+4,w
  2128  0295  0083               	movwf	3
  2129  0296  0EFE               	swapf	btemp,f
  2130  0297  0E7E               	swapf	btemp,w
  2131  0298  0009               	retfie
  2132  0299                     __end_of_isr:
  2133                           
  2134                           	psect	intentry
  2135  0004                     __pintentry:	
  2136                           ;incstack = 0
  2137                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2138                           
  2139  0004                     interrupt_function:
  2140  007E                     saved_w	set	btemp
  2141  0004  00FE               	movwf	btemp
  2142  0005  0E03               	swapf	3,w
  2143  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2144  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2145  0008  00A4               	movwf	??_isr+4
  2146  0009  080A               	movf	10,w
  2147  000A  00A5               	movwf	??_isr+5
  2148  000B  120A  118A  2966   	ljmp	_isr
  2149                           
  2150                           	psect	text7
  2151  04C1                     __ptext7:	
  2152 ;; *************** function _delay_pulse *****************
  2153 ;; Defined at:
  2154 ;;		line 193 in file "Main.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  time            2    0[COMMON] unsigned int 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2168 ;;      Params:         2       0       0       0       0
  2169 ;;      Locals:         0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0
  2171 ;;      Totals:         2       0       0       0       0
  2172 ;;Total ram usage:        2 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_isr
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           
  2182                           ;psect for function _delay_pulse
  2183  04C1                     _delay_pulse:
  2184  04C1                     i1l1178:	
  2185                           ;incstack = 0
  2186                           ; Regs used in _delay_pulse: [wreg+status,2+status,0]
  2187                           
  2188                           
  2189                           ;Main.c: 194:     while(time>0){
  2190  04C1  2CC9               	goto	i1l1184
  2191  04C2                     i1l1180:
  2192                           
  2193                           ;Main.c: 195:         time--;
  2194  04C2  3001               	movlw	1
  2195  04C3  02F0               	subwf	delay_pulse@time,f
  2196  04C4  3000               	movlw	0
  2197  04C5  1C03               	skipc
  2198  04C6  03F1               	decf	delay_pulse@time+1,f
  2199  04C7  02F1               	subwf	delay_pulse@time+1,f
  2200  04C8                     i1l1182:
  2201                           
  2202                           ;Main.c: 196:         _delay((unsigned long)((1)*(4000000/4000000.0)));
  2203  04C8  0000               	nop
  2204  04C9                     i1l1184:
  2205                           
  2206                           ;Main.c: 194:     while(time>0){
  2207  04C9  0870               	movf	delay_pulse@time,w
  2208  04CA  0471               	iorwf	delay_pulse@time+1,w
  2209  04CB  1D03               	btfss	3,2
  2210  04CC  2CCE               	goto	u32_21
  2211  04CD  2CCF               	goto	u32_20
  2212  04CE                     u32_21:
  2213  04CE  2CC2               	goto	i1l1180
  2214  04CF                     u32_20:
  2215  04CF                     i1l179:
  2216  04CF  0008               	return
  2217  04D0                     __end_of_delay_pulse:
  2218                           
  2219                           	psect	text8
  2220  048C                     __ptext8:	
  2221 ;; *************** function _concat_bits *****************
  2222 ;; Defined at:
  2223 ;;		line 187 in file "Main.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  x               2    0[COMMON] unsigned int 
  2226 ;;  y               2    2[COMMON] unsigned int 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  z               2    8[COMMON] unsigned int 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2    0[COMMON] unsigned int 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         4       0       0       0       0
  2239 ;;      Locals:         2       0       0       0       0
  2240 ;;      Temps:          4       0       0       0       0
  2241 ;;      Totals:        10       0       0       0       0
  2242 ;;Total ram usage:       10 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_isr
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function _concat_bits
  2253  048C                     _concat_bits:
  2254  048C                     i1l1170:	
  2255                           ;incstack = 0
  2256                           ; Regs used in _concat_bits: [wreg+status,2+status,0]
  2257                           
  2258  048C                     i1l1172:
  2259                           
  2260                           ;Main.c: 189:     z = (x<<2)|(y>>6);
  2261  048C  0873               	movf	concat_bits@y+1,w
  2262  048D  00F5               	movwf	??_concat_bits+1
  2263  048E  0872               	movf	concat_bits@y,w
  2264  048F  00F4               	movwf	??_concat_bits
  2265  0490  3006               	movlw	6
  2266  0491                     u31_25:
  2267  0491  1003               	clrc
  2268  0492  0CF5               	rrf	??_concat_bits+1,f
  2269  0493  0CF4               	rrf	??_concat_bits,f
  2270  0494  3EFF               	addlw	-1
  2271  0495  1D03               	skipz
  2272  0496  2C91               	goto	u31_25
  2273  0497  0871               	movf	concat_bits@x+1,w
  2274  0498  00F7               	movwf	??_concat_bits+3
  2275  0499  0870               	movf	concat_bits@x,w
  2276  049A  00F6               	movwf	??_concat_bits+2
  2277  049B  1003               	clrc
  2278  049C  0DF6               	rlf	??_concat_bits+2,f
  2279  049D  0DF7               	rlf	??_concat_bits+3,f
  2280  049E  1003               	clrc
  2281  049F  0DF6               	rlf	??_concat_bits+2,f
  2282  04A0  0DF7               	rlf	??_concat_bits+3,f
  2283  04A1  0874               	movf	??_concat_bits,w
  2284  04A2  0476               	iorwf	??_concat_bits+2,w
  2285  04A3  00F8               	movwf	concat_bits@z
  2286  04A4  0875               	movf	??_concat_bits+1,w
  2287  04A5  0477               	iorwf	??_concat_bits+3,w
  2288  04A6  00F9               	movwf	concat_bits@z+1
  2289  04A7                     i1l1174:
  2290                           
  2291                           ;Main.c: 190:     return z;
  2292  04A7  0879               	movf	concat_bits@z+1,w
  2293  04A8  00F1               	movwf	?_concat_bits+1
  2294  04A9  0878               	movf	concat_bits@z,w
  2295  04AA  00F0               	movwf	?_concat_bits
  2296  04AB                     i1l173:
  2297  04AB  0008               	return
  2298  04AC                     __end_of_concat_bits:
  2299  007E                     btemp	set	126	;btemp
  2300  007E                     wtemp0	set	126
  2301                           
  2302                           	psect	config
  2303                           
  2304                           ;Config register CONFIG1 @ 0x2007
  2305                           ;	Oscillator Selection bits
  2306                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2307                           ;	Watchdog Timer Enable bit
  2308                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2309                           ;	Power-up Timer Enable bit
  2310                           ;	PWRTE = OFF, PWRT disabled
  2311                           ;	RE3/MCLR pin function select bit
  2312                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2313                           ;	Code Protection bit
  2314                           ;	CP = OFF, Program memory code protection is disabled
  2315                           ;	Data Code Protection bit
  2316                           ;	CPD = OFF, Data memory code protection is disabled
  2317                           ;	Brown Out Reset Selection bits
  2318                           ;	BOREN = ON, BOR enabled
  2319                           ;	Internal External Switchover bit
  2320                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2321                           ;	Fail-Safe Clock Monitor Enabled bit
  2322                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2323                           ;	Low Voltage Programming Enable bit
  2324                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  2325                           ;	In-Circuit Debugger Mode bit
  2326                           ;	DEBUG = 0x1, unprogrammed default
  2327  2007                     	org	8199
  2328  2007  3FF4               	dw	16372
  2329                           
  2330                           ;Config register CONFIG2 @ 0x2008
  2331                           ;	Brown-out Reset Selection bit
  2332                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2333                           ;	Flash Program Memory Self Write Enable bits
  2334                           ;	WRT = OFF, Write protection off
  2335  2008                     	org	8200
  2336  2008  3FFF               	dw	16383

Data Sizes:
    Strings     197
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     13      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_write@word	PTR unsigned char  size(1) Largest target is 46
		 -> STR_6(CODE[34]), STR_5(CODE[46]), STR_4(CODE[39]), STR_3(CODE[31]), 
		 -> STR_2(CODE[22]), STR_1(CODE[25]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_concat_bits

Critical Paths under _main in BANK0

    _main->_menu
    _menu->_UART_write

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     803
                                             10 BANK0      3     3      0
                           _EEPROM_R
                           _EEPROM_W
                         _UART_write
                               _menu
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0     243
                                              8 BANK0      2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           2     2      0     243
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_W                                             2     1      1     272
                                              6 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_R                                             3     3      0      45
                                              6 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  6     6      0     927
                                              0 BANK0      6     6      0
                        _concat_bits
                        _delay_pulse
 ---------------------------------------------------------------------------------
 (4) _delay_pulse                                          2     0      2     251
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _concat_bits                                         10     6      4     676
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_R
   _EEPROM_W
   _UART_write
   _menu
     _UART_write
   _setup

 _isr (ROOT)
   _concat_bits
   _delay_pulse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      15       5       26.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      20      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 03 15:28:39 2021

                      pc 0002                       _GO 00F9                       _RD 0C60  
                     _WR 0C61                       fsr 0004                      l170 0446  
                    l163 0453                      l155 040A                      l182 047E  
                    l158 041D                      l167 046B                      l185 048B  
                    l188 04C0                      _GIE 005F                      _RA4 002C  
                    _RA5 002D                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      u300 0482                      u301 0481  
                    u330 003E                      u331 003A                      u270 0459  
                    u350 0051                      _PR2 0092                      u271 0458  
                    u351 0050                      u280 046B                      u360 0057  
                    u344 0041                      u281 046A                      u361 0056  
                    u290 040E                      u370 00D9                      u291 040D  
                    u371 00D8                      u380 014C                      u381 014B  
                    u607 043B                      u537 0031                      u547 0076  
                    u557 009A                      u567 00C6                      _PSA 040B  
                    u577 0139                      u587 015C                      u597 042A  
           concat_bits@x 0070             concat_bits@y 0072             concat_bits@z 0078  
                    _isr 0166                      fsr0 0004                     l1100 03FD  
                   l1110 0405                     l1102 03FE                     l1120 0412  
                   l1112 0406                     l1104 03FF                     l1200 004D  
                   l1130 0419                     l1122 0413                     l1114 0407  
                   l1106 0401                     l1210 007A                     l1202 0051  
                   l1060 044B                     l1140 0424                     l1132 041A  
                   l1124 0414                     l1116 0409                     l1108 0404  
                   l1212 009E                     l1204 0057                     l1220 00D1  
                   l1150 047C                     l1062 0459                     l1142 042F  
                   l1134 041B                     l1126 0415                     l1118 040E  
                   l1070 03D0                     l1230 013F                     l1222 00D9  
                   l1214 00B8                     l1206 0058                     l1160 048A  
                   l1152 047D                     l1064 045F                     l1144 0440  
                   l1136 041C                     l1128 0416                     l1080 03DA  
                   l1072 03D5                     l1224 00DA                     l1232 0144  
                   l1216 00BE                     l1208 0070                     l1162 04AF  
                   l1154 0482                     l1146 046F                     l1058 044A  
                   l1138 041E                     l1090 03E9                     l1082 03DB  
                   l1074 03D7                     l1066 03CB                     l1234 014C  
                   l1226 012B                     l1218 00CC                     l1164 04B3  
                   l1156 0488                     l1148 0479                     l1092 03EC  
                   l1084 03DE                     l1076 03D8                     l1068 03CF  
                   l1236 014E                     l1228 0131                     l1166 04B6  
                   l1158 0489                     l1094 03F5                     l1086 03E1  
                   l1078 03D9                     l1238 0154                     l1190 002A  
                   l1096 03FB                     l1088 03E4                     l1192 002D  
                   l1098 03FC                     l1194 0034                     l1186 0020  
                   l1196 0037                     l1188 0025                     l1198 0041  
                   _ADIE 0466                     _ADIF 0066                     ?_isr 0070  
                   _CHS0 00FA                     _CHS1 00FB                     STR_1 039C  
                   STR_2 03B5                     STR_3 037D                     STR_4 0334  
                   STR_5 0306                     STR_6 035B                     _T0CS 040D  
                   _PEIE 005E                     _RCIF 0065                     _TMR0 0001  
                   _WREN 0C62                     _main 0020                     _menu 041E  
                   _pot0 0033                     _pot1 0031                     _pot2 002F  
                   _pot3 002D                     btemp 007E                     start 000E  
       __end_of_EEPROM_R 04C1         __end_of_EEPROM_W 048C                    ??_isr 0020  
                  _DC1B0 00BC                    _DC1B1 00BD                    ?_main 0070  
                  ?_menu 0070                    _EEADR 010D                    _BRG16 0C3B  
                  _EEPGD 0C67                    _ANSEL 0188                    _T2CON 0012  
                  i1l200 0291                    i1l201 0243                    i1l203 0269  
                  i1l206 0292                    i1l173 04AB                    i1l179 04CF  
                  i1l199 021B                    _RCREG 001A                    u31_25 0491  
                  u32_20 04CF                    u40_20 0178                    u32_21 04CE  
                  u40_21 0177                    u41_20 01A1                    u41_21 01A0  
                  u50_20 024B                    u42_20 01CA                    u50_21 024A  
                  u42_21 01C9                    _SPBRG 0099                    u51_20 026D  
                  u43_20 01F0                    u51_21 026C                    u43_21 01EF  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u52_20 0271  
                  u44_20 01F4                    u52_21 0270                    u44_21 01F3  
                  u45_20 01F8                    u45_21 01F7                    u46_20 01FC  
                  u46_21 01FB                    u47_20 021F                    u39_20 016A  
                  u47_21 021E                    u39_21 0169                    u48_20 0223  
                  u48_21 0222                    u49_20 0247                    u49_21 0246  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _TXREG 0019  
            ?_UART_write 0070                    _servo 007A                    _setup 03CB  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0166             __end_of_menu 0447  
   __size_of_delay_pulse 000F                   ??_main 002A                   ??_menu 0028  
                 _ADCON0 001F                   _CCP1M2 00BA                   _CCP1M3 00BB  
                 _ADRESH 001E                   _ADRESL 009E                   _EEDATA 010C  
                 _CCPR1L 0015                   _EECON2 018D                   ?_setup 0070  
                 _ANSELH 0189                   i1l1300 0241                   i1l1310 0271  
                 i1l1302 0247                   i1l1312 028E                   i1l1304 024B  
                 i1l1170 048C                   i1l1314 028F                   i1l1250 0173  
                 i1l1242 0166                   i1l1172 048C                   i1l1180 04C2  
                 i1l1308 026D                   i1l1316 0291                   i1l1252 0178  
                 i1l1260 019C                   i1l1244 016A                   i1l1174 04A7  
                 i1l1182 04C8                   i1l1262 01A1                   i1l1270 01C4  
                 i1l1254 017B                   i1l1246 016C                   i1l1184 04C9  
                 i1l1272 01CA                   i1l1280 01EA                   i1l1264 01A3  
                 i1l1256 0195                   i1l1248 0172                   i1l1178 04C1  
                 i1l1290 01FC                   i1l1274 01CC                   i1l1266 01BD  
                 i1l1258 0198                   i1l1282 01EB                   i1l1292 0219  
                 i1l1284 01F0                   i1l1276 01E6                   i1l1268 01C0  
                 i1l1294 021F                   i1l1286 01F4                   i1l1278 01E9  
                 i1l1296 0223                   i1l1288 01F8                   i1l1298 0240  
                 _TMR0IE 005D                   _TMR0IF 005A                   _TMR2IF 0061  
                 _SPBRGH 009A     __size_of_concat_bits 0020      __size_of_UART_write 0025  
                 saved_w 007E                ?_EEPROM_R 0070                ?_EEPROM_W 0026  
__end_of__initialization 001C           __pcstackCOMMON 0070            __end_of_setup 041E  
         _OPTION_REGbits 0081               ??_EEPROM_R 0026               ??_EEPROM_W 0027  
                ??_setup 0026               __pbssBANK0 002D          delay_pulse@time 0070  
             __pmaintext 0020               __pintentry 0004             ??_UART_write 0026  
             __stringtab 0300       __end_of_UART_write 046C                  __ptext1 03CB  
                __ptext2 041E                  __ptext3 0447                  __ptext4 046C  
                __ptext5 04AC                  __ptext6 0166                  __ptext7 04C1  
                __ptext8 048C                _T2CONbits 0012             __size_of_isr 0133  
   end_of_initialization 001C            ??_delay_pulse 0072                _RCSTAbits 0018  
              _TRISCbits 0087        __size_of_EEPROM_R 0015        __size_of_EEPROM_W 0020  
          ??_concat_bits 0074                _TXSTAbits 0098      __end_of_delay_pulse 04D0  
    start_initialization 0011              __end_of_isr 0299      __end_of_concat_bits 04AC  
            __pbssCOMMON 007A                ___latbits 0002            __pcstackBANK0 0020  
            _delay_pulse 04C1                __pstrings 0300                 _EEPROM_R 04AC  
               _EEPROM_W 046C           __size_of_setup 0053        interrupt_function 0004  
            _concat_bits 048C             EEPROM_R@data 0028             EEPROM_W@data 0026  
            __stringbase 0305               _ADCON1bits 009F           UART_write@word 0027  
     __end_of__stringtab 0306            __size_of_main 0146            __size_of_menu 0029  
               intlevel1 0000          EEPROM_R@address 0027                stringcode 0300  
           ?_delay_pulse 0070          EEPROM_W@address 0027                 stringdir 0300  
               stringtab 0300               _UART_write 0447             ?_concat_bits 0070  
