

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 02 19:42:40 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  001E                     _ADRESH	set	30
   214  0019                     _TXREG	set	25
   215  0009                     _PORTE	set	9
   216  0008                     _PORTD	set	8
   217  0007                     _PORTC	set	7
   218  0006                     _PORTB	set	6
   219  0005                     _PORTA	set	5
   220  0012                     _T2CONbits	set	18
   221  0012                     _T2CON	set	18
   222  001B                     _CCPR2L	set	27
   223  0015                     _CCPR1L	set	21
   224  0001                     _TMR0	set	1
   225  001F                     _ADCON0	set	31
   226  0018                     _RCSTAbits	set	24
   227  001A                     _RCREG	set	26
   228  00FB                     _CHS1	set	251
   229  00FA                     _CHS0	set	250
   230  0066                     _ADIF	set	102
   231  0042                     _RD2	set	66
   232  0041                     _RD1	set	65
   233  0040                     _RD0	set	64
   234  005D                     _TMR0IE	set	93
   235  005E                     _PEIE	set	94
   236  005F                     _GIE	set	95
   237  0061                     _TMR2IF	set	97
   238  00EA                     _CCP2M2	set	234
   239  00EB                     _CCP2M3	set	235
   240  00BA                     _CCP1M2	set	186
   241  00BB                     _CCP1M3	set	187
   242  005A                     _TMR0IF	set	90
   243  002D                     _RA5	set	45
   244  002C                     _RA4	set	44
   245  0065                     _RCIF	set	101
   246  00F9                     _GO	set	249
   247  009E                     _ADRESL	set	158
   248  0092                     _PR2	set	146
   249  0087                     _TRISCbits	set	135
   250  0081                     _OPTION_REGbits	set	129
   251  009F                     _ADCON1bits	set	159
   252  0099                     _SPBRG	set	153
   253  009A                     _SPBRGH	set	154
   254  0098                     _TXSTAbits	set	152
   255  0089                     _TRISE	set	137
   256  0088                     _TRISD	set	136
   257  0087                     _TRISC	set	135
   258  0086                     _TRISB	set	134
   259  0085                     _TRISA	set	133
   260  0466                     _ADIE	set	1126
   261  040D                     _T0CS	set	1037
   262  040B                     _PSA	set	1035
   263  010C                     _EEDATA	set	268
   264  010D                     _EEADR	set	269
   265  018D                     _EECON2	set	397
   266  0189                     _ANSELH	set	393
   267  0188                     _ANSEL	set	392
   268  0C60                     _RD	set	3168
   269  0C61                     _WR	set	3169
   270  0C62                     _WREN	set	3170
   271  0C67                     _EEPGD	set	3175
   272  0C3B                     _BRG16	set	3131
   273                           
   274                           	psect	strings
   275  0300                     __pstrings:
   276  0300                     stringtab:
   277  0300                     __stringtab:
   278  0300                     stringcode:	
   279                           ;	String table - string pointers are 1 byte each
   280                           
   281  0300                     stringdir:
   282  0300  3003               	movlw	high stringdir
   283  0301  008A               	movwf	10
   284  0302  0804               	movf	4,w
   285  0303  0A84               	incf	4,f
   286  0304  0782               	addwf	2,f
   287  0305                     __stringbase:
   288  0305  3400               	retlw	0
   289  0306                     __end_of__stringtab:
   290  0306                     STR_3:
   291  0306  340D               	retlw	13
   292  0307  340D               	retlw	13
   293  0308  3445               	retlw	69	;'E'
   294  0309  3473               	retlw	115	;'s'
   295  030A  3474               	retlw	116	;'t'
   296  030B  3461               	retlw	97	;'a'
   297  030C  3464               	retlw	100	;'d'
   298  030D  346F               	retlw	111	;'o'
   299  030E  3420               	retlw	32	;' '
   300  030F  3445               	retlw	69	;'E'
   301  0310  346C               	retlw	108	;'l'
   302  0311  3469               	retlw	105	;'i'
   303  0312  346D               	retlw	109	;'m'
   304  0313  3469               	retlw	105	;'i'
   305  0314  346E               	retlw	110	;'n'
   306  0315  3461               	retlw	97	;'a'
   307  0316  3464               	retlw	100	;'d'
   308  0317  346F               	retlw	111	;'o'
   309  0318  340D               	retlw	13
   310  0319  344E               	retlw	78	;'N'
   311  031A  346F               	retlw	111	;'o'
   312  031B  3420               	retlw	32	;' '
   313  031C  3468               	retlw	104	;'h'
   314  031D  3461               	retlw	97	;'a'
   315  031E  3479               	retlw	121	;'y'
   316  031F  3420               	retlw	32	;' '
   317  0320  346E               	retlw	110	;'n'
   318  0321  3469               	retlw	105	;'i'
   319  0322  346E               	retlw	110	;'n'
   320  0323  3467               	retlw	103	;'g'
   321  0324  3475               	retlw	117	;'u'
   322  0325  346E               	retlw	110	;'n'
   323  0326  3420               	retlw	32	;' '
   324  0327  3465               	retlw	101	;'e'
   325  0328  3473               	retlw	115	;'s'
   326  0329  3474               	retlw	116	;'t'
   327  032A  3461               	retlw	97	;'a'
   328  032B  3464               	retlw	100	;'d'
   329  032C  346F               	retlw	111	;'o'
   330  032D  3420               	retlw	32	;' '
   331  032E  3467               	retlw	103	;'g'
   332  032F  3475               	retlw	117	;'u'
   333  0330  3461               	retlw	97	;'a'
   334  0331  3472               	retlw	114	;'r'
   335  0332  3464               	retlw	100	;'d'
   336  0333  3461               	retlw	97	;'a'
   337  0334  3464               	retlw	100	;'d'
   338  0335  346F               	retlw	111	;'o'
   339  0336  340D               	retlw	13
   340  0337  3400               	retlw	0
   341  0338                     STR_5:
   342  0338  3453               	retlw	83	;'S'
   343  0339  3420               	retlw	32	;' '
   344  033A  342D               	retlw	45	;'-'
   345  033B  3420               	retlw	32	;' '
   346  033C  3447               	retlw	71	;'G'
   347  033D  3475               	retlw	117	;'u'
   348  033E  3461               	retlw	97	;'a'
   349  033F  3472               	retlw	114	;'r'
   350  0340  3464               	retlw	100	;'d'
   351  0341  3461               	retlw	97	;'a'
   352  0342  3472               	retlw	114	;'r'
   353  0343  3420               	retlw	32	;' '
   354  0344  3445               	retlw	69	;'E'
   355  0345  3473               	retlw	115	;'s'
   356  0346  3474               	retlw	116	;'t'
   357  0347  3461               	retlw	97	;'a'
   358  0348  3464               	retlw	100	;'d'
   359  0349  346F               	retlw	111	;'o'
   360  034A  340D               	retlw	13
   361  034B  3453               	retlw	83	;'S'
   362  034C  3450               	retlw	80	;'P'
   363  034D  3441               	retlw	65	;'A'
   364  034E  3443               	retlw	67	;'C'
   365  034F  3445               	retlw	69	;'E'
   366  0350  3420               	retlw	32	;' '
   367  0351  342D               	retlw	45	;'-'
   368  0352  3420               	retlw	32	;' '
   369  0353  3452               	retlw	82	;'R'
   370  0354  3465               	retlw	101	;'e'
   371  0355  3467               	retlw	103	;'g'
   372  0356  3472               	retlw	114	;'r'
   373  0357  3465               	retlw	101	;'e'
   374  0358  3473               	retlw	115	;'s'
   375  0359  3461               	retlw	97	;'a'
   376  035A  3472               	retlw	114	;'r'
   377  035B  3420               	retlw	32	;' '
   378  035C  3461               	retlw	97	;'a'
   379  035D  3420               	retlw	32	;' '
   380  035E  3465               	retlw	101	;'e'
   381  035F  3473               	retlw	115	;'s'
   382  0360  3474               	retlw	116	;'t'
   383  0361  3461               	retlw	97	;'a'
   384  0362  3464               	retlw	100	;'d'
   385  0363  346F               	retlw	111	;'o'
   386  0364  340D               	retlw	13
   387  0365  3400               	retlw	0
   388  0366                     STR_4:
   389  0366  340D               	retlw	13
   390  0367  3449               	retlw	73	;'I'
   391  0368  346E               	retlw	110	;'n'
   392  0369  3473               	retlw	115	;'s'
   393  036A  3474               	retlw	116	;'t'
   394  036B  3472               	retlw	114	;'r'
   395  036C  3475               	retlw	117	;'u'
   396  036D  3463               	retlw	99	;'c'
   397  036E  3463               	retlw	99	;'c'
   398  036F  3469               	retlw	105	;'i'
   399  0370  346F               	retlw	111	;'o'
   400  0371  346E               	retlw	110	;'n'
   401  0372  3465               	retlw	101	;'e'
   402  0373  3473               	retlw	115	;'s'
   403  0374  3420               	retlw	32	;' '
   404  0375  3470               	retlw	112	;'p'
   405  0376  3461               	retlw	97	;'a'
   406  0377  3472               	retlw	114	;'r'
   407  0378  3461               	retlw	97	;'a'
   408  0379  3420               	retlw	32	;' '
   409  037A  3463               	retlw	99	;'c'
   410  037B  346F               	retlw	111	;'o'
   411  037C  346E               	retlw	110	;'n'
   412  037D  3474               	retlw	116	;'t'
   413  037E  3472               	retlw	114	;'r'
   414  037F  346F               	retlw	111	;'o'
   415  0380  346C               	retlw	108	;'l'
   416  0381  3420               	retlw	32	;' '
   417  0382  3464               	retlw	100	;'d'
   418  0383  3465               	retlw	101	;'e'
   419  0384  3420               	retlw	32	;' '
   420  0385  3465               	retlw	101	;'e'
   421  0386  3473               	retlw	115	;'s'
   422  0387  3474               	retlw	116	;'t'
   423  0388  3461               	retlw	97	;'a'
   424  0389  3464               	retlw	100	;'d'
   425  038A  346F               	retlw	111	;'o'
   426  038B  340D               	retlw	13
   427  038C  3400               	retlw	0
   428  038D                     STR_6:
   429  038D  3444               	retlw	68	;'D'
   430  038E  3445               	retlw	69	;'E'
   431  038F  344C               	retlw	76	;'L'
   432  0390  3420               	retlw	32	;' '
   433  0391  342D               	retlw	45	;'-'
   434  0392  3420               	retlw	32	;' '
   435  0393  3445               	retlw	69	;'E'
   436  0394  346C               	retlw	108	;'l'
   437  0395  346D               	retlw	109	;'m'
   438  0396  3469               	retlw	105	;'i'
   439  0397  346E               	retlw	110	;'n'
   440  0398  3461               	retlw	97	;'a'
   441  0399  3472               	retlw	114	;'r'
   442  039A  3420               	retlw	32	;' '
   443  039B  3465               	retlw	101	;'e'
   444  039C  3473               	retlw	115	;'s'
   445  039D  3474               	retlw	116	;'t'
   446  039E  3461               	retlw	97	;'a'
   447  039F  3464               	retlw	100	;'d'
   448  03A0  346F               	retlw	111	;'o'
   449  03A1  3420               	retlw	32	;' '
   450  03A2  3467               	retlw	103	;'g'
   451  03A3  3475               	retlw	117	;'u'
   452  03A4  3461               	retlw	97	;'a'
   453  03A5  3472               	retlw	114	;'r'
   454  03A6  3464               	retlw	100	;'d'
   455  03A7  3461               	retlw	97	;'a'
   456  03A8  3464               	retlw	100	;'d'
   457  03A9  346F               	retlw	111	;'o'
   458  03AA  340D               	retlw	13
   459  03AB  3400               	retlw	0
   460  03AC                     STR_1:
   461  03AC  340D               	retlw	13
   462  03AD  344E               	retlw	78	;'N'
   463  03AE  3455               	retlw	85	;'U'
   464  03AF  3445               	retlw	69	;'E'
   465  03B0  3456               	retlw	86	;'V'
   466  03B1  344F               	retlw	79	;'O'
   467  03B2  3420               	retlw	32	;' '
   468  03B3  3445               	retlw	69	;'E'
   469  03B4  3473               	retlw	115	;'s'
   470  03B5  3474               	retlw	116	;'t'
   471  03B6  3461               	retlw	97	;'a'
   472  03B7  3464               	retlw	100	;'d'
   473  03B8  346F               	retlw	111	;'o'
   474  03B9  3420               	retlw	32	;' '
   475  03BA  3447               	retlw	71	;'G'
   476  03BB  3475               	retlw	117	;'u'
   477  03BC  3461               	retlw	97	;'a'
   478  03BD  3472               	retlw	114	;'r'
   479  03BE  3464               	retlw	100	;'d'
   480  03BF  3461               	retlw	97	;'a'
   481  03C0  3464               	retlw	100	;'d'
   482  03C1  346F               	retlw	111	;'o'
   483  03C2  3421               	retlw	33	;'!'
   484  03C3  340D               	retlw	13
   485  03C4  3400               	retlw	0
   486  03C5                     STR_2:
   487  03C5  340D               	retlw	13
   488  03C6  3452               	retlw	82	;'R'
   489  03C7  3465               	retlw	101	;'e'
   490  03C8  3467               	retlw	103	;'g'
   491  03C9  3472               	retlw	114	;'r'
   492  03CA  3465               	retlw	101	;'e'
   493  03CB  3473               	retlw	115	;'s'
   494  03CC  3461               	retlw	97	;'a'
   495  03CD  346E               	retlw	110	;'n'
   496  03CE  3464               	retlw	100	;'d'
   497  03CF  346F               	retlw	111	;'o'
   498  03D0  3420               	retlw	32	;' '
   499  03D1  3461               	retlw	97	;'a'
   500  03D2  3420               	retlw	32	;' '
   501  03D3  3465               	retlw	101	;'e'
   502  03D4  3473               	retlw	115	;'s'
   503  03D5  3474               	retlw	116	;'t'
   504  03D6  3461               	retlw	97	;'a'
   505  03D7  3464               	retlw	100	;'d'
   506  03D8  346F               	retlw	111	;'o'
   507  03D9  340D               	retlw	13
   508  03DA  3400               	retlw	0
   509                           
   510                           	psect	cinit
   511  0011                     start_initialization:	
   512                           ; #config settings
   513                           
   514  0011                     __initialization:
   515                           
   516                           ; Clear objects allocated to COMMON
   517  0011  01FA               	clrf	__pbssCOMMON& (0+127)
   518  0012  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   519  0013  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   520                           
   521                           ; Clear objects allocated to BANK0
   522  0014  1283               	bcf	3,5	;RP0=0, select bank0
   523  0015  1303               	bcf	3,6	;RP1=0, select bank0
   524  0016  01AD               	clrf	__pbssBANK0& (0+127)
   525  0017  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   526  0018  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   527  0019  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   528  001A  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   529  001B  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   530  001C  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   531  001D  01B4               	clrf	(__pbssBANK0+7)& (0+127)
   532  001E  01B5               	clrf	(__pbssBANK0+8)& (0+127)
   533  001F  01B6               	clrf	(__pbssBANK0+9)& (0+127)
   534  0020                     end_of_initialization:	
   535                           ;End of C runtime variable initialization code
   536                           
   537  0020                     __end_of__initialization:
   538  0020  0183               	clrf	3
   539  0021  120A  118A  2957   	ljmp	_main	;jump to C main() function
   540                           
   541                           	psect	bssCOMMON
   542  007A                     __pbssCOMMON:
   543  007A                     _pot3:
   544  007A                     	ds	2
   545  007C                     _servo:
   546  007C                     	ds	1
   547                           
   548                           	psect	bssBANK0
   549  002D                     __pbssBANK0:
   550  002D                     _pulse_width3:
   551  002D                     	ds	2
   552  002F                     _pulse_width2:
   553  002F                     	ds	2
   554  0031                     _pot2:
   555  0031                     	ds	2
   556  0033                     _pot1:
   557  0033                     	ds	2
   558  0035                     _pot0:
   559  0035                     	ds	2
   560                           
   561                           	psect	cstackCOMMON
   562  0070                     __pcstackCOMMON:
   563  0070                     ?_setup:
   564  0070                     ?_menu:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_UART_write:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_EEPROM_R:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_main:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_delay_pulse:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_isr:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_concat_bits:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     concat_bits@x:	
   586                           ; 2 bytes @ 0x0
   587                           
   588  0070                     delay_pulse@time:	
   589                           ; 2 bytes @ 0x0
   590                           
   591                           
   592                           ; 2 bytes @ 0x0
   593  0070                     	ds	2
   594  0072                     ??_delay_pulse:
   595  0072                     concat_bits@y:	
   596                           ; 1 bytes @ 0x2
   597                           
   598                           
   599                           ; 2 bytes @ 0x2
   600  0072                     	ds	2
   601  0074                     ??_concat_bits:
   602                           
   603                           ; 1 bytes @ 0x4
   604  0074                     	ds	4
   605  0078                     concat_bits@z:
   606                           
   607                           ; 2 bytes @ 0x8
   608  0078                     	ds	2
   609                           
   610                           	psect	cstackBANK0
   611  0020                     __pcstackBANK0:
   612  0020                     ??_isr:
   613                           
   614                           ; 1 bytes @ 0x0
   615  0020                     	ds	6
   616  0026                     ??_setup:
   617  0026                     ?_EEPROM_W:	
   618                           ; 1 bytes @ 0x6
   619                           
   620  0026                     ??_UART_write:	
   621                           ; 1 bytes @ 0x6
   622                           
   623  0026                     ??_EEPROM_R:	
   624                           ; 1 bytes @ 0x6
   625                           
   626  0026                     EEPROM_W@data:	
   627                           ; 1 bytes @ 0x6
   628                           
   629                           
   630                           ; 1 bytes @ 0x6
   631  0026                     	ds	1
   632  0027                     ??_EEPROM_W:
   633  0027                     UART_write@word:	
   634                           ; 1 bytes @ 0x7
   635                           
   636  0027                     EEPROM_W@address:	
   637                           ; 1 bytes @ 0x7
   638                           
   639  0027                     EEPROM_R@address:	
   640                           ; 1 bytes @ 0x7
   641                           
   642                           
   643                           ; 1 bytes @ 0x7
   644  0027                     	ds	1
   645  0028                     ??_menu:
   646  0028                     EEPROM_R@data:	
   647                           ; 1 bytes @ 0x8
   648                           
   649                           
   650                           ; 1 bytes @ 0x8
   651  0028                     	ds	2
   652  002A                     ??_main:
   653                           
   654                           ; 1 bytes @ 0xA
   655  002A                     	ds	3
   656                           
   657                           	psect	maintext
   658  0157                     __pmaintext:	
   659 ;;
   660 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   661 ;;
   662 ;; *************** function _main *****************
   663 ;; Defined at:
   664 ;;		line 62 in file "Main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : B00/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          0       3       0       0       0
   681 ;;      Totals:         0       3       0       0       0
   682 ;;Total ram usage:        3 bytes
   683 ;; Hardware stack levels required when called: 4
   684 ;; This function calls:
   685 ;;		_EEPROM_R
   686 ;;		_EEPROM_W
   687 ;;		_UART_write
   688 ;;		_menu
   689 ;;		_setup
   690 ;; This function is called by:
   691 ;;		Startup code after reset
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _main
   697  0157                     _main:
   698  0157                     l1200:	
   699                           ;incstack = 0
   700                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   701                           
   702                           
   703                           ;Main.c: 63:     setup();
   704  0157  120A  118A  23DB  120A  118A  	fcall	_setup
   705  015C                     l1202:
   706                           
   707                           ;Main.c: 64:     menu();
   708  015C  120A  118A  2434  120A  118A  	fcall	_menu
   709  0161                     l1204:
   710                           
   711                           ;Main.c: 68:         GO = 1;
   712  0161  1283               	bcf	3,5	;RP0=0, select bank0
   713  0162  1303               	bcf	3,6	;RP1=0, select bank0
   714  0163  149F               	bsf	31,1	;volatile
   715  0164                     l1206:
   716                           
   717                           ;Main.c: 69:         _delay((unsigned long)((50)*(4000000/4000000.0)));
   718  0164  300F               	movlw	15
   719  0165  1283               	bcf	3,5	;RP0=0, select bank0
   720  0166  1303               	bcf	3,6	;RP1=0, select bank0
   721  0167  00AA               	movwf	??_main
   722  0168                     u497:
   723  0168  0BAA               	decfsz	??_main,f
   724  0169  2968               	goto	u497
   725  016A  296B               	nop2
   726  016B                     l1208:
   727                           
   728                           ;Main.c: 71:         if(RCIF){
   729  016B  1283               	bcf	3,5	;RP0=0, select bank0
   730  016C  1303               	bcf	3,6	;RP1=0, select bank0
   731  016D  1E8C               	btfss	12,5	;volatile
   732  016E  2970               	goto	u311
   733  016F  2971               	goto	u310
   734  0170                     u311:
   735  0170  2961               	goto	l1204
   736  0171                     u310:
   737  0171                     l1210:
   738                           
   739                           ;Main.c: 72:             if(RCREG==115){
   740  0171  3073               	movlw	115
   741  0172  061A               	xorwf	26,w	;volatile
   742  0173  1D03               	btfss	3,2
   743  0174  2976               	goto	u321
   744  0175  2977               	goto	u320
   745  0176                     u321:
   746  0176  29DD               	goto	l1222
   747  0177                     u320:
   748  0177                     l1212:
   749                           
   750                           ;Main.c: 73:                 RA4 = 1;
   751  0177  1605               	bsf	5,4	;volatile
   752  0178                     l1214:
   753                           
   754                           ;Main.c: 74:                 EEPROM_W(0, 40+(uint8_t)(pot0>>3));
   755  0178  0836               	movf	_pot0+1,w
   756  0179  00AB               	movwf	??_main+1
   757  017A  0835               	movf	_pot0,w
   758  017B  00AA               	movwf	??_main
   759  017C  1003               	clrc
   760  017D  0CAB               	rrf	??_main+1,f
   761  017E  0CAA               	rrf	??_main,f
   762  017F  1003               	clrc
   763  0180  0CAB               	rrf	??_main+1,f
   764  0181  0CAA               	rrf	??_main,f
   765  0182  1003               	clrc
   766  0183  0CAB               	rrf	??_main+1,f
   767  0184  0CAA               	rrf	??_main,f
   768  0185  082A               	movf	??_main,w
   769  0186  3E28               	addlw	40
   770  0187  00AC               	movwf	??_main+2
   771  0188  082C               	movf	??_main+2,w
   772  0189  00A6               	movwf	EEPROM_W@data
   773  018A  3000               	movlw	0
   774  018B  120A  118A  2482  120A  118A  	fcall	_EEPROM_W
   775                           
   776                           ;Main.c: 75:                 EEPROM_W(1, 40+(uint8_t)(pot1>>3));
   777  0190  1283               	bcf	3,5	;RP0=0, select bank0
   778  0191  1303               	bcf	3,6	;RP1=0, select bank0
   779  0192  0834               	movf	_pot1+1,w
   780  0193  00AB               	movwf	??_main+1
   781  0194  0833               	movf	_pot1,w
   782  0195  00AA               	movwf	??_main
   783  0196  1003               	clrc
   784  0197  0CAB               	rrf	??_main+1,f
   785  0198  0CAA               	rrf	??_main,f
   786  0199  1003               	clrc
   787  019A  0CAB               	rrf	??_main+1,f
   788  019B  0CAA               	rrf	??_main,f
   789  019C  1003               	clrc
   790  019D  0CAB               	rrf	??_main+1,f
   791  019E  0CAA               	rrf	??_main,f
   792  019F  082A               	movf	??_main,w
   793  01A0  3E28               	addlw	40
   794  01A1  00AC               	movwf	??_main+2
   795  01A2  082C               	movf	??_main+2,w
   796  01A3  00A6               	movwf	EEPROM_W@data
   797  01A4  3001               	movlw	1
   798  01A5  120A  118A  2482  120A  118A  	fcall	_EEPROM_W
   799                           
   800                           ;Main.c: 76:                 EEPROM_W(2, 40+(uint8_t)(pot2>>3));
   801  01AA  1283               	bcf	3,5	;RP0=0, select bank0
   802  01AB  1303               	bcf	3,6	;RP1=0, select bank0
   803  01AC  0832               	movf	_pot2+1,w
   804  01AD  00AB               	movwf	??_main+1
   805  01AE  0831               	movf	_pot2,w
   806  01AF  00AA               	movwf	??_main
   807  01B0  1003               	clrc
   808  01B1  0CAB               	rrf	??_main+1,f
   809  01B2  0CAA               	rrf	??_main,f
   810  01B3  1003               	clrc
   811  01B4  0CAB               	rrf	??_main+1,f
   812  01B5  0CAA               	rrf	??_main,f
   813  01B6  1003               	clrc
   814  01B7  0CAB               	rrf	??_main+1,f
   815  01B8  0CAA               	rrf	??_main,f
   816  01B9  082A               	movf	??_main,w
   817  01BA  3E28               	addlw	40
   818  01BB  00AC               	movwf	??_main+2
   819  01BC  082C               	movf	??_main+2,w
   820  01BD  00A6               	movwf	EEPROM_W@data
   821  01BE  3002               	movlw	2
   822  01BF  120A  118A  2482  120A  118A  	fcall	_EEPROM_W
   823  01C4                     l1216:
   824                           
   825                           ;Main.c: 77:                 UART_write("\rNUEVO Estado Guardado!\r");
   826  01C4  30A7               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   827  01C5  120A  118A  245D  120A  118A  	fcall	_UART_write
   828  01CA                     l1218:
   829                           
   830                           ;Main.c: 78:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
   831  01CA  3006               	movlw	6
   832  01CB  1283               	bcf	3,5	;RP0=0, select bank0
   833  01CC  1303               	bcf	3,6	;RP1=0, select bank0
   834  01CD  00AC               	movwf	??_main+2
   835  01CE  3013               	movlw	19
   836  01CF  00AB               	movwf	??_main+1
   837  01D0  30AD               	movlw	173
   838  01D1  00AA               	movwf	??_main
   839  01D2                     u507:
   840  01D2  0BAA               	decfsz	??_main,f
   841  01D3  29D2               	goto	u507
   842  01D4  0BAB               	decfsz	??_main+1,f
   843  01D5  29D2               	goto	u507
   844  01D6  0BAC               	decfsz	??_main+2,f
   845  01D7  29D2               	goto	u507
   846  01D8                     l1220:
   847                           
   848                           ;Main.c: 79:                 menu();
   849  01D8  120A  118A  2434  120A  118A  	fcall	_menu
   850  01DD                     l1222:
   851                           
   852                           ;Main.c: 81:             if(RCREG==32){
   853  01DD  3020               	movlw	32
   854  01DE  1283               	bcf	3,5	;RP0=0, select bank0
   855  01DF  1303               	bcf	3,6	;RP1=0, select bank0
   856  01E0  061A               	xorwf	26,w	;volatile
   857  01E1  1D03               	btfss	3,2
   858  01E2  29E4               	goto	u331
   859  01E3  29E5               	goto	u330
   860  01E4                     u331:
   861  01E4  2A50               	goto	l1234
   862  01E5                     u330:
   863  01E5                     l1224:
   864                           
   865                           ;Main.c: 82:                 RA5 = 1;
   866  01E5  1685               	bsf	5,5	;volatile
   867  01E6                     l1226:
   868                           
   869                           ;Main.c: 83:                 pot0 =(uint16_t)(EEPROM_R(0)-40)<<3;
   870  01E6  3000               	movlw	0
   871  01E7  120A  118A  24C3  120A  118A  	fcall	_EEPROM_R
   872  01EC  1283               	bcf	3,5	;RP0=0, select bank0
   873  01ED  1303               	bcf	3,6	;RP1=0, select bank0
   874  01EE  00AA               	movwf	??_main
   875  01EF  01AB               	clrf	??_main+1
   876  01F0  1003               	clrc
   877  01F1  0DAA               	rlf	??_main,f
   878  01F2  0DAB               	rlf	??_main+1,f
   879  01F3  1003               	clrc
   880  01F4  0DAA               	rlf	??_main,f
   881  01F5  0DAB               	rlf	??_main+1,f
   882  01F6  1003               	clrc
   883  01F7  0DAA               	rlf	??_main,f
   884  01F8  0DAB               	rlf	??_main+1,f
   885  01F9  082A               	movf	??_main,w
   886  01FA  3EC0               	addlw	192
   887  01FB  00B5               	movwf	_pot0
   888  01FC  082B               	movf	??_main+1,w
   889  01FD  1803               	skipnc
   890  01FE  3E01               	addlw	1
   891  01FF  3EFE               	addlw	254
   892  0200  00B6               	movwf	_pot0+1
   893                           
   894                           ;Main.c: 84:                 pot1 =(uint16_t)(EEPROM_R(1)-40)<<3;
   895  0201  3001               	movlw	1
   896  0202  120A  118A  24C3  120A  118A  	fcall	_EEPROM_R
   897  0207  1283               	bcf	3,5	;RP0=0, select bank0
   898  0208  1303               	bcf	3,6	;RP1=0, select bank0
   899  0209  00AA               	movwf	??_main
   900  020A  01AB               	clrf	??_main+1
   901  020B  1003               	clrc
   902  020C  0DAA               	rlf	??_main,f
   903  020D  0DAB               	rlf	??_main+1,f
   904  020E  1003               	clrc
   905  020F  0DAA               	rlf	??_main,f
   906  0210  0DAB               	rlf	??_main+1,f
   907  0211  1003               	clrc
   908  0212  0DAA               	rlf	??_main,f
   909  0213  0DAB               	rlf	??_main+1,f
   910  0214  082A               	movf	??_main,w
   911  0215  3EC0               	addlw	192
   912  0216  00B3               	movwf	_pot1
   913  0217  082B               	movf	??_main+1,w
   914  0218  1803               	skipnc
   915  0219  3E01               	addlw	1
   916  021A  3EFE               	addlw	254
   917  021B  00B4               	movwf	_pot1+1
   918                           
   919                           ;Main.c: 85:                 pot2 =(uint16_t)(EEPROM_R(2)-40)<<3;
   920  021C  3002               	movlw	2
   921  021D  120A  118A  24C3  120A  118A  	fcall	_EEPROM_R
   922  0222  1283               	bcf	3,5	;RP0=0, select bank0
   923  0223  1303               	bcf	3,6	;RP1=0, select bank0
   924  0224  00AA               	movwf	??_main
   925  0225  01AB               	clrf	??_main+1
   926  0226  1003               	clrc
   927  0227  0DAA               	rlf	??_main,f
   928  0228  0DAB               	rlf	??_main+1,f
   929  0229  1003               	clrc
   930  022A  0DAA               	rlf	??_main,f
   931  022B  0DAB               	rlf	??_main+1,f
   932  022C  1003               	clrc
   933  022D  0DAA               	rlf	??_main,f
   934  022E  0DAB               	rlf	??_main+1,f
   935  022F  082A               	movf	??_main,w
   936  0230  3EC0               	addlw	192
   937  0231  00B1               	movwf	_pot2
   938  0232  082B               	movf	??_main+1,w
   939  0233  1803               	skipnc
   940  0234  3E01               	addlw	1
   941  0235  3EFE               	addlw	254
   942  0236  00B2               	movwf	_pot2+1
   943  0237                     l1228:
   944                           
   945                           ;Main.c: 86:                 UART_write("\rRegresando a estado\r");
   946  0237  30C0               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   947  0238  120A  118A  245D  120A  118A  	fcall	_UART_write
   948  023D                     l1230:
   949                           
   950                           ;Main.c: 87:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
   951  023D  3006               	movlw	6
   952  023E  1283               	bcf	3,5	;RP0=0, select bank0
   953  023F  1303               	bcf	3,6	;RP1=0, select bank0
   954  0240  00AC               	movwf	??_main+2
   955  0241  3013               	movlw	19
   956  0242  00AB               	movwf	??_main+1
   957  0243  30AD               	movlw	173
   958  0244  00AA               	movwf	??_main
   959  0245                     u517:
   960  0245  0BAA               	decfsz	??_main,f
   961  0246  2A45               	goto	u517
   962  0247  0BAB               	decfsz	??_main+1,f
   963  0248  2A45               	goto	u517
   964  0249  0BAC               	decfsz	??_main+2,f
   965  024A  2A45               	goto	u517
   966  024B                     l1232:
   967                           
   968                           ;Main.c: 88:                 menu();
   969  024B  120A  118A  2434  120A  118A  	fcall	_menu
   970  0250                     l1234:
   971                           
   972                           ;Main.c: 90:             if(RCREG==100){
   973  0250  3064               	movlw	100
   974  0251  1283               	bcf	3,5	;RP0=0, select bank0
   975  0252  1303               	bcf	3,6	;RP1=0, select bank0
   976  0253  061A               	xorwf	26,w	;volatile
   977  0254  1D03               	btfss	3,2
   978  0255  2A57               	goto	u341
   979  0256  2A58               	goto	u340
   980  0257                     u341:
   981  0257  2961               	goto	l1204
   982  0258                     u340:
   983  0258                     l1236:
   984                           
   985                           ;Main.c: 91:                 RA4 = 0;
   986  0258  1205               	bcf	5,4	;volatile
   987                           
   988                           ;Main.c: 92:                 RA5 = 0;
   989  0259  1285               	bcf	5,5	;volatile
   990  025A                     l1238:
   991                           
   992                           ;Main.c: 93:                 UART_write("\r\rEstado Eliminado\rNo hay ningun estado guar
      +                          dado\r");
   993  025A  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   994  025B  120A  118A  245D  120A  118A  	fcall	_UART_write
   995  0260                     l1240:
   996                           
   997                           ;Main.c: 94:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
   998  0260  3006               	movlw	6
   999  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1000  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1001  0263  00AC               	movwf	??_main+2
  1002  0264  3013               	movlw	19
  1003  0265  00AB               	movwf	??_main+1
  1004  0266  30AD               	movlw	173
  1005  0267  00AA               	movwf	??_main
  1006  0268                     u527:
  1007  0268  0BAA               	decfsz	??_main,f
  1008  0269  2A68               	goto	u527
  1009  026A  0BAB               	decfsz	??_main+1,f
  1010  026B  2A68               	goto	u527
  1011  026C  0BAC               	decfsz	??_main+2,f
  1012  026D  2A68               	goto	u527
  1013  026E  295C               	goto	l1202
  1014  026F  120A  118A  280E   	ljmp	start
  1015  0272                     __end_of_main:
  1016                           
  1017                           	psect	text1
  1018  03DB                     __ptext1:	
  1019 ;; *************** function _setup *****************
  1020 ;; Defined at:
  1021 ;;		line 104 in file "Main.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0
  1037 ;;      Temps:          0       0       0       0       0
  1038 ;;      Totals:         0       0       0       0       0
  1039 ;;Total ram usage:        0 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 2
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _setup
  1051  03DB                     _setup:
  1052  03DB                     l1070:	
  1053                           ;incstack = 0
  1054                           ; Regs used in _setup: [wreg+status,2+status,0]
  1055                           
  1056                           
  1057                           ;Main.c: 106:     ANSEL = 0b00001111;
  1058  03DB  300F               	movlw	15
  1059  03DC  1683               	bsf	3,5	;RP0=1, select bank3
  1060  03DD  1703               	bsf	3,6	;RP1=1, select bank3
  1061  03DE  0088               	movwf	8	;volatile
  1062  03DF                     l1072:
  1063                           
  1064                           ;Main.c: 107:     ANSELH = 0;
  1065  03DF  0189               	clrf	9	;volatile
  1066  03E0                     l1074:
  1067                           
  1068                           ;Main.c: 108:     TRISA = 0b00001111;
  1069  03E0  300F               	movlw	15
  1070  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  1071  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  1072  03E3  0085               	movwf	5	;volatile
  1073                           
  1074                           ;Main.c: 109:     TRISB = 0;
  1075  03E4  0186               	clrf	6	;volatile
  1076  03E5                     l1076:
  1077                           
  1078                           ;Main.c: 110:     TRISC = 128;
  1079  03E5  3080               	movlw	128
  1080  03E6  0087               	movwf	7	;volatile
  1081  03E7                     l1078:
  1082                           
  1083                           ;Main.c: 111:     TRISD = 0;
  1084  03E7  0188               	clrf	8	;volatile
  1085  03E8                     l1080:
  1086                           
  1087                           ;Main.c: 112:     TRISE = 0;
  1088  03E8  0189               	clrf	9	;volatile
  1089  03E9                     l1082:
  1090                           
  1091                           ;Main.c: 115:     TXSTAbits.TXEN = 1;
  1092  03E9  1698               	bsf	24,5	;volatile
  1093  03EA                     l1084:
  1094                           
  1095                           ;Main.c: 116:     TXSTAbits.SYNC = 0;
  1096  03EA  1218               	bcf	24,4	;volatile
  1097  03EB                     l1086:
  1098                           
  1099                           ;Main.c: 117:     RCSTAbits.SPEN = 1;
  1100  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  1101  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  1102  03ED  1798               	bsf	24,7	;volatile
  1103  03EE                     l1088:
  1104                           
  1105                           ;Main.c: 118:     TXSTAbits.BRGH = 1;
  1106  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  1107  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  1108  03F0  1518               	bsf	24,2	;volatile
  1109  03F1                     l1090:
  1110                           
  1111                           ;Main.c: 119:     BRG16 = 0;
  1112  03F1  1683               	bsf	3,5	;RP0=1, select bank3
  1113  03F2  1703               	bsf	3,6	;RP1=1, select bank3
  1114  03F3  1187               	bcf	7,3	;volatile
  1115  03F4                     l1092:
  1116                           
  1117                           ;Main.c: 120:     SPBRGH = 0;
  1118  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  1119  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  1120  03F6  019A               	clrf	26	;volatile
  1121                           
  1122                           ;Main.c: 121:     SPBRG = 25;
  1123  03F7  3019               	movlw	25
  1124  03F8  0099               	movwf	25	;volatile
  1125  03F9                     l1094:
  1126                           
  1127                           ;Main.c: 124:     RCSTAbits.CREN = 1;
  1128  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1129  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1130  03FB  1618               	bsf	24,4	;volatile
  1131  03FC                     l1096:
  1132                           
  1133                           ;Main.c: 127:     ADCON1bits.ADFM = 0;
  1134  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  1135  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  1136  03FE  139F               	bcf	31,7	;volatile
  1137                           
  1138                           ;Main.c: 128:     ADCON0 = 0b01000001;
  1139  03FF  3041               	movlw	65
  1140  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0402  009F               	movwf	31	;volatile
  1143                           
  1144                           ;Main.c: 131:     TMR0 = 8;
  1145  0403  3008               	movlw	8
  1146  0404  0081               	movwf	1	;volatile
  1147  0405                     l1098:
  1148                           
  1149                           ;Main.c: 132:     OPTION_REGbits.PS = 0b101;
  1150  0405  1683               	bsf	3,5	;RP0=1, select bank1
  1151  0406  1303               	bcf	3,6	;RP1=0, select bank1
  1152  0407  0801               	movf	1,w	;volatile
  1153  0408  39F8               	andlw	-8
  1154  0409  3805               	iorlw	5
  1155  040A  0081               	movwf	1	;volatile
  1156  040B                     l1100:
  1157                           
  1158                           ;Main.c: 133:     PSA = 0;
  1159  040B  1181               	bcf	1,3	;volatile
  1160  040C                     l1102:
  1161                           
  1162                           ;Main.c: 134:     T0CS = 0;
  1163  040C  1281               	bcf	1,5	;volatile
  1164  040D                     l1104:
  1165                           
  1166                           ;Main.c: 135:     TMR0IF = 0;
  1167  040D  110B               	bcf	11,2	;volatile
  1168  040E                     l1106:
  1169                           
  1170                           ;Main.c: 138:     TRISCbits.TRISC1 = 1;
  1171  040E  1487               	bsf	7,1	;volatile
  1172  040F                     l1108:
  1173                           
  1174                           ;Main.c: 139:     TRISCbits.TRISC2 = 1;
  1175  040F  1507               	bsf	7,2	;volatile
  1176  0410                     l1110:
  1177                           
  1178                           ;Main.c: 140:     PR2 = 249;
  1179  0410  30F9               	movlw	249
  1180  0411  0092               	movwf	18	;volatile
  1181  0412                     l1112:
  1182                           
  1183                           ;Main.c: 141:     CCP1M3 = 1;
  1184  0412  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0413  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0414  1597               	bsf	23,3	;volatile
  1187  0415                     l1114:
  1188                           
  1189                           ;Main.c: 142:     CCP1M2 = 1;
  1190  0415  1517               	bsf	23,2	;volatile
  1191  0416                     l1116:
  1192                           
  1193                           ;Main.c: 143:     CCPR1L = 32;
  1194  0416  3020               	movlw	32
  1195  0417  0095               	movwf	21	;volatile
  1196  0418                     l1118:
  1197                           
  1198                           ;Main.c: 146:     CCP2M3 = 1;
  1199  0418  159D               	bsf	29,3	;volatile
  1200  0419                     l1120:
  1201                           
  1202                           ;Main.c: 147:     CCP2M2 = 1;
  1203  0419  151D               	bsf	29,2	;volatile
  1204  041A                     l1122:
  1205                           
  1206                           ;Main.c: 148:     CCPR2L = 32;
  1207  041A  3020               	movlw	32
  1208  041B  009B               	movwf	27	;volatile
  1209  041C                     l1124:
  1210                           
  1211                           ;Main.c: 150:     TMR2IF = 0;
  1212  041C  108C               	bcf	12,1	;volatile
  1213  041D                     l1126:
  1214                           
  1215                           ;Main.c: 151:     T2CON = 3;
  1216  041D  3003               	movlw	3
  1217  041E  0092               	movwf	18	;volatile
  1218  041F                     l1128:
  1219                           
  1220                           ;Main.c: 152:     T2CONbits.TMR2ON = 1;
  1221  041F  1512               	bsf	18,2	;volatile
  1222  0420                     l161:	
  1223                           ;Main.c: 154:     }
  1224                           
  1225                           
  1226                           ;Main.c: 153:     while(TMR2IF==0){
  1227  0420  1C8C               	btfss	12,1	;volatile
  1228  0421  2C23               	goto	u271
  1229  0422  2C24               	goto	u270
  1230  0423                     u271:
  1231  0423  2C20               	goto	l161
  1232  0424                     u270:
  1233  0424                     l1130:
  1234                           
  1235                           ;Main.c: 155:     TRISC = 128;
  1236  0424  3080               	movlw	128
  1237  0425  1683               	bsf	3,5	;RP0=1, select bank1
  1238  0426  1303               	bcf	3,6	;RP1=0, select bank1
  1239  0427  0087               	movwf	7	;volatile
  1240  0428                     l1132:
  1241                           
  1242                           ;Main.c: 158:     GIE = 1;
  1243  0428  178B               	bsf	11,7	;volatile
  1244  0429                     l1134:
  1245                           
  1246                           ;Main.c: 159:     PEIE = 1;
  1247  0429  170B               	bsf	11,6	;volatile
  1248  042A                     l1136:
  1249                           
  1250                           ;Main.c: 160:     TMR0IE = 1;
  1251  042A  168B               	bsf	11,5	;volatile
  1252  042B                     l1138:
  1253                           
  1254                           ;Main.c: 161:     ADIE = 1;
  1255  042B  170C               	bsf	12,6	;volatile
  1256  042C                     l1140:
  1257                           
  1258                           ;Main.c: 164:     PORTA = 0;
  1259  042C  1283               	bcf	3,5	;RP0=0, select bank0
  1260  042D  1303               	bcf	3,6	;RP1=0, select bank0
  1261  042E  0185               	clrf	5	;volatile
  1262  042F                     l1142:
  1263                           
  1264                           ;Main.c: 165:     PORTB = 0;
  1265  042F  0186               	clrf	6	;volatile
  1266  0430                     l1144:
  1267                           
  1268                           ;Main.c: 166:     PORTC = 0;
  1269  0430  0187               	clrf	7	;volatile
  1270  0431                     l1146:
  1271                           
  1272                           ;Main.c: 167:     PORTD = 0;
  1273  0431  0188               	clrf	8	;volatile
  1274  0432                     l1148:
  1275                           
  1276                           ;Main.c: 168:     PORTE = 0;
  1277  0432  0189               	clrf	9	;volatile
  1278  0433                     l164:
  1279  0433  0008               	return
  1280  0434                     __end_of_setup:
  1281                           
  1282                           	psect	text2
  1283  0434                     __ptext2:	
  1284 ;; *************** function _menu *****************
  1285 ;; Defined at:
  1286 ;;		line 179 in file "Main.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0
  1302 ;;      Temps:          0       2       0       0       0
  1303 ;;      Totals:         0       2       0       0       0
  1304 ;;Total ram usage:        2 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 3
  1307 ;; This function calls:
  1308 ;;		_UART_write
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           
  1315                           ;psect for function _menu
  1316  0434                     _menu:
  1317  0434                     l1150:	
  1318                           ;incstack = 0
  1319                           ; Regs used in _menu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1320                           
  1321                           
  1322                           ;Main.c: 180:     UART_write("\rInstrucciones para control de estado\r");
  1323  0434  3061               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1324  0435  120A  118A  245D  120A  118A  	fcall	_UART_write
  1325  043A                     l1152:
  1326                           
  1327                           ;Main.c: 181:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1328  043A  3041               	movlw	65
  1329  043B  1283               	bcf	3,5	;RP0=0, select bank0
  1330  043C  1303               	bcf	3,6	;RP1=0, select bank0
  1331  043D  00A9               	movwf	??_menu+1
  1332  043E  30ED               	movlw	237
  1333  043F  00A8               	movwf	??_menu
  1334  0440                     u537:
  1335  0440  0BA8               	decfsz	??_menu,f
  1336  0441  2C40               	goto	u537
  1337  0442  0BA9               	decfsz	??_menu+1,f
  1338  0443  2C40               	goto	u537
  1339  0444  2C45               	nop2
  1340  0445                     l1154:
  1341                           
  1342                           ;Main.c: 182:     UART_write("S - Guardar Estado\rSPACE - Regresar a estado\r");
  1343  0445  3033               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1344  0446  120A  118A  245D  120A  118A  	fcall	_UART_write
  1345                           
  1346                           ;Main.c: 183:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1347  044B  3041               	movlw	65
  1348  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1349  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1350  044E  00A9               	movwf	??_menu+1
  1351  044F  30ED               	movlw	237
  1352  0450  00A8               	movwf	??_menu
  1353  0451                     u547:
  1354  0451  0BA8               	decfsz	??_menu,f
  1355  0452  2C51               	goto	u547
  1356  0453  0BA9               	decfsz	??_menu+1,f
  1357  0454  2C51               	goto	u547
  1358  0455  2C56               	nop2
  1359  0456                     l1156:
  1360                           
  1361                           ;Main.c: 184:     UART_write("DEL - Elminar estado guardado\r");
  1362  0456  3088               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1363  0457  120A  118A  245D  120A  118A  	fcall	_UART_write
  1364  045C                     l176:
  1365  045C  0008               	return
  1366  045D                     __end_of_menu:
  1367                           
  1368                           	psect	text3
  1369  045D                     __ptext3:	
  1370 ;; *************** function _UART_write *****************
  1371 ;; Defined at:
  1372 ;;		line 171 in file "Main.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  word            1    wreg     PTR unsigned char 
  1375 ;;		 -> STR_6(31), STR_5(46), STR_4(39), STR_3(50), 
  1376 ;;		 -> STR_2(22), STR_1(25), 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  word            1    7[BANK0 ] PTR unsigned char 
  1379 ;;		 -> STR_6(31), STR_5(46), STR_4(39), STR_3(50), 
  1380 ;;		 -> STR_2(22), STR_1(25), 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1390 ;;      Params:         0       0       0       0       0
  1391 ;;      Locals:         0       1       0       0       0
  1392 ;;      Temps:          0       1       0       0       0
  1393 ;;      Totals:         0       2       0       0       0
  1394 ;;Total ram usage:        2 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 2
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;;		_menu
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           
  1406                           ;psect for function _UART_write
  1407  045D                     _UART_write:
  1408                           
  1409                           ;incstack = 0
  1410                           ; Regs used in _UART_write: [wreg-fsr0h+status,2+status,0+pclath]
  1411                           ;UART_write@word stored from wreg
  1412  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1413  045E  1303               	bcf	3,6	;RP1=0, select bank0
  1414  045F  00A7               	movwf	UART_write@word
  1415  0460                     l1062:
  1416                           
  1417                           ;Main.c: 172:     while (*word != 0){
  1418  0460  2C75               	goto	l1068
  1419  0461                     l1064:
  1420                           
  1421                           ;Main.c: 173:         TXREG = (*word);
  1422  0461  0827               	movf	UART_write@word,w
  1423  0462  0084               	movwf	4
  1424  0463  120A  118A  2300  120A  118A  	fcall	stringdir
  1425  0468  0099               	movwf	25	;volatile
  1426  0469                     l169:	
  1427                           ;Main.c: 174:         while(!TXSTAbits.TRMT);
  1428                           
  1429  0469  1683               	bsf	3,5	;RP0=1, select bank1
  1430  046A  1303               	bcf	3,6	;RP1=0, select bank1
  1431  046B  1C98               	btfss	24,1	;volatile
  1432  046C  2C6E               	goto	u251
  1433  046D  2C6F               	goto	u250
  1434  046E                     u251:
  1435  046E  2C69               	goto	l169
  1436  046F                     u250:
  1437  046F                     l1066:
  1438                           
  1439                           ;Main.c: 175:         word++;
  1440  046F  3001               	movlw	1
  1441  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0472  00A6               	movwf	??_UART_write
  1444  0473  0826               	movf	??_UART_write,w
  1445  0474  07A7               	addwf	UART_write@word,f
  1446  0475                     l1068:
  1447                           
  1448                           ;Main.c: 172:     while (*word != 0){
  1449  0475  0827               	movf	UART_write@word,w
  1450  0476  0084               	movwf	4
  1451  0477  120A  118A  2300  120A  118A  	fcall	stringdir
  1452  047C  3A00               	xorlw	0
  1453  047D  1D03               	skipz
  1454  047E  2C80               	goto	u261
  1455  047F  2C81               	goto	u260
  1456  0480                     u261:
  1457  0480  2C61               	goto	l1064
  1458  0481                     u260:
  1459  0481                     l173:
  1460  0481  0008               	return
  1461  0482                     __end_of_UART_write:
  1462                           
  1463                           	psect	text4
  1464  0482                     __ptext4:	
  1465 ;; *************** function _EEPROM_W *****************
  1466 ;; Defined at:
  1467 ;;		line 199 in file "Main.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  address         1    wreg     unsigned char 
  1470 ;;  data            1    6[BANK0 ] unsigned char 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  address         1    7[BANK0 ] unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         0       1       0       0       0
  1483 ;;      Locals:         0       1       0       0       0
  1484 ;;      Temps:          0       0       0       0       0
  1485 ;;      Totals:         0       2       0       0       0
  1486 ;;Total ram usage:        2 bytes
  1487 ;; Hardware stack levels used: 1
  1488 ;; Hardware stack levels required when called: 2
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _EEPROM_W
  1498  0482                     _EEPROM_W:
  1499                           
  1500                           ;incstack = 0
  1501                           ; Regs used in _EEPROM_W: [wreg]
  1502                           ;EEPROM_W@address stored from wreg
  1503  0482  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0483  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0484  00A7               	movwf	EEPROM_W@address
  1506  0485                     l1158:
  1507                           
  1508                           ;Main.c: 200:     EEADR = address;
  1509  0485  0827               	movf	EEPROM_W@address,w
  1510  0486  1283               	bcf	3,5	;RP0=0, select bank2
  1511  0487  1703               	bsf	3,6	;RP1=1, select bank2
  1512  0488  008D               	movwf	13	;volatile
  1513                           
  1514                           ;Main.c: 201:     EEDATA = data;
  1515  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1516  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1517  048B  0826               	movf	EEPROM_W@data,w
  1518  048C  1283               	bcf	3,5	;RP0=0, select bank2
  1519  048D  1703               	bsf	3,6	;RP1=1, select bank2
  1520  048E  008C               	movwf	12	;volatile
  1521  048F                     l1160:
  1522                           
  1523                           ;Main.c: 202:     EEPGD = 0;
  1524  048F  1683               	bsf	3,5	;RP0=1, select bank3
  1525  0490  1703               	bsf	3,6	;RP1=1, select bank3
  1526  0491  138C               	bcf	12,7	;volsfr
  1527  0492                     l1162:
  1528                           
  1529                           ;Main.c: 203:     WREN = 1;
  1530  0492  150C               	bsf	12,2	;volsfr
  1531  0493                     l1164:
  1532                           
  1533                           ;Main.c: 204:     GIE = 0;
  1534  0493  138B               	bcf	11,7	;volatile
  1535  0494                     l188:	
  1536                           ;Main.c: 207:     }
  1537                           
  1538                           
  1539                           ;Main.c: 205:     while(GIE){
  1540  0494  1B8B               	btfsc	11,7	;volatile
  1541  0495  2C97               	goto	u281
  1542  0496  2C98               	goto	u280
  1543  0497                     u281:
  1544  0497  2C93               	goto	l1164
  1545  0498                     u280:
  1546  0498                     l1166:
  1547                           
  1548                           ;Main.c: 208:     EECON2 = 0x55;
  1549  0498  3055               	movlw	85
  1550  0499  1683               	bsf	3,5	;RP0=1, select bank3
  1551  049A  1703               	bsf	3,6	;RP1=1, select bank3
  1552  049B  008D               	movwf	13	;volsfr
  1553                           
  1554                           ;Main.c: 209:     EECON2 = 0xAA;
  1555  049C  30AA               	movlw	170
  1556  049D  008D               	movwf	13	;volsfr
  1557  049E                     l1168:
  1558                           
  1559                           ;Main.c: 210:     WR = 1;
  1560  049E  148C               	bsf	12,1	;volsfr
  1561  049F                     l1170:
  1562                           
  1563                           ;Main.c: 211:     GIE = 1;
  1564  049F  178B               	bsf	11,7	;volatile
  1565  04A0                     l1172:
  1566                           
  1567                           ;Main.c: 212:     WREN = 0;
  1568  04A0  110C               	bcf	12,2	;volsfr
  1569  04A1                     l1174:
  1570                           
  1571                           ;Main.c: 213:     WR = 1;
  1572  04A1  148C               	bsf	12,1	;volsfr
  1573  04A2                     l191:
  1574  04A2  0008               	return
  1575  04A3                     __end_of_EEPROM_W:
  1576                           
  1577                           	psect	text5
  1578  04C3                     __ptext5:	
  1579 ;; *************** function _EEPROM_R *****************
  1580 ;; Defined at:
  1581 ;;		line 215 in file "Main.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  address         1    wreg     unsigned char 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  address         1    7[BANK0 ] unsigned char 
  1586 ;;  data            1    8[BANK0 ] unsigned char 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      unsigned char 
  1589 ;; Registers used:
  1590 ;;		wreg
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1596 ;;      Params:         0       0       0       0       0
  1597 ;;      Locals:         0       2       0       0       0
  1598 ;;      Temps:          0       1       0       0       0
  1599 ;;      Totals:         0       3       0       0       0
  1600 ;;Total ram usage:        3 bytes
  1601 ;; Hardware stack levels used: 1
  1602 ;; Hardware stack levels required when called: 2
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function _EEPROM_R
  1612  04C3                     _EEPROM_R:
  1613                           
  1614                           ;incstack = 0
  1615                           ; Regs used in _EEPROM_R: [wreg]
  1616                           ;EEPROM_R@address stored from wreg
  1617  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  1618  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  1619  04C5  00A7               	movwf	EEPROM_R@address
  1620  04C6                     l1176:
  1621                           
  1622                           ;Main.c: 216:     uint8_t data;;Main.c: 217:     EEADR = address;
  1623  04C6  0827               	movf	EEPROM_R@address,w
  1624  04C7  1283               	bcf	3,5	;RP0=0, select bank2
  1625  04C8  1703               	bsf	3,6	;RP1=1, select bank2
  1626  04C9  008D               	movwf	13	;volatile
  1627  04CA                     l1178:
  1628                           
  1629                           ;Main.c: 218:     EEPGD = 0;
  1630  04CA  1683               	bsf	3,5	;RP0=1, select bank3
  1631  04CB  1703               	bsf	3,6	;RP1=1, select bank3
  1632  04CC  138C               	bcf	12,7	;volsfr
  1633  04CD                     l1180:
  1634                           
  1635                           ;Main.c: 219:     RD = 1;
  1636  04CD  140C               	bsf	12,0	;volsfr
  1637                           
  1638                           ;Main.c: 220:     data = EEDATA;
  1639  04CE  1283               	bcf	3,5	;RP0=0, select bank2
  1640  04CF  1703               	bsf	3,6	;RP1=1, select bank2
  1641  04D0  080C               	movf	12,w	;volatile
  1642  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  1643  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  1644  04D3  00A6               	movwf	??_EEPROM_R
  1645  04D4  0826               	movf	??_EEPROM_R,w
  1646  04D5  00A8               	movwf	EEPROM_R@data
  1647                           
  1648                           ;Main.c: 221:     return data;
  1649  04D6  0828               	movf	EEPROM_R@data,w
  1650  04D7                     l194:
  1651  04D7  0008               	return
  1652  04D8                     __end_of_EEPROM_R:
  1653                           
  1654                           	psect	text6
  1655  0024                     __ptext6:	
  1656 ;; *************** function _isr *****************
  1657 ;; Defined at:
  1658 ;;		line 226 in file "Main.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0, pclath, cstack
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1672 ;;      Params:         0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0
  1674 ;;      Temps:          0       6       0       0       0
  1675 ;;      Totals:         0       6       0       0       0
  1676 ;;Total ram usage:        6 bytes
  1677 ;; Hardware stack levels used: 1
  1678 ;; Hardware stack levels required when called: 1
  1679 ;; This function calls:
  1680 ;;		_concat_bits
  1681 ;;		_delay_pulse
  1682 ;; This function is called by:
  1683 ;;		Interrupt level 1
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _isr
  1689  0024                     _isr:
  1690  0024                     i1l1244:
  1691                           
  1692                           ;Main.c: 227:     if (TMR0IF){
  1693  0024  1D0B               	btfss	11,2	;volatile
  1694  0025  2827               	goto	u35_21
  1695  0026  2828               	goto	u35_20
  1696  0027                     u35_21:
  1697  0027  28A9               	goto	i1l1284
  1698  0028                     u35_20:
  1699  0028                     i1l1246:
  1700                           
  1701                           ;Main.c: 228:         TMR0 = 8;
  1702  0028  3008               	movlw	8
  1703  0029  0081               	movwf	1	;volatile
  1704  002A                     i1l1248:
  1705                           
  1706                           ;Main.c: 229:         OPTION_REGbits.PS = 0b101;
  1707  002A  1683               	bsf	3,5	;RP0=1, select bank1
  1708  002B  1303               	bcf	3,6	;RP1=0, select bank1
  1709  002C  0801               	movf	1,w	;volatile
  1710  002D  39F8               	andlw	-8
  1711  002E  3805               	iorlw	5
  1712  002F  0081               	movwf	1	;volatile
  1713  0030                     i1l1250:
  1714                           
  1715                           ;Main.c: 230:         PSA = 0;
  1716  0030  1181               	bcf	1,3	;volatile
  1717  0031                     i1l1252:
  1718                           
  1719                           ;Main.c: 231:         if (servo == 0){
  1720  0031  087C               	movf	_servo,w
  1721  0032  1D03               	btfss	3,2
  1722  0033  2835               	goto	u36_21
  1723  0034  2836               	goto	u36_20
  1724  0035                     u36_21:
  1725  0035  285A               	goto	i1l1262
  1726  0036                     u36_20:
  1727  0036                     i1l1254:
  1728                           
  1729                           ;Main.c: 232:             RD0 = 1;
  1730  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1731  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1732  0038  1408               	bsf	8,0	;volatile
  1733  0039                     i1l1256:
  1734                           
  1735                           ;Main.c: 233:             delay_pulse(40+(pot0>>3));
  1736  0039  0836               	movf	_pot0+1,w
  1737  003A  00A1               	movwf	??_isr+1
  1738  003B  0835               	movf	_pot0,w
  1739  003C  00A0               	movwf	??_isr
  1740  003D  1003               	clrc
  1741  003E  0CA1               	rrf	??_isr+1,f
  1742  003F  0CA0               	rrf	??_isr,f
  1743  0040  1003               	clrc
  1744  0041  0CA1               	rrf	??_isr+1,f
  1745  0042  0CA0               	rrf	??_isr,f
  1746  0043  1003               	clrc
  1747  0044  0CA1               	rrf	??_isr+1,f
  1748  0045  0CA0               	rrf	??_isr,f
  1749  0046  0820               	movf	??_isr,w
  1750  0047  3E28               	addlw	40
  1751  0048  00F0               	movwf	delay_pulse@time
  1752  0049  0821               	movf	??_isr+1,w
  1753  004A  1803               	skipnc
  1754  004B  3E01               	addlw	1
  1755  004C  3E00               	addlw	0
  1756  004D  00F1               	movwf	delay_pulse@time+1
  1757  004E  120A  118A  24D8  120A  118A  	fcall	_delay_pulse
  1758  0053                     i1l1258:
  1759                           
  1760                           ;Main.c: 234:             RD0 = 0;
  1761  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0055  1008               	bcf	8,0	;volatile
  1764  0056                     i1l1260:
  1765                           
  1766                           ;Main.c: 235:             servo++;
  1767  0056  3001               	movlw	1
  1768  0057  00A0               	movwf	??_isr
  1769  0058  0820               	movf	??_isr,w
  1770  0059  07FC               	addwf	_servo,f
  1771  005A                     i1l1262:
  1772                           
  1773                           ;Main.c: 237:         if (servo == 1){
  1774  005A  037C               	decf	_servo,w
  1775  005B  1D03               	btfss	3,2
  1776  005C  285E               	goto	u37_21
  1777  005D  285F               	goto	u37_20
  1778  005E                     u37_21:
  1779  005E  2882               	goto	i1l1272
  1780  005F                     u37_20:
  1781  005F                     i1l1264:
  1782                           
  1783                           ;Main.c: 238:             RD1 = 1;
  1784  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0060  1488               	bsf	8,1	;volatile
  1786  0061                     i1l1266:
  1787                           
  1788                           ;Main.c: 239:             delay_pulse(40+(pot1>>3));
  1789  0061  0834               	movf	_pot1+1,w
  1790  0062  00A1               	movwf	??_isr+1
  1791  0063  0833               	movf	_pot1,w
  1792  0064  00A0               	movwf	??_isr
  1793  0065  1003               	clrc
  1794  0066  0CA1               	rrf	??_isr+1,f
  1795  0067  0CA0               	rrf	??_isr,f
  1796  0068  1003               	clrc
  1797  0069  0CA1               	rrf	??_isr+1,f
  1798  006A  0CA0               	rrf	??_isr,f
  1799  006B  1003               	clrc
  1800  006C  0CA1               	rrf	??_isr+1,f
  1801  006D  0CA0               	rrf	??_isr,f
  1802  006E  0820               	movf	??_isr,w
  1803  006F  3E28               	addlw	40
  1804  0070  00F0               	movwf	delay_pulse@time
  1805  0071  0821               	movf	??_isr+1,w
  1806  0072  1803               	skipnc
  1807  0073  3E01               	addlw	1
  1808  0074  3E00               	addlw	0
  1809  0075  00F1               	movwf	delay_pulse@time+1
  1810  0076  120A  118A  24D8  120A  118A  	fcall	_delay_pulse
  1811  007B                     i1l1268:
  1812                           
  1813                           ;Main.c: 240:             RD1 = 0;
  1814  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1815  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1816  007D  1088               	bcf	8,1	;volatile
  1817  007E                     i1l1270:
  1818                           
  1819                           ;Main.c: 241:             servo++;
  1820  007E  3001               	movlw	1
  1821  007F  00A0               	movwf	??_isr
  1822  0080  0820               	movf	??_isr,w
  1823  0081  07FC               	addwf	_servo,f
  1824  0082                     i1l1272:
  1825                           
  1826                           ;Main.c: 243:         if (servo == 2){
  1827  0082  3002               	movlw	2
  1828  0083  067C               	xorwf	_servo,w
  1829  0084  1D03               	btfss	3,2
  1830  0085  2887               	goto	u38_21
  1831  0086  2888               	goto	u38_20
  1832  0087                     u38_21:
  1833  0087  28A8               	goto	i1l1282
  1834  0088                     u38_20:
  1835  0088                     i1l1274:
  1836                           
  1837                           ;Main.c: 244:             RD2 = 1;
  1838  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0089  1508               	bsf	8,2	;volatile
  1840  008A                     i1l1276:
  1841                           
  1842                           ;Main.c: 245:             delay_pulse(40+(pot2>>3));
  1843  008A  0832               	movf	_pot2+1,w
  1844  008B  00A1               	movwf	??_isr+1
  1845  008C  0831               	movf	_pot2,w
  1846  008D  00A0               	movwf	??_isr
  1847  008E  1003               	clrc
  1848  008F  0CA1               	rrf	??_isr+1,f
  1849  0090  0CA0               	rrf	??_isr,f
  1850  0091  1003               	clrc
  1851  0092  0CA1               	rrf	??_isr+1,f
  1852  0093  0CA0               	rrf	??_isr,f
  1853  0094  1003               	clrc
  1854  0095  0CA1               	rrf	??_isr+1,f
  1855  0096  0CA0               	rrf	??_isr,f
  1856  0097  0820               	movf	??_isr,w
  1857  0098  3E28               	addlw	40
  1858  0099  00F0               	movwf	delay_pulse@time
  1859  009A  0821               	movf	??_isr+1,w
  1860  009B  1803               	skipnc
  1861  009C  3E01               	addlw	1
  1862  009D  3E00               	addlw	0
  1863  009E  00F1               	movwf	delay_pulse@time+1
  1864  009F  120A  118A  24D8  120A  118A  	fcall	_delay_pulse
  1865  00A4                     i1l1278:
  1866                           
  1867                           ;Main.c: 246:             RD2 = 0;
  1868  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1869  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1870  00A6  1108               	bcf	8,2	;volatile
  1871  00A7                     i1l1280:
  1872                           
  1873                           ;Main.c: 247:             servo = 0;
  1874  00A7  01FC               	clrf	_servo
  1875  00A8                     i1l1282:
  1876                           
  1877                           ;Main.c: 249:         TMR0IF = 0;
  1878  00A8  110B               	bcf	11,2	;volatile
  1879  00A9                     i1l1284:
  1880                           
  1881                           ;Main.c: 252:      if (ADIF==1){
  1882  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1883  00AA  1F0C               	btfss	12,6	;volatile
  1884  00AB  28AD               	goto	u39_21
  1885  00AC  28AE               	goto	u39_20
  1886  00AD                     u39_21:
  1887  00AD  2950               	goto	i1l212
  1888  00AE                     u39_20:
  1889  00AE                     i1l1286:
  1890                           
  1891                           ;Main.c: 253:          if(!RA5){
  1892  00AE  1A85               	btfsc	5,5	;volatile
  1893  00AF  28B1               	goto	u40_21
  1894  00B0  28B2               	goto	u40_20
  1895  00B1                     u40_21:
  1896  00B1  294F               	goto	i1l1318
  1897  00B2                     u40_20:
  1898  00B2                     i1l1288:
  1899                           
  1900                           ;Main.c: 254:             if(CHS0==0 && CHS1==0) {
  1901  00B2  191F               	btfsc	31,2	;volatile
  1902  00B3  28B5               	goto	u41_21
  1903  00B4  28B6               	goto	u41_20
  1904  00B5                     u41_21:
  1905  00B5  28D9               	goto	i1l205
  1906  00B6                     u41_20:
  1907  00B6                     i1l1290:
  1908  00B6  199F               	btfsc	31,3	;volatile
  1909  00B7  28B9               	goto	u42_21
  1910  00B8  28BA               	goto	u42_20
  1911  00B9                     u42_21:
  1912  00B9  28D9               	goto	i1l205
  1913  00BA                     u42_20:
  1914  00BA                     i1l1292:
  1915                           
  1916                           ;Main.c: 255:                 pot0 = concat_bits(ADRESH, ADRESL);
  1917  00BA  081E               	movf	30,w	;volatile
  1918  00BB  00A0               	movwf	??_isr
  1919  00BC  01A1               	clrf	??_isr+1
  1920  00BD  0820               	movf	??_isr,w
  1921  00BE  00F0               	movwf	concat_bits@x
  1922  00BF  0821               	movf	??_isr+1,w
  1923  00C0  00F1               	movwf	concat_bits@x+1
  1924  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1925  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1926  00C3  081E               	movf	30,w	;volatile
  1927  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1928  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1929  00C6  00A2               	movwf	??_isr+2
  1930  00C7  01A3               	clrf	??_isr+3
  1931  00C8  0822               	movf	??_isr+2,w
  1932  00C9  00F2               	movwf	concat_bits@y
  1933  00CA  0823               	movf	??_isr+3,w
  1934  00CB  00F3               	movwf	concat_bits@y+1
  1935  00CC  120A  118A  24A3  120A  118A  	fcall	_concat_bits
  1936  00D1  0871               	movf	?_concat_bits+1,w
  1937  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1938  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1939  00D4  00B6               	movwf	_pot0+1
  1940  00D5  0870               	movf	?_concat_bits,w
  1941  00D6  00B5               	movwf	_pot0
  1942  00D7                     i1l1294:
  1943                           
  1944                           ;Main.c: 256:                 CHS0 = 1;
  1945  00D7  151F               	bsf	31,2	;volatile
  1946                           
  1947                           ;Main.c: 258:             }
  1948  00D8  294F               	goto	i1l1318
  1949  00D9                     i1l205:	
  1950                           ;Main.c: 259:             else if(CHS0==1 && CHS1==0) {
  1951                           
  1952  00D9  1D1F               	btfss	31,2	;volatile
  1953  00DA  28DC               	goto	u43_21
  1954  00DB  28DD               	goto	u43_20
  1955  00DC                     u43_21:
  1956  00DC  2901               	goto	i1l207
  1957  00DD                     u43_20:
  1958  00DD                     i1l1296:
  1959  00DD  199F               	btfsc	31,3	;volatile
  1960  00DE  28E0               	goto	u44_21
  1961  00DF  28E1               	goto	u44_20
  1962  00E0                     u44_21:
  1963  00E0  2901               	goto	i1l207
  1964  00E1                     u44_20:
  1965  00E1                     i1l1298:
  1966                           
  1967                           ;Main.c: 260:                 pot1 = concat_bits(ADRESH, ADRESL);
  1968  00E1  081E               	movf	30,w	;volatile
  1969  00E2  00A0               	movwf	??_isr
  1970  00E3  01A1               	clrf	??_isr+1
  1971  00E4  0820               	movf	??_isr,w
  1972  00E5  00F0               	movwf	concat_bits@x
  1973  00E6  0821               	movf	??_isr+1,w
  1974  00E7  00F1               	movwf	concat_bits@x+1
  1975  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  1976  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  1977  00EA  081E               	movf	30,w	;volatile
  1978  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1979  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1980  00ED  00A2               	movwf	??_isr+2
  1981  00EE  01A3               	clrf	??_isr+3
  1982  00EF  0822               	movf	??_isr+2,w
  1983  00F0  00F2               	movwf	concat_bits@y
  1984  00F1  0823               	movf	??_isr+3,w
  1985  00F2  00F3               	movwf	concat_bits@y+1
  1986  00F3  120A  118A  24A3  120A  118A  	fcall	_concat_bits
  1987  00F8  0871               	movf	?_concat_bits+1,w
  1988  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1989  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1990  00FB  00B4               	movwf	_pot1+1
  1991  00FC  0870               	movf	?_concat_bits,w
  1992  00FD  00B3               	movwf	_pot1
  1993  00FE                     i1l1300:
  1994                           
  1995                           ;Main.c: 261:                 CHS0 = 0;
  1996  00FE  111F               	bcf	31,2	;volatile
  1997  00FF                     i1l1302:
  1998                           
  1999                           ;Main.c: 262:                 CHS1 = 1;
  2000  00FF  159F               	bsf	31,3	;volatile
  2001                           
  2002                           ;Main.c: 263:             }
  2003  0100  294F               	goto	i1l1318
  2004  0101                     i1l207:	
  2005                           ;Main.c: 264:             else if(CHS0==0 && CHS1==1) {
  2006                           
  2007  0101  191F               	btfsc	31,2	;volatile
  2008  0102  2904               	goto	u45_21
  2009  0103  2905               	goto	u45_20
  2010  0104                     u45_21:
  2011  0104  2927               	goto	i1l209
  2012  0105                     u45_20:
  2013  0105                     i1l1304:
  2014  0105  1D9F               	btfss	31,3	;volatile
  2015  0106  2908               	goto	u46_21
  2016  0107  2909               	goto	u46_20
  2017  0108                     u46_21:
  2018  0108  2927               	goto	i1l209
  2019  0109                     u46_20:
  2020  0109                     i1l1306:
  2021                           
  2022                           ;Main.c: 265:                 pot2 = concat_bits(ADRESH, ADRESL);
  2023  0109  081E               	movf	30,w	;volatile
  2024  010A  00A0               	movwf	??_isr
  2025  010B  01A1               	clrf	??_isr+1
  2026  010C  0820               	movf	??_isr,w
  2027  010D  00F0               	movwf	concat_bits@x
  2028  010E  0821               	movf	??_isr+1,w
  2029  010F  00F1               	movwf	concat_bits@x+1
  2030  0110  1683               	bsf	3,5	;RP0=1, select bank1
  2031  0111  1303               	bcf	3,6	;RP1=0, select bank1
  2032  0112  081E               	movf	30,w	;volatile
  2033  0113  1283               	bcf	3,5	;RP0=0, select bank0
  2034  0114  1303               	bcf	3,6	;RP1=0, select bank0
  2035  0115  00A2               	movwf	??_isr+2
  2036  0116  01A3               	clrf	??_isr+3
  2037  0117  0822               	movf	??_isr+2,w
  2038  0118  00F2               	movwf	concat_bits@y
  2039  0119  0823               	movf	??_isr+3,w
  2040  011A  00F3               	movwf	concat_bits@y+1
  2041  011B  120A  118A  24A3  120A  118A  	fcall	_concat_bits
  2042  0120  0871               	movf	?_concat_bits+1,w
  2043  0121  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0122  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0123  00B2               	movwf	_pot2+1
  2046  0124  0870               	movf	?_concat_bits,w
  2047  0125  00B1               	movwf	_pot2
  2048  0126  28D7               	goto	i1l1294
  2049  0127                     i1l209:	
  2050                           ;Main.c: 268:             else if(CHS0==1 && CHS1==1) {
  2051                           
  2052  0127  1D1F               	btfss	31,2	;volatile
  2053  0128  292A               	goto	u47_21
  2054  0129  292B               	goto	u47_20
  2055  012A                     u47_21:
  2056  012A  294F               	goto	i1l206
  2057  012B                     u47_20:
  2058  012B                     i1l1310:
  2059  012B  1D9F               	btfss	31,3	;volatile
  2060  012C  292E               	goto	u48_21
  2061  012D  292F               	goto	u48_20
  2062  012E                     u48_21:
  2063  012E  294F               	goto	i1l206
  2064  012F                     u48_20:
  2065  012F                     i1l1312:
  2066                           
  2067                           ;Main.c: 269:                 pot3 = concat_bits(ADRESH, ADRESL);
  2068  012F  081E               	movf	30,w	;volatile
  2069  0130  00A0               	movwf	??_isr
  2070  0131  01A1               	clrf	??_isr+1
  2071  0132  0820               	movf	??_isr,w
  2072  0133  00F0               	movwf	concat_bits@x
  2073  0134  0821               	movf	??_isr+1,w
  2074  0135  00F1               	movwf	concat_bits@x+1
  2075  0136  1683               	bsf	3,5	;RP0=1, select bank1
  2076  0137  1303               	bcf	3,6	;RP1=0, select bank1
  2077  0138  081E               	movf	30,w	;volatile
  2078  0139  1283               	bcf	3,5	;RP0=0, select bank0
  2079  013A  1303               	bcf	3,6	;RP1=0, select bank0
  2080  013B  00A2               	movwf	??_isr+2
  2081  013C  01A3               	clrf	??_isr+3
  2082  013D  0822               	movf	??_isr+2,w
  2083  013E  00F2               	movwf	concat_bits@y
  2084  013F  0823               	movf	??_isr+3,w
  2085  0140  00F3               	movwf	concat_bits@y+1
  2086  0141  120A  118A  24A3  120A  118A  	fcall	_concat_bits
  2087  0146  0871               	movf	?_concat_bits+1,w
  2088  0147  00FB               	movwf	_pot3+1
  2089  0148  0870               	movf	?_concat_bits,w
  2090  0149  00FA               	movwf	_pot3
  2091  014A                     i1l1314:
  2092                           
  2093                           ;Main.c: 270:                 CHS0 = 0;
  2094  014A  1283               	bcf	3,5	;RP0=0, select bank0
  2095  014B  1303               	bcf	3,6	;RP1=0, select bank0
  2096  014C  111F               	bcf	31,2	;volatile
  2097  014D                     i1l1316:
  2098                           
  2099                           ;Main.c: 271:                 CHS1 = 0;
  2100  014D  119F               	bcf	31,3	;volatile
  2101  014E  294F               	goto	i1l1318
  2102  014F                     i1l206:
  2103  014F                     i1l1318:
  2104                           
  2105                           ;Main.c: 274:         ADIF = 0;
  2106  014F  130C               	bcf	12,6	;volatile
  2107  0150                     i1l212:
  2108  0150  0825               	movf	??_isr+5,w
  2109  0151  008A               	movwf	10
  2110  0152  0E24               	swapf	??_isr+4,w
  2111  0153  0083               	movwf	3
  2112  0154  0EFE               	swapf	btemp,f
  2113  0155  0E7E               	swapf	btemp,w
  2114  0156  0009               	retfie
  2115  0157                     __end_of_isr:
  2116                           
  2117                           	psect	intentry
  2118  0004                     __pintentry:	
  2119                           ;incstack = 0
  2120                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2121                           
  2122  0004                     interrupt_function:
  2123  007E                     saved_w	set	btemp
  2124  0004  00FE               	movwf	btemp
  2125  0005  0E03               	swapf	3,w
  2126  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0008  00A4               	movwf	??_isr+4
  2129  0009  080A               	movf	10,w
  2130  000A  00A5               	movwf	??_isr+5
  2131  000B  120A  118A  2824   	ljmp	_isr
  2132                           
  2133                           	psect	text7
  2134  04D8                     __ptext7:	
  2135 ;; *************** function _delay_pulse *****************
  2136 ;; Defined at:
  2137 ;;		line 193 in file "Main.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  time            2    0[COMMON] unsigned int 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, status,2, status,0
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2151 ;;      Params:         2       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0
  2154 ;;      Totals:         2       0       0       0       0
  2155 ;;Total ram usage:        2 bytes
  2156 ;; Hardware stack levels used: 1
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_isr
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           
  2165                           ;psect for function _delay_pulse
  2166  04D8                     _delay_pulse:
  2167  04D8                     i1l1192:	
  2168                           ;incstack = 0
  2169                           ; Regs used in _delay_pulse: [wreg+status,2+status,0]
  2170                           
  2171                           
  2172                           ;Main.c: 194:     while(time>0){
  2173  04D8  2CE0               	goto	i1l1198
  2174  04D9                     i1l1194:
  2175                           
  2176                           ;Main.c: 195:         time--;
  2177  04D9  3001               	movlw	1
  2178  04DA  02F0               	subwf	delay_pulse@time,f
  2179  04DB  3000               	movlw	0
  2180  04DC  1C03               	skipc
  2181  04DD  03F1               	decf	delay_pulse@time+1,f
  2182  04DE  02F1               	subwf	delay_pulse@time+1,f
  2183  04DF                     i1l1196:
  2184                           
  2185                           ;Main.c: 196:         _delay((unsigned long)((1)*(4000000/4000000.0)));
  2186  04DF  0000               	nop
  2187  04E0                     i1l1198:
  2188                           
  2189                           ;Main.c: 194:     while(time>0){
  2190  04E0  0870               	movf	delay_pulse@time,w
  2191  04E1  0471               	iorwf	delay_pulse@time+1,w
  2192  04E2  1D03               	btfss	3,2
  2193  04E3  2CE5               	goto	u30_21
  2194  04E4  2CE6               	goto	u30_20
  2195  04E5                     u30_21:
  2196  04E5  2CD9               	goto	i1l1194
  2197  04E6                     u30_20:
  2198  04E6                     i1l185:
  2199  04E6  0008               	return
  2200  04E7                     __end_of_delay_pulse:
  2201                           
  2202                           	psect	text8
  2203  04A3                     __ptext8:	
  2204 ;; *************** function _concat_bits *****************
  2205 ;; Defined at:
  2206 ;;		line 187 in file "Main.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  x               2    0[COMMON] unsigned int 
  2209 ;;  y               2    2[COMMON] unsigned int 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  z               2    8[COMMON] unsigned int 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  2    0[COMMON] unsigned int 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         4       0       0       0       0
  2222 ;;      Locals:         2       0       0       0       0
  2223 ;;      Temps:          4       0       0       0       0
  2224 ;;      Totals:        10       0       0       0       0
  2225 ;;Total ram usage:       10 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_isr
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           
  2235                           ;psect for function _concat_bits
  2236  04A3                     _concat_bits:
  2237  04A3                     i1l1184:	
  2238                           ;incstack = 0
  2239                           ; Regs used in _concat_bits: [wreg+status,2+status,0]
  2240                           
  2241  04A3                     i1l1186:
  2242                           
  2243                           ;Main.c: 189:     z = (x<<2)|(y>>6);
  2244  04A3  0873               	movf	concat_bits@y+1,w
  2245  04A4  00F5               	movwf	??_concat_bits+1
  2246  04A5  0872               	movf	concat_bits@y,w
  2247  04A6  00F4               	movwf	??_concat_bits
  2248  04A7  3006               	movlw	6
  2249  04A8                     u29_25:
  2250  04A8  1003               	clrc
  2251  04A9  0CF5               	rrf	??_concat_bits+1,f
  2252  04AA  0CF4               	rrf	??_concat_bits,f
  2253  04AB  3EFF               	addlw	-1
  2254  04AC  1D03               	skipz
  2255  04AD  2CA8               	goto	u29_25
  2256  04AE  0871               	movf	concat_bits@x+1,w
  2257  04AF  00F7               	movwf	??_concat_bits+3
  2258  04B0  0870               	movf	concat_bits@x,w
  2259  04B1  00F6               	movwf	??_concat_bits+2
  2260  04B2  1003               	clrc
  2261  04B3  0DF6               	rlf	??_concat_bits+2,f
  2262  04B4  0DF7               	rlf	??_concat_bits+3,f
  2263  04B5  1003               	clrc
  2264  04B6  0DF6               	rlf	??_concat_bits+2,f
  2265  04B7  0DF7               	rlf	??_concat_bits+3,f
  2266  04B8  0874               	movf	??_concat_bits,w
  2267  04B9  0476               	iorwf	??_concat_bits+2,w
  2268  04BA  00F8               	movwf	concat_bits@z
  2269  04BB  0875               	movf	??_concat_bits+1,w
  2270  04BC  0477               	iorwf	??_concat_bits+3,w
  2271  04BD  00F9               	movwf	concat_bits@z+1
  2272  04BE                     i1l1188:
  2273                           
  2274                           ;Main.c: 190:     return z;
  2275  04BE  0879               	movf	concat_bits@z+1,w
  2276  04BF  00F1               	movwf	?_concat_bits+1
  2277  04C0  0878               	movf	concat_bits@z,w
  2278  04C1  00F0               	movwf	?_concat_bits
  2279  04C2                     i1l179:
  2280  04C2  0008               	return
  2281  04C3                     __end_of_concat_bits:
  2282  007E                     btemp	set	126	;btemp
  2283  007E                     wtemp0	set	126
  2284                           
  2285                           	psect	config
  2286                           
  2287                           ;Config register CONFIG1 @ 0x2007
  2288                           ;	Oscillator Selection bits
  2289                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2290                           ;	Watchdog Timer Enable bit
  2291                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2292                           ;	Power-up Timer Enable bit
  2293                           ;	PWRTE = OFF, PWRT disabled
  2294                           ;	RE3/MCLR pin function select bit
  2295                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2296                           ;	Code Protection bit
  2297                           ;	CP = OFF, Program memory code protection is disabled
  2298                           ;	Data Code Protection bit
  2299                           ;	CPD = OFF, Data memory code protection is disabled
  2300                           ;	Brown Out Reset Selection bits
  2301                           ;	BOREN = ON, BOR enabled
  2302                           ;	Internal External Switchover bit
  2303                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2304                           ;	Fail-Safe Clock Monitor Enabled bit
  2305                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2306                           ;	Low Voltage Programming Enable bit
  2307                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  2308                           ;	In-Circuit Debugger Mode bit
  2309                           ;	DEBUG = 0x1, unprogrammed default
  2310  2007                     	org	8199
  2311  2007  3FF4               	dw	16372
  2312                           
  2313                           ;Config register CONFIG2 @ 0x2008
  2314                           ;	Brown-out Reset Selection bit
  2315                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2316                           ;	Flash Program Memory Self Write Enable bits
  2317                           ;	WRT = OFF, Write protection off
  2318  2008                     	org	8200
  2319  2008  3FFF               	dw	16383

Data Sizes:
    Strings     213
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80     13      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_write@word	PTR unsigned char  size(1) Largest target is 50
		 -> STR_6(CODE[31]), STR_5(CODE[46]), STR_4(CODE[39]), STR_3(CODE[50]), 
		 -> STR_2(CODE[22]), STR_1(CODE[25]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_concat_bits

Critical Paths under _main in BANK0

    _main->_menu
    _menu->_UART_write

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     803
                                             10 BANK0      3     3      0
                           _EEPROM_R
                           _EEPROM_W
                         _UART_write
                               _menu
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0     243
                                              8 BANK0      2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           2     2      0     243
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_W                                             2     1      1     272
                                              6 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_R                                             3     3      0      45
                                              6 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  6     6      0     927
                                              0 BANK0      6     6      0
                        _concat_bits
                        _delay_pulse
 ---------------------------------------------------------------------------------
 (4) _delay_pulse                                          2     0      2     251
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _concat_bits                                         10     6      4     676
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_R
   _EEPROM_W
   _UART_write
   _menu
     _UART_write
   _setup

 _isr (ROOT)
   _concat_bits
   _delay_pulse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      17       5       28.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 02 19:42:40 2021

                      pc 0002                       _GO 00F9                       _RD 0C60  
                     _WR 0C61                       fsr 0004                      l161 0420  
                    l164 0433                      l173 0481                      l191 04A2  
                    l176 045C                      l169 0469                      l194 04D7  
                    l188 0494                      _GIE 005F                      _RA4 002C  
                    _RA5 002D                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      u310 0171                      u311 0170  
                    u320 0177                      u321 0176                      u250 046F  
                    u330 01E5                      u251 046E                      u331 01E4  
                    u260 0481                      u340 0258                      u261 0480  
                    u341 0257                      u270 0424                      _PR2 0092  
                    u271 0423                      u280 0498                      u281 0497  
                    u507 01D2                      u517 0245                      u527 0268  
                    u537 0440                      u547 0451                      _PSA 040B  
                    u497 0168             concat_bits@x 0070             concat_bits@y 0072  
           concat_bits@z 0078                      _isr 0024                      fsr0 0004  
           _pulse_width2 002F             _pulse_width3 002D                     l1100 040B  
                   l1110 0410                     l1102 040C                     l1120 0419  
                   l1112 0412                     l1104 040D                     l1200 0157  
                   l1130 0424                     l1122 041A                     l1114 0415  
                   l1106 040E                     l1210 0171                     l1202 015C  
                   l1140 042C                     l1132 0428                     l1124 041C  
                   l1116 0416                     l1108 040F                     l1220 01D8  
                   l1212 0177                     l1204 0161                     l1062 0460  
                   l1150 0434                     l1142 042F                     l1134 0429  
                   l1126 041D                     l1118 0418                     l1070 03DB  
                   l1230 023D                     l1214 0178                     l1222 01DD  
                   l1206 0164                     l1160 048F                     l1064 0461  
                   l1152 043A                     l1144 0430                     l1136 042A  
                   l1128 041F                     l1080 03E8                     l1072 03DF  
                   l1240 0260                     l1232 024B                     l1224 01E5  
                   l1216 01C4                     l1208 016B                     l1170 049F  
                   l1162 0492                     l1066 046F                     l1154 0445  
                   l1146 0431                     l1138 042B                     l1090 03F1  
                   l1082 03E9                     l1074 03E0                     l1226 01E6  
                   l1234 0250                     l1218 01CA                     l1180 04CD  
                   l1172 04A0                     l1164 0493                     l1068 0475  
                   l1156 0456                     l1148 0432                     l1092 03F4  
                   l1084 03EA                     l1076 03E5                     l1236 0258  
                   l1228 0237                     l1174 04A1                     l1166 0498  
                   l1158 0485                     l1094 03F9                     l1086 03EB  
                   l1078 03E7                     l1238 025A                     l1176 04C6  
                   l1168 049E                     l1096 03FC                     l1088 03EE  
                   l1178 04CA                     l1098 0405                     _ADIE 0466  
                   _ADIF 0066                     ?_isr 0070                     _CHS0 00FA  
                   _CHS1 00FB                     STR_1 03AC                     STR_2 03C5  
                   STR_3 0306                     STR_4 0366                     STR_5 0338  
                   STR_6 038D                     _T0CS 040D                     _PEIE 005E  
                   _RCIF 0065                     _TMR0 0001                     _WREN 0C62  
                   _main 0157                     _menu 0434                     _pot0 0035  
                   _pot1 0033                     _pot2 0031                     _pot3 007A  
                   btemp 007E                     start 000E         __end_of_EEPROM_R 04D8  
       __end_of_EEPROM_W 04A3                    ??_isr 0020                    ?_main 0070  
                  ?_menu 0070                    _EEADR 010D                    _BRG16 0C3B  
                  _EEPGD 0C67                    _ANSEL 0188                    _T2CON 0012  
                  i1l212 0150                    i1l205 00D9                    i1l206 014F  
                  i1l207 0101                    i1l209 0127                    i1l185 04E6  
                  i1l179 04C2                    _RCREG 001A                    u30_20 04E6  
                  u30_21 04E5                    u40_20 00B2                    u40_21 00B1  
                  u41_20 00B6                    u41_21 00B5                    u42_20 00BA  
                  u42_21 00B9                    _SPBRG 0099                    u43_20 00DD  
                  u35_20 0028                    u43_21 00DC                    u35_21 0027  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u44_20 00E1  
                  u36_20 0036                    u44_21 00E0                    u36_21 0035  
                  u45_20 0105                    u37_20 005F                    u45_21 0104  
                  u37_21 005E                    u29_25 04A8                    u46_20 0109  
                  u38_20 0088                    u46_21 0108                    u38_21 0087  
                  u47_20 012B                    u39_20 00AE                    u47_21 012A  
                  u39_21 00AD                    u48_20 012F                    u48_21 012E  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _TXREG 0019  
            ?_UART_write 0070                    _servo 007C                    _setup 03DB  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0272             __end_of_menu 045D  
   __size_of_delay_pulse 000F                   ??_main 002A                   ??_menu 0028  
                 _ADCON0 001F                   _CCP1M2 00BA                   _CCP1M3 00BB  
                 _CCP2M2 00EA                   _CCP2M3 00EB                   _ADRESH 001E  
                 _ADRESL 009E                   _EEDATA 010C                   _CCPR1L 0015  
                 _CCPR2L 001B                   _EECON2 018D                   ?_setup 0070  
                 _ANSELH 0189                   i1l1300 00FE                   i1l1310 012B  
                 i1l1302 00FF                   i1l1312 012F                   i1l1304 0105  
                 i1l1314 014A                   i1l1306 0109                   i1l1250 0030  
                 i1l1316 014D                   i1l1260 0056                   i1l1252 0031  
                 i1l1244 0024                   i1l1318 014F                   i1l1270 007E  
                 i1l1254 0036                   i1l1262 005A                   i1l1246 0028  
                 i1l1184 04A3                   i1l1192 04D8                   i1l1280 00A7  
                 i1l1264 005F                   i1l1272 0082                   i1l1256 0039  
                 i1l1248 002A                   i1l1186 04A3                   i1l1194 04D9  
                 i1l1290 00B6                   i1l1274 0088                   i1l1282 00A8  
                 i1l1266 0061                   i1l1258 0053                   i1l1188 04BE  
                 i1l1196 04DF                   i1l1292 00BA                   i1l1276 008A  
                 i1l1268 007B                   i1l1284 00A9                   i1l1198 04E0  
                 i1l1294 00D7                   i1l1286 00AE                   i1l1278 00A4  
                 i1l1296 00DD                   i1l1288 00B2                   i1l1298 00E1  
                 _TMR0IE 005D                   _TMR0IF 005A                   _TMR2IF 0061  
                 _SPBRGH 009A     __size_of_concat_bits 0020      __size_of_UART_write 0025  
                 saved_w 007E                ?_EEPROM_R 0070                ?_EEPROM_W 0026  
__end_of__initialization 0020           __pcstackCOMMON 0070            __end_of_setup 0434  
         _OPTION_REGbits 0081               ??_EEPROM_R 0026               ??_EEPROM_W 0027  
                ??_setup 0026               __pbssBANK0 002D          delay_pulse@time 0070  
             __pmaintext 0157               __pintentry 0004             ??_UART_write 0026  
             __stringtab 0300       __end_of_UART_write 0482                  __ptext1 03DB  
                __ptext2 0434                  __ptext3 045D                  __ptext4 0482  
                __ptext5 04C3                  __ptext6 0024                  __ptext7 04D8  
                __ptext8 04A3                _T2CONbits 0012             __size_of_isr 0133  
   end_of_initialization 0020            ??_delay_pulse 0072                _RCSTAbits 0018  
              _TRISCbits 0087        __size_of_EEPROM_R 0015        __size_of_EEPROM_W 0021  
          ??_concat_bits 0074                _TXSTAbits 0098      __end_of_delay_pulse 04E7  
    start_initialization 0011              __end_of_isr 0157      __end_of_concat_bits 04C3  
            __pbssCOMMON 007A                ___latbits 0002            __pcstackBANK0 0020  
            _delay_pulse 04D8                __pstrings 0300                 _EEPROM_R 04C3  
               _EEPROM_W 0482           __size_of_setup 0059        interrupt_function 0004  
            _concat_bits 04A3             EEPROM_R@data 0028             EEPROM_W@data 0026  
            __stringbase 0305               _ADCON1bits 009F           UART_write@word 0027  
     __end_of__stringtab 0306            __size_of_main 011B            __size_of_menu 0029  
               intlevel1 0000          EEPROM_R@address 0027                stringcode 0300  
           ?_delay_pulse 0070          EEPROM_W@address 0027                 stringdir 0300  
               stringtab 0300               _UART_write 045D             ?_concat_bits 0070  
