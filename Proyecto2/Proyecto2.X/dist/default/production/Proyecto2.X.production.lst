

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 01 12:39:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  001E                     _ADRESH	set	30
   212  0019                     _TXREG	set	25
   213  0009                     _PORTE	set	9
   214  0008                     _PORTD	set	8
   215  0007                     _PORTC	set	7
   216  0006                     _PORTB	set	6
   217  0005                     _PORTA	set	5
   218  000F                     _TMR1H	set	15
   219  000E                     _TMR1L	set	14
   220  001F                     _ADCON0	set	31
   221  0018                     _RCSTAbits	set	24
   222  001A                     _RCREG	set	26
   223  00FB                     _CHS1	set	251
   224  00FA                     _CHS0	set	250
   225  0066                     _ADIF	set	102
   226  0042                     _RD2	set	66
   227  0041                     _RD1	set	65
   228  0040                     _RD0	set	64
   229  005E                     _PEIE	set	94
   230  005F                     _GIE	set	95
   231  0060                     _TMR1IF	set	96
   232  0080                     _TMR1ON	set	128
   233  0065                     _RCIF	set	101
   234  00F9                     _GO	set	249
   235  009E                     _ADRESL	set	158
   236  009F                     _ADCON1bits	set	159
   237  0099                     _SPBRG	set	153
   238  009A                     _SPBRGH	set	154
   239  0098                     _TXSTAbits	set	152
   240  0089                     _TRISE	set	137
   241  0088                     _TRISD	set	136
   242  0087                     _TRISC	set	135
   243  0086                     _TRISB	set	134
   244  0085                     _TRISA	set	133
   245  0466                     _ADIE	set	1126
   246  0460                     _TMR1IE	set	1120
   247  0189                     _ANSELH	set	393
   248  0188                     _ANSEL	set	392
   249  0C3B                     _BRG16	set	3131
   250                           
   251                           	psect	strings
   252  012C                     __pstrings:
   253  012C                     stringtab:
   254  012C                     __stringtab:
   255  012C                     stringcode:	
   256                           ;	String table - string pointers are 1 byte each
   257                           
   258  012C                     stringdir:
   259  012C  3001               	movlw	high stringdir
   260  012D  008A               	movwf	10
   261  012E  0804               	movf	4,w
   262  012F  0A84               	incf	4,f
   263  0130  0782               	addwf	2,f
   264  0131                     __stringbase:
   265  0131  3400               	retlw	0
   266  0132                     __end_of__stringtab:
   267  0132                     STR_3:
   268  0132  340D               	retlw	13
   269  0133  3445               	retlw	69	;'E'
   270  0134  3473               	retlw	115	;'s'
   271  0135  3474               	retlw	116	;'t'
   272  0136  3461               	retlw	97	;'a'
   273  0137  3464               	retlw	100	;'d'
   274  0138  346F               	retlw	111	;'o'
   275  0139  3420               	retlw	32	;' '
   276  013A  3445               	retlw	69	;'E'
   277  013B  346C               	retlw	108	;'l'
   278  013C  3469               	retlw	105	;'i'
   279  013D  346D               	retlw	109	;'m'
   280  013E  3469               	retlw	105	;'i'
   281  013F  346E               	retlw	110	;'n'
   282  0140  3461               	retlw	97	;'a'
   283  0141  3464               	retlw	100	;'d'
   284  0142  346F               	retlw	111	;'o'
   285  0143  340D               	retlw	13
   286  0144  344E               	retlw	78	;'N'
   287  0145  346F               	retlw	111	;'o'
   288  0146  3420               	retlw	32	;' '
   289  0147  3468               	retlw	104	;'h'
   290  0148  3461               	retlw	97	;'a'
   291  0149  3479               	retlw	121	;'y'
   292  014A  3420               	retlw	32	;' '
   293  014B  346E               	retlw	110	;'n'
   294  014C  3469               	retlw	105	;'i'
   295  014D  346E               	retlw	110	;'n'
   296  014E  3467               	retlw	103	;'g'
   297  014F  3475               	retlw	117	;'u'
   298  0150  346E               	retlw	110	;'n'
   299  0151  3420               	retlw	32	;' '
   300  0152  3465               	retlw	101	;'e'
   301  0153  3473               	retlw	115	;'s'
   302  0154  3474               	retlw	116	;'t'
   303  0155  3461               	retlw	97	;'a'
   304  0156  3464               	retlw	100	;'d'
   305  0157  346F               	retlw	111	;'o'
   306  0158  3420               	retlw	32	;' '
   307  0159  3467               	retlw	103	;'g'
   308  015A  3475               	retlw	117	;'u'
   309  015B  3461               	retlw	97	;'a'
   310  015C  3472               	retlw	114	;'r'
   311  015D  3464               	retlw	100	;'d'
   312  015E  3461               	retlw	97	;'a'
   313  015F  3464               	retlw	100	;'d'
   314  0160  346F               	retlw	111	;'o'
   315  0161  3400               	retlw	0
   316  0162                     STR_5:
   317  0162  3453               	retlw	83	;'S'
   318  0163  3420               	retlw	32	;' '
   319  0164  342D               	retlw	45	;'-'
   320  0165  3420               	retlw	32	;' '
   321  0166  3447               	retlw	71	;'G'
   322  0167  3475               	retlw	117	;'u'
   323  0168  3461               	retlw	97	;'a'
   324  0169  3472               	retlw	114	;'r'
   325  016A  3464               	retlw	100	;'d'
   326  016B  3461               	retlw	97	;'a'
   327  016C  3472               	retlw	114	;'r'
   328  016D  3420               	retlw	32	;' '
   329  016E  3445               	retlw	69	;'E'
   330  016F  3473               	retlw	115	;'s'
   331  0170  3474               	retlw	116	;'t'
   332  0171  3461               	retlw	97	;'a'
   333  0172  3464               	retlw	100	;'d'
   334  0173  346F               	retlw	111	;'o'
   335  0174  340D               	retlw	13
   336  0175  3453               	retlw	83	;'S'
   337  0176  3450               	retlw	80	;'P'
   338  0177  3441               	retlw	65	;'A'
   339  0178  3443               	retlw	67	;'C'
   340  0179  3445               	retlw	69	;'E'
   341  017A  3420               	retlw	32	;' '
   342  017B  342D               	retlw	45	;'-'
   343  017C  3420               	retlw	32	;' '
   344  017D  3452               	retlw	82	;'R'
   345  017E  3465               	retlw	101	;'e'
   346  017F  3467               	retlw	103	;'g'
   347  0180  3472               	retlw	114	;'r'
   348  0181  3465               	retlw	101	;'e'
   349  0182  3473               	retlw	115	;'s'
   350  0183  3461               	retlw	97	;'a'
   351  0184  3472               	retlw	114	;'r'
   352  0185  3420               	retlw	32	;' '
   353  0186  3461               	retlw	97	;'a'
   354  0187  3420               	retlw	32	;' '
   355  0188  3465               	retlw	101	;'e'
   356  0189  3473               	retlw	115	;'s'
   357  018A  3474               	retlw	116	;'t'
   358  018B  3461               	retlw	97	;'a'
   359  018C  3464               	retlw	100	;'d'
   360  018D  346F               	retlw	111	;'o'
   361  018E  340D               	retlw	13
   362  018F  3400               	retlw	0
   363  0190                     STR_4:
   364  0190  340D               	retlw	13
   365  0191  3449               	retlw	73	;'I'
   366  0192  346E               	retlw	110	;'n'
   367  0193  3473               	retlw	115	;'s'
   368  0194  3474               	retlw	116	;'t'
   369  0195  3472               	retlw	114	;'r'
   370  0196  3475               	retlw	117	;'u'
   371  0197  3463               	retlw	99	;'c'
   372  0198  3463               	retlw	99	;'c'
   373  0199  3469               	retlw	105	;'i'
   374  019A  346F               	retlw	111	;'o'
   375  019B  346E               	retlw	110	;'n'
   376  019C  3465               	retlw	101	;'e'
   377  019D  3473               	retlw	115	;'s'
   378  019E  3420               	retlw	32	;' '
   379  019F  3470               	retlw	112	;'p'
   380  01A0  3461               	retlw	97	;'a'
   381  01A1  3472               	retlw	114	;'r'
   382  01A2  3461               	retlw	97	;'a'
   383  01A3  3420               	retlw	32	;' '
   384  01A4  3463               	retlw	99	;'c'
   385  01A5  346F               	retlw	111	;'o'
   386  01A6  346E               	retlw	110	;'n'
   387  01A7  3474               	retlw	116	;'t'
   388  01A8  3472               	retlw	114	;'r'
   389  01A9  346F               	retlw	111	;'o'
   390  01AA  346C               	retlw	108	;'l'
   391  01AB  3420               	retlw	32	;' '
   392  01AC  3464               	retlw	100	;'d'
   393  01AD  3465               	retlw	101	;'e'
   394  01AE  3420               	retlw	32	;' '
   395  01AF  3465               	retlw	101	;'e'
   396  01B0  3473               	retlw	115	;'s'
   397  01B1  3474               	retlw	116	;'t'
   398  01B2  3461               	retlw	97	;'a'
   399  01B3  3464               	retlw	100	;'d'
   400  01B4  346F               	retlw	111	;'o'
   401  01B5  340D               	retlw	13
   402  01B6  3400               	retlw	0
   403  01B7                     STR_6:
   404  01B7  3444               	retlw	68	;'D'
   405  01B8  3445               	retlw	69	;'E'
   406  01B9  344C               	retlw	76	;'L'
   407  01BA  3420               	retlw	32	;' '
   408  01BB  342D               	retlw	45	;'-'
   409  01BC  3420               	retlw	32	;' '
   410  01BD  3445               	retlw	69	;'E'
   411  01BE  346C               	retlw	108	;'l'
   412  01BF  346D               	retlw	109	;'m'
   413  01C0  3469               	retlw	105	;'i'
   414  01C1  346E               	retlw	110	;'n'
   415  01C2  3461               	retlw	97	;'a'
   416  01C3  3472               	retlw	114	;'r'
   417  01C4  3420               	retlw	32	;' '
   418  01C5  3465               	retlw	101	;'e'
   419  01C6  3473               	retlw	115	;'s'
   420  01C7  3474               	retlw	116	;'t'
   421  01C8  3461               	retlw	97	;'a'
   422  01C9  3464               	retlw	100	;'d'
   423  01CA  346F               	retlw	111	;'o'
   424  01CB  3420               	retlw	32	;' '
   425  01CC  3467               	retlw	103	;'g'
   426  01CD  3475               	retlw	117	;'u'
   427  01CE  3461               	retlw	97	;'a'
   428  01CF  3472               	retlw	114	;'r'
   429  01D0  3464               	retlw	100	;'d'
   430  01D1  3461               	retlw	97	;'a'
   431  01D2  3464               	retlw	100	;'d'
   432  01D3  346F               	retlw	111	;'o'
   433  01D4  3400               	retlw	0
   434  01D5                     STR_2:
   435  01D5  340D               	retlw	13
   436  01D6  3452               	retlw	82	;'R'
   437  01D7  3465               	retlw	101	;'e'
   438  01D8  3467               	retlw	103	;'g'
   439  01D9  3472               	retlw	114	;'r'
   440  01DA  3465               	retlw	101	;'e'
   441  01DB  3473               	retlw	115	;'s'
   442  01DC  3461               	retlw	97	;'a'
   443  01DD  346E               	retlw	110	;'n'
   444  01DE  3464               	retlw	100	;'d'
   445  01DF  346F               	retlw	111	;'o'
   446  01E0  3420               	retlw	32	;' '
   447  01E1  3461               	retlw	97	;'a'
   448  01E2  3420               	retlw	32	;' '
   449  01E3  3465               	retlw	101	;'e'
   450  01E4  3473               	retlw	115	;'s'
   451  01E5  3474               	retlw	116	;'t'
   452  01E6  3461               	retlw	97	;'a'
   453  01E7  3464               	retlw	100	;'d'
   454  01E8  346F               	retlw	111	;'o'
   455  01E9  340D               	retlw	13
   456  01EA  3400               	retlw	0
   457  01EB                     STR_1:
   458  01EB  340D               	retlw	13
   459  01EC  3445               	retlw	69	;'E'
   460  01ED  3473               	retlw	115	;'s'
   461  01EE  3474               	retlw	116	;'t'
   462  01EF  3461               	retlw	97	;'a'
   463  01F0  3464               	retlw	100	;'d'
   464  01F1  346F               	retlw	111	;'o'
   465  01F2  3420               	retlw	32	;' '
   466  01F3  3447               	retlw	71	;'G'
   467  01F4  3475               	retlw	117	;'u'
   468  01F5  3461               	retlw	97	;'a'
   469  01F6  3472               	retlw	114	;'r'
   470  01F7  3464               	retlw	100	;'d'
   471  01F8  3461               	retlw	97	;'a'
   472  01F9  3464               	retlw	100	;'d'
   473  01FA  346F               	retlw	111	;'o'
   474  01FB  3421               	retlw	33	;'!'
   475  01FC  340D               	retlw	13
   476  01FD  3400               	retlw	0
   477                           
   478                           	psect	cinit
   479  0011                     start_initialization:	
   480                           ; #config settings
   481                           
   482  0011                     __initialization:
   483                           
   484                           ; Clear objects allocated to COMMON
   485  0011  01FA               	clrf	__pbssCOMMON& (0+127)
   486  0012  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   487  0013  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   488  0014  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   489                           
   490                           ; Clear objects allocated to BANK0
   491  0015  1283               	bcf	3,5	;RP0=0, select bank0
   492  0016  1303               	bcf	3,6	;RP1=0, select bank0
   493  0017  01AD               	clrf	__pbssBANK0& (0+127)
   494  0018  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   495  0019  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   496  001A  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   497  001B                     end_of_initialization:	
   498                           ;End of C runtime variable initialization code
   499                           
   500  001B                     __end_of__initialization:
   501  001B  0183               	clrf	3
   502  001C  120A  118A  29FE   	ljmp	_main	;jump to C main() function
   503                           
   504                           	psect	bssCOMMON
   505  007A                     __pbssCOMMON:
   506  007A                     _pot1:
   507  007A                     	ds	2
   508  007C                     _pot0:
   509  007C                     	ds	2
   510                           
   511                           	psect	bssBANK0
   512  002D                     __pbssBANK0:
   513  002D                     _pot3:
   514  002D                     	ds	2
   515  002F                     _pot2:
   516  002F                     	ds	2
   517                           
   518                           	psect	cstackCOMMON
   519  0070                     __pcstackCOMMON:
   520  0070                     ?_setup:
   521  0070                     ?_menu:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_UART_write:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_main:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_delay_us:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_isr:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_concat_bits:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     concat_bits@x:	
   540                           ; 2 bytes @ 0x0
   541                           
   542  0070                     delay_us@time:	
   543                           ; 2 bytes @ 0x0
   544                           
   545                           
   546                           ; 2 bytes @ 0x0
   547  0070                     	ds	2
   548  0072                     ??_delay_us:
   549  0072                     concat_bits@y:	
   550                           ; 1 bytes @ 0x2
   551                           
   552                           
   553                           ; 2 bytes @ 0x2
   554  0072                     	ds	2
   555  0074                     ??_concat_bits:
   556                           
   557                           ; 1 bytes @ 0x4
   558  0074                     	ds	4
   559  0078                     concat_bits@z:
   560                           
   561                           ; 2 bytes @ 0x8
   562  0078                     	ds	2
   563                           
   564                           	psect	cstackBANK0
   565  0020                     __pcstackBANK0:
   566  0020                     ??_isr:
   567                           
   568                           ; 1 bytes @ 0x0
   569  0020                     	ds	6
   570  0026                     ??_setup:
   571  0026                     ??_UART_write:	
   572                           ; 1 bytes @ 0x6
   573                           
   574                           
   575                           ; 1 bytes @ 0x6
   576  0026                     	ds	1
   577  0027                     UART_write@word:
   578                           
   579                           ; 1 bytes @ 0x7
   580  0027                     	ds	1
   581  0028                     ??_menu:
   582                           
   583                           ; 1 bytes @ 0x8
   584  0028                     	ds	2
   585  002A                     ??_main:
   586                           
   587                           ; 1 bytes @ 0xA
   588  002A                     	ds	3
   589                           
   590                           	psect	maintext
   591  01FE                     __pmaintext:	
   592 ;;
   593 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   594 ;;
   595 ;; *************** function _main *****************
   596 ;; Defined at:
   597 ;;		line 58 in file "Main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : B00/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   611 ;;      Params:         0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0
   613 ;;      Temps:          0       3       0       0       0
   614 ;;      Totals:         0       3       0       0       0
   615 ;;Total ram usage:        3 bytes
   616 ;; Hardware stack levels required when called: 4
   617 ;; This function calls:
   618 ;;		_UART_write
   619 ;;		_menu
   620 ;;		_setup
   621 ;; This function is called by:
   622 ;;		Startup code after reset
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           
   627                           ;psect for function _main
   628  01FE                     _main:
   629  01FE                     l991:	
   630                           ;incstack = 0
   631                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   632                           
   633                           
   634                           ;Main.c: 59:     setup();
   635  01FE  120A  118A  2278  120A  118A  	fcall	_setup
   636  0203                     l993:
   637                           
   638                           ;Main.c: 60:     menu();
   639  0203  120A  118A  22B4  120A  118A  	fcall	_menu
   640  0208                     l995:
   641                           
   642                           ;Main.c: 64:         GO = 1;
   643  0208  1283               	bcf	3,5	;RP0=0, select bank0
   644  0209  1303               	bcf	3,6	;RP1=0, select bank0
   645  020A  149F               	bsf	31,1	;volatile
   646  020B                     l997:
   647                           
   648                           ;Main.c: 65:         _delay((unsigned long)((50)*(4000000/4000000.0)));
   649  020B  300F               	movlw	15
   650  020C  1283               	bcf	3,5	;RP0=0, select bank0
   651  020D  1303               	bcf	3,6	;RP1=0, select bank0
   652  020E  00AA               	movwf	??_main
   653  020F                     u377:
   654  020F  0BAA               	decfsz	??_main,f
   655  0210  2A0F               	goto	u377
   656  0211  2A12               	nop2
   657  0212                     l999:
   658                           
   659                           ;Main.c: 67:         if(RCIF){
   660  0212  1283               	bcf	3,5	;RP0=0, select bank0
   661  0213  1303               	bcf	3,6	;RP1=0, select bank0
   662  0214  1E8C               	btfss	12,5	;volatile
   663  0215  2A17               	goto	u231
   664  0216  2A18               	goto	u230
   665  0217                     u231:
   666  0217  2A08               	goto	l995
   667  0218                     u230:
   668  0218                     l1001:
   669                           
   670                           ;Main.c: 68:             if(RCREG==115){
   671  0218  3073               	movlw	115
   672  0219  061A               	xorwf	26,w	;volatile
   673  021A  1D03               	btfss	3,2
   674  021B  2A1D               	goto	u241
   675  021C  2A1E               	goto	u240
   676  021D                     u241:
   677  021D  2A37               	goto	l1009
   678  021E                     u240:
   679  021E                     l1003:
   680                           
   681                           ;Main.c: 69:             UART_write("\rEstado Guardado!\r");
   682  021E  30BA               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   683  021F  120A  118A  22DD  120A  118A  	fcall	_UART_write
   684  0224                     l1005:
   685                           
   686                           ;Main.c: 70:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   687  0224  3006               	movlw	6
   688  0225  1283               	bcf	3,5	;RP0=0, select bank0
   689  0226  1303               	bcf	3,6	;RP1=0, select bank0
   690  0227  00AC               	movwf	??_main+2
   691  0228  3013               	movlw	19
   692  0229  00AB               	movwf	??_main+1
   693  022A  30AD               	movlw	173
   694  022B  00AA               	movwf	??_main
   695  022C                     u387:
   696  022C  0BAA               	decfsz	??_main,f
   697  022D  2A2C               	goto	u387
   698  022E  0BAB               	decfsz	??_main+1,f
   699  022F  2A2C               	goto	u387
   700  0230  0BAC               	decfsz	??_main+2,f
   701  0231  2A2C               	goto	u387
   702  0232                     l1007:
   703                           
   704                           ;Main.c: 71:             menu();
   705  0232  120A  118A  22B4  120A  118A  	fcall	_menu
   706  0237                     l1009:
   707                           
   708                           ;Main.c: 73:             if(RCREG==32){
   709  0237  3020               	movlw	32
   710  0238  1283               	bcf	3,5	;RP0=0, select bank0
   711  0239  1303               	bcf	3,6	;RP1=0, select bank0
   712  023A  061A               	xorwf	26,w	;volatile
   713  023B  1D03               	btfss	3,2
   714  023C  2A3E               	goto	u251
   715  023D  2A3F               	goto	u250
   716  023E                     u251:
   717  023E  2A58               	goto	l1017
   718  023F                     u250:
   719  023F                     l1011:
   720                           
   721                           ;Main.c: 74:                 UART_write("\rRegresando a estado\r");
   722  023F  30A4               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   723  0240  120A  118A  22DD  120A  118A  	fcall	_UART_write
   724  0245                     l1013:
   725                           
   726                           ;Main.c: 75:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
   727  0245  3006               	movlw	6
   728  0246  1283               	bcf	3,5	;RP0=0, select bank0
   729  0247  1303               	bcf	3,6	;RP1=0, select bank0
   730  0248  00AC               	movwf	??_main+2
   731  0249  3013               	movlw	19
   732  024A  00AB               	movwf	??_main+1
   733  024B  30AD               	movlw	173
   734  024C  00AA               	movwf	??_main
   735  024D                     u397:
   736  024D  0BAA               	decfsz	??_main,f
   737  024E  2A4D               	goto	u397
   738  024F  0BAB               	decfsz	??_main+1,f
   739  0250  2A4D               	goto	u397
   740  0251  0BAC               	decfsz	??_main+2,f
   741  0252  2A4D               	goto	u397
   742  0253                     l1015:
   743                           
   744                           ;Main.c: 76:                 menu();
   745  0253  120A  118A  22B4  120A  118A  	fcall	_menu
   746  0258                     l1017:
   747                           
   748                           ;Main.c: 78:             if(RCREG==127){
   749  0258  307F               	movlw	127
   750  0259  1283               	bcf	3,5	;RP0=0, select bank0
   751  025A  1303               	bcf	3,6	;RP1=0, select bank0
   752  025B  061A               	xorwf	26,w	;volatile
   753  025C  1D03               	btfss	3,2
   754  025D  2A5F               	goto	u261
   755  025E  2A60               	goto	u260
   756  025F                     u261:
   757  025F  2A08               	goto	l995
   758  0260                     u260:
   759  0260                     l1019:
   760                           
   761                           ;Main.c: 79:                 UART_write("\rEstado Eliminado\rNo hay ningun estado guarda
      +                          do");
   762  0260  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   763  0261  120A  118A  22DD  120A  118A  	fcall	_UART_write
   764  0266                     l1021:
   765                           
   766                           ;Main.c: 80:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
   767  0266  3006               	movlw	6
   768  0267  1283               	bcf	3,5	;RP0=0, select bank0
   769  0268  1303               	bcf	3,6	;RP1=0, select bank0
   770  0269  00AC               	movwf	??_main+2
   771  026A  3013               	movlw	19
   772  026B  00AB               	movwf	??_main+1
   773  026C  30AD               	movlw	173
   774  026D  00AA               	movwf	??_main
   775  026E                     u407:
   776  026E  0BAA               	decfsz	??_main,f
   777  026F  2A6E               	goto	u407
   778  0270  0BAB               	decfsz	??_main+1,f
   779  0271  2A6E               	goto	u407
   780  0272  0BAC               	decfsz	??_main+2,f
   781  0273  2A6E               	goto	u407
   782  0274  2A03               	goto	l993
   783  0275  120A  118A  280E   	ljmp	start
   784  0278                     __end_of_main:
   785                           
   786                           	psect	text1
   787  0278                     __ptext1:	
   788 ;; *************** function _setup *****************
   789 ;; Defined at:
   790 ;;		line 90 in file "Main.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, status,2
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   804 ;;      Params:         0       0       0       0       0
   805 ;;      Locals:         0       0       0       0       0
   806 ;;      Temps:          0       0       0       0       0
   807 ;;      Totals:         0       0       0       0       0
   808 ;;Total ram usage:        0 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; Hardware stack levels required when called: 2
   811 ;; This function calls:
   812 ;;		Nothing
   813 ;; This function is called by:
   814 ;;		_main
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           
   819                           ;psect for function _setup
   820  0278                     _setup:
   821  0278                     l917:	
   822                           ;incstack = 0
   823                           ; Regs used in _setup: [wreg+status,2]
   824                           
   825                           
   826                           ;Main.c: 92:     ANSEL = 0b00001111;
   827  0278  300F               	movlw	15
   828  0279  1683               	bsf	3,5	;RP0=1, select bank3
   829  027A  1703               	bsf	3,6	;RP1=1, select bank3
   830  027B  0088               	movwf	8	;volatile
   831  027C                     l919:
   832                           
   833                           ;Main.c: 93:     ANSELH = 0;
   834  027C  0189               	clrf	9	;volatile
   835  027D                     l921:
   836                           
   837                           ;Main.c: 94:     TRISA = 0b00001111;
   838  027D  300F               	movlw	15
   839  027E  1683               	bsf	3,5	;RP0=1, select bank1
   840  027F  1303               	bcf	3,6	;RP1=0, select bank1
   841  0280  0085               	movwf	5	;volatile
   842                           
   843                           ;Main.c: 95:     TRISB = 0;
   844  0281  0186               	clrf	6	;volatile
   845  0282                     l923:
   846                           
   847                           ;Main.c: 96:     TRISC = 128;
   848  0282  3080               	movlw	128
   849  0283  0087               	movwf	7	;volatile
   850  0284                     l925:
   851                           
   852                           ;Main.c: 97:     TRISD = 0;
   853  0284  0188               	clrf	8	;volatile
   854  0285                     l927:
   855                           
   856                           ;Main.c: 98:     TRISE = 0;
   857  0285  0189               	clrf	9	;volatile
   858  0286                     l929:
   859                           
   860                           ;Main.c: 101:     TXSTAbits.TXEN = 1;
   861  0286  1698               	bsf	24,5	;volatile
   862  0287                     l931:
   863                           
   864                           ;Main.c: 102:     TXSTAbits.SYNC = 0;
   865  0287  1218               	bcf	24,4	;volatile
   866  0288                     l933:
   867                           
   868                           ;Main.c: 103:     RCSTAbits.SPEN = 1;
   869  0288  1283               	bcf	3,5	;RP0=0, select bank0
   870  0289  1303               	bcf	3,6	;RP1=0, select bank0
   871  028A  1798               	bsf	24,7	;volatile
   872  028B                     l935:
   873                           
   874                           ;Main.c: 104:     TXSTAbits.BRGH = 1;
   875  028B  1683               	bsf	3,5	;RP0=1, select bank1
   876  028C  1303               	bcf	3,6	;RP1=0, select bank1
   877  028D  1518               	bsf	24,2	;volatile
   878  028E                     l937:
   879                           
   880                           ;Main.c: 105:     BRG16 = 0;
   881  028E  1683               	bsf	3,5	;RP0=1, select bank3
   882  028F  1703               	bsf	3,6	;RP1=1, select bank3
   883  0290  1187               	bcf	7,3	;volatile
   884  0291                     l939:
   885                           
   886                           ;Main.c: 106:     SPBRGH = 0;
   887  0291  1683               	bsf	3,5	;RP0=1, select bank1
   888  0292  1303               	bcf	3,6	;RP1=0, select bank1
   889  0293  019A               	clrf	26	;volatile
   890                           
   891                           ;Main.c: 107:     SPBRG = 25;
   892  0294  3019               	movlw	25
   893  0295  0099               	movwf	25	;volatile
   894  0296                     l941:
   895                           
   896                           ;Main.c: 110:     RCSTAbits.CREN = 1;
   897  0296  1283               	bcf	3,5	;RP0=0, select bank0
   898  0297  1303               	bcf	3,6	;RP1=0, select bank0
   899  0298  1618               	bsf	24,4	;volatile
   900  0299                     l943:
   901                           
   902                           ;Main.c: 113:     ADCON1bits.ADFM = 0;
   903  0299  1683               	bsf	3,5	;RP0=1, select bank1
   904  029A  1303               	bcf	3,6	;RP1=0, select bank1
   905  029B  139F               	bcf	31,7	;volatile
   906                           
   907                           ;Main.c: 114:     ADCON0 = 0b01000001;
   908  029C  3041               	movlw	65
   909  029D  1283               	bcf	3,5	;RP0=0, select bank0
   910  029E  1303               	bcf	3,6	;RP1=0, select bank0
   911  029F  009F               	movwf	31	;volatile
   912  02A0                     l945:
   913                           
   914                           ;Main.c: 118:     TMR1ON = 1;
   915  02A0  1410               	bsf	16,0	;volatile
   916                           
   917                           ;Main.c: 119:     TMR1L = 0b11011111;
   918  02A1  30DF               	movlw	223
   919  02A2  008E               	movwf	14	;volatile
   920                           
   921                           ;Main.c: 120:     TMR1H = 0b10110001;
   922  02A3  30B1               	movlw	177
   923  02A4  008F               	movwf	15	;volatile
   924  02A5                     l947:
   925                           
   926                           ;Main.c: 121:     TMR1IF = 0;
   927  02A5  100C               	bcf	12,0	;volatile
   928  02A6                     l949:
   929                           
   930                           ;Main.c: 124:     GIE = 1;
   931  02A6  178B               	bsf	11,7	;volatile
   932  02A7                     l951:
   933                           
   934                           ;Main.c: 125:     PEIE = 1;
   935  02A7  170B               	bsf	11,6	;volatile
   936  02A8                     l953:
   937                           
   938                           ;Main.c: 126:     TMR1IE = 1;
   939  02A8  1683               	bsf	3,5	;RP0=1, select bank1
   940  02A9  1303               	bcf	3,6	;RP1=0, select bank1
   941  02AA  140C               	bsf	12,0	;volatile
   942  02AB                     l955:
   943                           
   944                           ;Main.c: 127:     ADIE = 1;
   945  02AB  170C               	bsf	12,6	;volatile
   946  02AC                     l957:
   947                           
   948                           ;Main.c: 130:     PORTA = 0;
   949  02AC  1283               	bcf	3,5	;RP0=0, select bank0
   950  02AD  1303               	bcf	3,6	;RP1=0, select bank0
   951  02AE  0185               	clrf	5	;volatile
   952  02AF                     l959:
   953                           
   954                           ;Main.c: 131:     PORTB = 0;
   955  02AF  0186               	clrf	6	;volatile
   956  02B0                     l961:
   957                           
   958                           ;Main.c: 132:     PORTC = 0;
   959  02B0  0187               	clrf	7	;volatile
   960  02B1                     l963:
   961                           
   962                           ;Main.c: 133:     PORTD = 0;
   963  02B1  0188               	clrf	8	;volatile
   964  02B2                     l965:
   965                           
   966                           ;Main.c: 134:     PORTE = 0;
   967  02B2  0189               	clrf	9	;volatile
   968  02B3                     l109:
   969  02B3  0008               	return
   970  02B4                     __end_of_setup:
   971                           
   972                           	psect	text2
   973  02B4                     __ptext2:	
   974 ;; *************** function _menu *****************
   975 ;; Defined at:
   976 ;;		line 145 in file "Main.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   990 ;;      Params:         0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0
   992 ;;      Temps:          0       2       0       0       0
   993 ;;      Totals:         0       2       0       0       0
   994 ;;Total ram usage:        2 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; Hardware stack levels required when called: 3
   997 ;; This function calls:
   998 ;;		_UART_write
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           
  1005                           ;psect for function _menu
  1006  02B4                     _menu:
  1007  02B4                     l967:	
  1008                           ;incstack = 0
  1009                           ; Regs used in _menu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1010                           
  1011                           
  1012                           ;Main.c: 146:     UART_write("\rInstrucciones para control de estado\r");
  1013  02B4  305F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1014  02B5  120A  118A  22DD  120A  118A  	fcall	_UART_write
  1015  02BA                     l969:
  1016                           
  1017                           ;Main.c: 147:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1018  02BA  3041               	movlw	65
  1019  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1020  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1021  02BD  00A9               	movwf	??_menu+1
  1022  02BE  30ED               	movlw	237
  1023  02BF  00A8               	movwf	??_menu
  1024  02C0                     u417:
  1025  02C0  0BA8               	decfsz	??_menu,f
  1026  02C1  2AC0               	goto	u417
  1027  02C2  0BA9               	decfsz	??_menu+1,f
  1028  02C3  2AC0               	goto	u417
  1029  02C4  2AC5               	nop2
  1030  02C5                     l971:
  1031                           
  1032                           ;Main.c: 148:     UART_write("S - Guardar Estado\rSPACE - Regresar a estado\r");
  1033  02C5  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1034  02C6  120A  118A  22DD  120A  118A  	fcall	_UART_write
  1035                           
  1036                           ;Main.c: 149:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1037  02CB  3041               	movlw	65
  1038  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1039  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1040  02CE  00A9               	movwf	??_menu+1
  1041  02CF  30ED               	movlw	237
  1042  02D0  00A8               	movwf	??_menu
  1043  02D1                     u427:
  1044  02D1  0BA8               	decfsz	??_menu,f
  1045  02D2  2AD1               	goto	u427
  1046  02D3  0BA9               	decfsz	??_menu+1,f
  1047  02D4  2AD1               	goto	u427
  1048  02D5  2AD6               	nop2
  1049  02D6                     l973:
  1050                           
  1051                           ;Main.c: 150:     UART_write("DEL - Elminar estado guardado");
  1052  02D6  3086               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1053  02D7  120A  118A  22DD  120A  118A  	fcall	_UART_write
  1054  02DC                     l121:
  1055  02DC  0008               	return
  1056  02DD                     __end_of_menu:
  1057                           
  1058                           	psect	text3
  1059  02DD                     __ptext3:	
  1060 ;; *************** function _UART_write *****************
  1061 ;; Defined at:
  1062 ;;		line 137 in file "Main.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  word            1    wreg     PTR unsigned char 
  1065 ;;		 -> STR_6(30), STR_5(46), STR_4(39), STR_3(48), 
  1066 ;;		 -> STR_2(22), STR_1(19), 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  word            1    7[BANK0 ] PTR unsigned char 
  1069 ;;		 -> STR_6(30), STR_5(46), STR_4(39), STR_3(48), 
  1070 ;;		 -> STR_2(22), STR_1(19), 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1080 ;;      Params:         0       0       0       0       0
  1081 ;;      Locals:         0       1       0       0       0
  1082 ;;      Temps:          0       1       0       0       0
  1083 ;;      Totals:         0       2       0       0       0
  1084 ;;Total ram usage:        2 bytes
  1085 ;; Hardware stack levels used: 1
  1086 ;; Hardware stack levels required when called: 2
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;;		_menu
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           
  1096                           ;psect for function _UART_write
  1097  02DD                     _UART_write:
  1098                           
  1099                           ;incstack = 0
  1100                           ; Regs used in _UART_write: [wreg-fsr0h+status,2+status,0+pclath]
  1101                           ;UART_write@word stored from wreg
  1102  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1103  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  1104  02DF  00A7               	movwf	UART_write@word
  1105  02E0                     l909:
  1106                           
  1107                           ;Main.c: 138:     while (*word != 0){
  1108  02E0  2AF5               	goto	l915
  1109  02E1                     l911:
  1110                           
  1111                           ;Main.c: 139:         TXREG = (*word);
  1112  02E1  0827               	movf	UART_write@word,w
  1113  02E2  0084               	movwf	4
  1114  02E3  120A  118A  212C  120A  118A  	fcall	stringdir
  1115  02E8  0099               	movwf	25	;volatile
  1116  02E9                     l114:	
  1117                           ;Main.c: 140:         while(!TXSTAbits.TRMT);
  1118                           
  1119  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  1120  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  1121  02EB  1C98               	btfss	24,1	;volatile
  1122  02EC  2AEE               	goto	u191
  1123  02ED  2AEF               	goto	u190
  1124  02EE                     u191:
  1125  02EE  2AE9               	goto	l114
  1126  02EF                     u190:
  1127  02EF                     l913:
  1128                           
  1129                           ;Main.c: 141:         word++;
  1130  02EF  3001               	movlw	1
  1131  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  1132  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  1133  02F2  00A6               	movwf	??_UART_write
  1134  02F3  0826               	movf	??_UART_write,w
  1135  02F4  07A7               	addwf	UART_write@word,f
  1136  02F5                     l915:
  1137                           
  1138                           ;Main.c: 138:     while (*word != 0){
  1139  02F5  0827               	movf	UART_write@word,w
  1140  02F6  0084               	movwf	4
  1141  02F7  120A  118A  212C  120A  118A  	fcall	stringdir
  1142  02FC  3A00               	xorlw	0
  1143  02FD  1D03               	skipz
  1144  02FE  2B00               	goto	u201
  1145  02FF  2B01               	goto	u200
  1146  0300                     u201:
  1147  0300  2AE1               	goto	l911
  1148  0301                     u200:
  1149  0301                     l118:
  1150  0301  0008               	return
  1151  0302                     __end_of_UART_write:
  1152                           
  1153                           	psect	text4
  1154  001F                     __ptext4:	
  1155 ;; *************** function _isr *****************
  1156 ;; Defined at:
  1157 ;;		line 169 in file "Main.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0, pclath, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1171 ;;      Params:         0       0       0       0       0
  1172 ;;      Locals:         0       0       0       0       0
  1173 ;;      Temps:          0       6       0       0       0
  1174 ;;      Totals:         0       6       0       0       0
  1175 ;;Total ram usage:        6 bytes
  1176 ;; Hardware stack levels used: 1
  1177 ;; Hardware stack levels required when called: 1
  1178 ;; This function calls:
  1179 ;;		_concat_bits
  1180 ;;		_delay_us
  1181 ;; This function is called by:
  1182 ;;		Interrupt level 1
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _isr
  1188  001F                     _isr:
  1189  001F                     i1l1025:
  1190                           
  1191                           ;Main.c: 171:     if (TMR1IF){
  1192  001F  1C0C               	btfss	12,0	;volatile
  1193  0020  2822               	goto	u27_21
  1194  0021  2823               	goto	u27_20
  1195  0022                     u27_21:
  1196  0022  2883               	goto	i1l135
  1197  0023                     u27_20:
  1198  0023                     i1l1027:
  1199                           
  1200                           ;Main.c: 172:         TMR1IF = 0;
  1201  0023  100C               	bcf	12,0	;volatile
  1202  0024                     i1l1029:
  1203                           
  1204                           ;Main.c: 173:         TMR1L = 0b11011111;
  1205  0024  30DF               	movlw	223
  1206  0025  008E               	movwf	14	;volatile
  1207                           
  1208                           ;Main.c: 174:         TMR1H = 0b10110001;
  1209  0026  30B1               	movlw	177
  1210  0027  008F               	movwf	15	;volatile
  1211  0028                     i1l1031:
  1212                           
  1213                           ;Main.c: 175:         RD0 = 1;
  1214  0028  1408               	bsf	8,0	;volatile
  1215  0029                     i1l1033:
  1216                           
  1217                           ;Main.c: 176:         delay_us(40+(pot0>>3));
  1218  0029  087D               	movf	_pot0+1,w
  1219  002A  00A1               	movwf	??_isr+1
  1220  002B  087C               	movf	_pot0,w
  1221  002C  00A0               	movwf	??_isr
  1222  002D  1003               	clrc
  1223  002E  0CA1               	rrf	??_isr+1,f
  1224  002F  0CA0               	rrf	??_isr,f
  1225  0030  1003               	clrc
  1226  0031  0CA1               	rrf	??_isr+1,f
  1227  0032  0CA0               	rrf	??_isr,f
  1228  0033  1003               	clrc
  1229  0034  0CA1               	rrf	??_isr+1,f
  1230  0035  0CA0               	rrf	??_isr,f
  1231  0036  0820               	movf	??_isr,w
  1232  0037  3E28               	addlw	40
  1233  0038  00F0               	movwf	delay_us@time
  1234  0039  0821               	movf	??_isr+1,w
  1235  003A  1803               	skipnc
  1236  003B  3E01               	addlw	1
  1237  003C  3E00               	addlw	0
  1238  003D  00F1               	movwf	delay_us@time+1
  1239  003E  120A  118A  2322  120A  118A  	fcall	_delay_us
  1240  0043                     i1l1035:
  1241                           
  1242                           ;Main.c: 177:         RD0 = 0;
  1243  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0045  1008               	bcf	8,0	;volatile
  1246  0046                     i1l1037:
  1247                           
  1248                           ;Main.c: 178:         RD1 = 1;
  1249  0046  1488               	bsf	8,1	;volatile
  1250  0047                     i1l1039:
  1251                           
  1252                           ;Main.c: 179:         delay_us(40+(pot1>>3));
  1253  0047  087B               	movf	_pot1+1,w
  1254  0048  00A1               	movwf	??_isr+1
  1255  0049  087A               	movf	_pot1,w
  1256  004A  00A0               	movwf	??_isr
  1257  004B  1003               	clrc
  1258  004C  0CA1               	rrf	??_isr+1,f
  1259  004D  0CA0               	rrf	??_isr,f
  1260  004E  1003               	clrc
  1261  004F  0CA1               	rrf	??_isr+1,f
  1262  0050  0CA0               	rrf	??_isr,f
  1263  0051  1003               	clrc
  1264  0052  0CA1               	rrf	??_isr+1,f
  1265  0053  0CA0               	rrf	??_isr,f
  1266  0054  0820               	movf	??_isr,w
  1267  0055  3E28               	addlw	40
  1268  0056  00F0               	movwf	delay_us@time
  1269  0057  0821               	movf	??_isr+1,w
  1270  0058  1803               	skipnc
  1271  0059  3E01               	addlw	1
  1272  005A  3E00               	addlw	0
  1273  005B  00F1               	movwf	delay_us@time+1
  1274  005C  120A  118A  2322  120A  118A  	fcall	_delay_us
  1275  0061                     i1l1041:
  1276                           
  1277                           ;Main.c: 180:         RD1 = 0;
  1278  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0063  1088               	bcf	8,1	;volatile
  1281  0064                     i1l1043:
  1282                           
  1283                           ;Main.c: 181:         RD2 = 1;
  1284  0064  1508               	bsf	8,2	;volatile
  1285  0065                     i1l1045:
  1286                           
  1287                           ;Main.c: 182:         delay_us(40+(pot2>>3));
  1288  0065  0830               	movf	_pot2+1,w
  1289  0066  00A1               	movwf	??_isr+1
  1290  0067  082F               	movf	_pot2,w
  1291  0068  00A0               	movwf	??_isr
  1292  0069  1003               	clrc
  1293  006A  0CA1               	rrf	??_isr+1,f
  1294  006B  0CA0               	rrf	??_isr,f
  1295  006C  1003               	clrc
  1296  006D  0CA1               	rrf	??_isr+1,f
  1297  006E  0CA0               	rrf	??_isr,f
  1298  006F  1003               	clrc
  1299  0070  0CA1               	rrf	??_isr+1,f
  1300  0071  0CA0               	rrf	??_isr,f
  1301  0072  0820               	movf	??_isr,w
  1302  0073  3E28               	addlw	40
  1303  0074  00F0               	movwf	delay_us@time
  1304  0075  0821               	movf	??_isr+1,w
  1305  0076  1803               	skipnc
  1306  0077  3E01               	addlw	1
  1307  0078  3E00               	addlw	0
  1308  0079  00F1               	movwf	delay_us@time+1
  1309  007A  120A  118A  2322  120A  118A  	fcall	_delay_us
  1310  007F                     i1l1047:
  1311                           
  1312                           ;Main.c: 183:         RD2 = 0;
  1313  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0080  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0081  1108               	bcf	8,2	;volatile
  1316                           
  1317                           ;Main.c: 184:     }
  1318  0082  2925               	goto	i1l145
  1319  0083                     i1l135:	
  1320                           ;Main.c: 185:     else if (ADIF==1){
  1321                           
  1322  0083  1F0C               	btfss	12,6	;volatile
  1323  0084  2886               	goto	u28_21
  1324  0085  2887               	goto	u28_20
  1325  0086                     u28_21:
  1326  0086  2925               	goto	i1l145
  1327  0087                     u28_20:
  1328  0087                     i1l1049:
  1329                           
  1330                           ;Main.c: 186:         if(CHS0==0 && CHS1==0) {
  1331  0087  191F               	btfsc	31,2	;volatile
  1332  0088  288A               	goto	u29_21
  1333  0089  288B               	goto	u29_20
  1334  008A                     u29_21:
  1335  008A  28AE               	goto	i1l138
  1336  008B                     u29_20:
  1337  008B                     i1l1051:
  1338  008B  199F               	btfsc	31,3	;volatile
  1339  008C  288E               	goto	u30_21
  1340  008D  288F               	goto	u30_20
  1341  008E                     u30_21:
  1342  008E  28AE               	goto	i1l138
  1343  008F                     u30_20:
  1344  008F                     i1l1053:
  1345                           
  1346                           ;Main.c: 187:             pot0 = concat_bits(ADRESH, ADRESL);
  1347  008F  081E               	movf	30,w	;volatile
  1348  0090  00A0               	movwf	??_isr
  1349  0091  01A1               	clrf	??_isr+1
  1350  0092  0820               	movf	??_isr,w
  1351  0093  00F0               	movwf	concat_bits@x
  1352  0094  0821               	movf	??_isr+1,w
  1353  0095  00F1               	movwf	concat_bits@x+1
  1354  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1355  0097  1303               	bcf	3,6	;RP1=0, select bank1
  1356  0098  081E               	movf	30,w	;volatile
  1357  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1358  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1359  009B  00A2               	movwf	??_isr+2
  1360  009C  01A3               	clrf	??_isr+3
  1361  009D  0822               	movf	??_isr+2,w
  1362  009E  00F2               	movwf	concat_bits@y
  1363  009F  0823               	movf	??_isr+3,w
  1364  00A0  00F3               	movwf	concat_bits@y+1
  1365  00A1  120A  118A  2302  120A  118A  	fcall	_concat_bits
  1366  00A6  0871               	movf	?_concat_bits+1,w
  1367  00A7  00FD               	movwf	_pot0+1
  1368  00A8  0870               	movf	?_concat_bits,w
  1369  00A9  00FC               	movwf	_pot0
  1370  00AA                     i1l1055:
  1371                           
  1372                           ;Main.c: 188:             CHS0 = 1;
  1373  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1374  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1375  00AC  151F               	bsf	31,2	;volatile
  1376                           
  1377                           ;Main.c: 190:         }
  1378  00AD  2924               	goto	i1l1079
  1379  00AE                     i1l138:	
  1380                           ;Main.c: 191:         else if(CHS0==1 && CHS1==0) {
  1381                           
  1382  00AE  1D1F               	btfss	31,2	;volatile
  1383  00AF  28B1               	goto	u31_21
  1384  00B0  28B2               	goto	u31_20
  1385  00B1                     u31_21:
  1386  00B1  28D6               	goto	i1l140
  1387  00B2                     u31_20:
  1388  00B2                     i1l1057:
  1389  00B2  199F               	btfsc	31,3	;volatile
  1390  00B3  28B5               	goto	u32_21
  1391  00B4  28B6               	goto	u32_20
  1392  00B5                     u32_21:
  1393  00B5  28D6               	goto	i1l140
  1394  00B6                     u32_20:
  1395  00B6                     i1l1059:
  1396                           
  1397                           ;Main.c: 192:             pot1 = concat_bits(ADRESH, ADRESL);
  1398  00B6  081E               	movf	30,w	;volatile
  1399  00B7  00A0               	movwf	??_isr
  1400  00B8  01A1               	clrf	??_isr+1
  1401  00B9  0820               	movf	??_isr,w
  1402  00BA  00F0               	movwf	concat_bits@x
  1403  00BB  0821               	movf	??_isr+1,w
  1404  00BC  00F1               	movwf	concat_bits@x+1
  1405  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1406  00BE  1303               	bcf	3,6	;RP1=0, select bank1
  1407  00BF  081E               	movf	30,w	;volatile
  1408  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1409  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1410  00C2  00A2               	movwf	??_isr+2
  1411  00C3  01A3               	clrf	??_isr+3
  1412  00C4  0822               	movf	??_isr+2,w
  1413  00C5  00F2               	movwf	concat_bits@y
  1414  00C6  0823               	movf	??_isr+3,w
  1415  00C7  00F3               	movwf	concat_bits@y+1
  1416  00C8  120A  118A  2302  120A  118A  	fcall	_concat_bits
  1417  00CD  0871               	movf	?_concat_bits+1,w
  1418  00CE  00FB               	movwf	_pot1+1
  1419  00CF  0870               	movf	?_concat_bits,w
  1420  00D0  00FA               	movwf	_pot1
  1421  00D1                     i1l1061:
  1422                           
  1423                           ;Main.c: 193:             CHS0 = 0;
  1424  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1425  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1426  00D3  111F               	bcf	31,2	;volatile
  1427  00D4                     i1l1063:
  1428                           
  1429                           ;Main.c: 194:             CHS1 = 1;
  1430  00D4  159F               	bsf	31,3	;volatile
  1431                           
  1432                           ;Main.c: 195:         }
  1433  00D5  2924               	goto	i1l1079
  1434  00D6                     i1l140:	
  1435                           ;Main.c: 196:         else if(CHS0==0 && CHS1==1) {
  1436                           
  1437  00D6  191F               	btfsc	31,2	;volatile
  1438  00D7  28D9               	goto	u33_21
  1439  00D8  28DA               	goto	u33_20
  1440  00D9                     u33_21:
  1441  00D9  28FC               	goto	i1l142
  1442  00DA                     u33_20:
  1443  00DA                     i1l1065:
  1444  00DA  1D9F               	btfss	31,3	;volatile
  1445  00DB  28DD               	goto	u34_21
  1446  00DC  28DE               	goto	u34_20
  1447  00DD                     u34_21:
  1448  00DD  28FC               	goto	i1l142
  1449  00DE                     u34_20:
  1450  00DE                     i1l1067:
  1451                           
  1452                           ;Main.c: 197:             pot2 = concat_bits(ADRESH, ADRESL);
  1453  00DE  081E               	movf	30,w	;volatile
  1454  00DF  00A0               	movwf	??_isr
  1455  00E0  01A1               	clrf	??_isr+1
  1456  00E1  0820               	movf	??_isr,w
  1457  00E2  00F0               	movwf	concat_bits@x
  1458  00E3  0821               	movf	??_isr+1,w
  1459  00E4  00F1               	movwf	concat_bits@x+1
  1460  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  1461  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  1462  00E7  081E               	movf	30,w	;volatile
  1463  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1464  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1465  00EA  00A2               	movwf	??_isr+2
  1466  00EB  01A3               	clrf	??_isr+3
  1467  00EC  0822               	movf	??_isr+2,w
  1468  00ED  00F2               	movwf	concat_bits@y
  1469  00EE  0823               	movf	??_isr+3,w
  1470  00EF  00F3               	movwf	concat_bits@y+1
  1471  00F0  120A  118A  2302  120A  118A  	fcall	_concat_bits
  1472  00F5  0871               	movf	?_concat_bits+1,w
  1473  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1474  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1475  00F8  00B0               	movwf	_pot2+1
  1476  00F9  0870               	movf	?_concat_bits,w
  1477  00FA  00AF               	movwf	_pot2
  1478  00FB  28AA               	goto	i1l1055
  1479  00FC                     i1l142:	
  1480                           ;Main.c: 200:         else if(CHS0==1 && CHS1==1) {
  1481                           
  1482  00FC  1D1F               	btfss	31,2	;volatile
  1483  00FD  28FF               	goto	u35_21
  1484  00FE  2900               	goto	u35_20
  1485  00FF                     u35_21:
  1486  00FF  2924               	goto	i1l141
  1487  0100                     u35_20:
  1488  0100                     i1l1071:
  1489  0100  1D9F               	btfss	31,3	;volatile
  1490  0101  2903               	goto	u36_21
  1491  0102  2904               	goto	u36_20
  1492  0103                     u36_21:
  1493  0103  2924               	goto	i1l141
  1494  0104                     u36_20:
  1495  0104                     i1l1073:
  1496                           
  1497                           ;Main.c: 201:             pot3 = concat_bits(ADRESH, ADRESL);
  1498  0104  081E               	movf	30,w	;volatile
  1499  0105  00A0               	movwf	??_isr
  1500  0106  01A1               	clrf	??_isr+1
  1501  0107  0820               	movf	??_isr,w
  1502  0108  00F0               	movwf	concat_bits@x
  1503  0109  0821               	movf	??_isr+1,w
  1504  010A  00F1               	movwf	concat_bits@x+1
  1505  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1506  010C  1303               	bcf	3,6	;RP1=0, select bank1
  1507  010D  081E               	movf	30,w	;volatile
  1508  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1509  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0110  00A2               	movwf	??_isr+2
  1511  0111  01A3               	clrf	??_isr+3
  1512  0112  0822               	movf	??_isr+2,w
  1513  0113  00F2               	movwf	concat_bits@y
  1514  0114  0823               	movf	??_isr+3,w
  1515  0115  00F3               	movwf	concat_bits@y+1
  1516  0116  120A  118A  2302  120A  118A  	fcall	_concat_bits
  1517  011B  0871               	movf	?_concat_bits+1,w
  1518  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1519  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1520  011E  00AE               	movwf	_pot3+1
  1521  011F  0870               	movf	?_concat_bits,w
  1522  0120  00AD               	movwf	_pot3
  1523  0121                     i1l1075:
  1524                           
  1525                           ;Main.c: 202:             CHS0 = 0;
  1526  0121  111F               	bcf	31,2	;volatile
  1527  0122                     i1l1077:
  1528                           
  1529                           ;Main.c: 203:             CHS1 = 0;
  1530  0122  119F               	bcf	31,3	;volatile
  1531  0123  2924               	goto	i1l1079
  1532  0124                     i1l141:
  1533  0124                     i1l1079:
  1534                           
  1535                           ;Main.c: 206:         ADIF = 0;
  1536  0124  130C               	bcf	12,6	;volatile
  1537  0125                     i1l145:
  1538  0125  0825               	movf	??_isr+5,w
  1539  0126  008A               	movwf	10
  1540  0127  0E24               	swapf	??_isr+4,w
  1541  0128  0083               	movwf	3
  1542  0129  0EFE               	swapf	btemp,f
  1543  012A  0E7E               	swapf	btemp,w
  1544  012B  0009               	retfie
  1545  012C                     __end_of_isr:
  1546                           
  1547                           	psect	intentry
  1548  0004                     __pintentry:	
  1549                           ;incstack = 0
  1550                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1551                           
  1552  0004                     interrupt_function:
  1553  007E                     saved_w	set	btemp
  1554  0004  00FE               	movwf	btemp
  1555  0005  0E03               	swapf	3,w
  1556  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0008  00A4               	movwf	??_isr+4
  1559  0009  080A               	movf	10,w
  1560  000A  00A5               	movwf	??_isr+5
  1561  000B  120A  118A  281F   	ljmp	_isr
  1562                           
  1563                           	psect	text5
  1564  0322                     __ptext5:	
  1565 ;; *************** function _delay_us *****************
  1566 ;; Defined at:
  1567 ;;		line 159 in file "Main.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  time            2    0[COMMON] unsigned int 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1581 ;;      Params:         2       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0
  1584 ;;      Totals:         2       0       0       0       0
  1585 ;;Total ram usage:        2 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_isr
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function _delay_us
  1596  0322                     _delay_us:
  1597  0322                     i1l983:	
  1598                           ;incstack = 0
  1599                           ; Regs used in _delay_us: [wreg+status,2+status,0]
  1600                           
  1601                           
  1602                           ;Main.c: 160:     while(time>0){
  1603  0322  2B2A               	goto	i1l989
  1604  0323                     i1l985:
  1605                           
  1606                           ;Main.c: 161:         time--;
  1607  0323  3001               	movlw	1
  1608  0324  02F0               	subwf	delay_us@time,f
  1609  0325  3000               	movlw	0
  1610  0326  1C03               	skipc
  1611  0327  03F1               	decf	delay_us@time+1,f
  1612  0328  02F1               	subwf	delay_us@time+1,f
  1613  0329                     i1l987:
  1614                           
  1615                           ;Main.c: 162:         _delay((unsigned long)((1)*(4000000/4000000.0)));
  1616  0329  0000               	nop
  1617  032A                     i1l989:
  1618                           
  1619                           ;Main.c: 160:     while(time>0){
  1620  032A  0870               	movf	delay_us@time,w
  1621  032B  0471               	iorwf	delay_us@time+1,w
  1622  032C  1D03               	btfss	3,2
  1623  032D  2B2F               	goto	u22_21
  1624  032E  2B30               	goto	u22_20
  1625  032F                     u22_21:
  1626  032F  2B23               	goto	i1l985
  1627  0330                     u22_20:
  1628  0330                     i1l130:
  1629  0330  0008               	return
  1630  0331                     __end_of_delay_us:
  1631                           
  1632                           	psect	text6
  1633  0302                     __ptext6:	
  1634 ;; *************** function _concat_bits *****************
  1635 ;; Defined at:
  1636 ;;		line 153 in file "Main.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  x               2    0[COMMON] unsigned int 
  1639 ;;  y               2    2[COMMON] unsigned int 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  z               2    8[COMMON] unsigned int 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  2    0[COMMON] unsigned int 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         4       0       0       0       0
  1652 ;;      Locals:         2       0       0       0       0
  1653 ;;      Temps:          4       0       0       0       0
  1654 ;;      Totals:        10       0       0       0       0
  1655 ;;Total ram usage:       10 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_isr
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           
  1665                           ;psect for function _concat_bits
  1666  0302                     _concat_bits:
  1667  0302                     i1l975:	
  1668                           ;incstack = 0
  1669                           ; Regs used in _concat_bits: [wreg+status,2+status,0]
  1670                           
  1671  0302                     i1l977:
  1672                           
  1673                           ;Main.c: 155:     z = (x<<2)|(y>>6);
  1674  0302  0873               	movf	concat_bits@y+1,w
  1675  0303  00F5               	movwf	??_concat_bits+1
  1676  0304  0872               	movf	concat_bits@y,w
  1677  0305  00F4               	movwf	??_concat_bits
  1678  0306  3006               	movlw	6
  1679  0307                     u21_25:
  1680  0307  1003               	clrc
  1681  0308  0CF5               	rrf	??_concat_bits+1,f
  1682  0309  0CF4               	rrf	??_concat_bits,f
  1683  030A  3EFF               	addlw	-1
  1684  030B  1D03               	skipz
  1685  030C  2B07               	goto	u21_25
  1686  030D  0871               	movf	concat_bits@x+1,w
  1687  030E  00F7               	movwf	??_concat_bits+3
  1688  030F  0870               	movf	concat_bits@x,w
  1689  0310  00F6               	movwf	??_concat_bits+2
  1690  0311  1003               	clrc
  1691  0312  0DF6               	rlf	??_concat_bits+2,f
  1692  0313  0DF7               	rlf	??_concat_bits+3,f
  1693  0314  1003               	clrc
  1694  0315  0DF6               	rlf	??_concat_bits+2,f
  1695  0316  0DF7               	rlf	??_concat_bits+3,f
  1696  0317  0874               	movf	??_concat_bits,w
  1697  0318  0476               	iorwf	??_concat_bits+2,w
  1698  0319  00F8               	movwf	concat_bits@z
  1699  031A  0875               	movf	??_concat_bits+1,w
  1700  031B  0477               	iorwf	??_concat_bits+3,w
  1701  031C  00F9               	movwf	concat_bits@z+1
  1702  031D                     i1l979:
  1703                           
  1704                           ;Main.c: 156:     return z;
  1705  031D  0879               	movf	concat_bits@z+1,w
  1706  031E  00F1               	movwf	?_concat_bits+1
  1707  031F  0878               	movf	concat_bits@z,w
  1708  0320  00F0               	movwf	?_concat_bits
  1709  0321                     i1l124:
  1710  0321  0008               	return
  1711  0322                     __end_of_concat_bits:
  1712  007E                     btemp	set	126	;btemp
  1713  007E                     wtemp0	set	126
  1714                           
  1715                           	psect	config
  1716                           
  1717                           ;Config register CONFIG1 @ 0x2007
  1718                           ;	Oscillator Selection bits
  1719                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1720                           ;	Watchdog Timer Enable bit
  1721                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1722                           ;	Power-up Timer Enable bit
  1723                           ;	PWRTE = OFF, PWRT disabled
  1724                           ;	RE3/MCLR pin function select bit
  1725                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1726                           ;	Code Protection bit
  1727                           ;	CP = OFF, Program memory code protection is disabled
  1728                           ;	Data Code Protection bit
  1729                           ;	CPD = OFF, Data memory code protection is disabled
  1730                           ;	Brown Out Reset Selection bits
  1731                           ;	BOREN = ON, BOR enabled
  1732                           ;	Internal External Switchover bit
  1733                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1734                           ;	Fail-Safe Clock Monitor Enabled bit
  1735                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1736                           ;	Low Voltage Programming Enable bit
  1737                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1738                           ;	In-Circuit Debugger Mode bit
  1739                           ;	DEBUG = 0x1, unprogrammed default
  1740  2007                     	org	8199
  1741  2007  3FF4               	dw	16372
  1742                           
  1743                           ;Config register CONFIG2 @ 0x2008
  1744                           ;	Brown-out Reset Selection bit
  1745                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1746                           ;	Flash Program Memory Self Write Enable bits
  1747                           ;	WRT = OFF, Write protection off
  1748  2008                     	org	8200
  1749  2008  3FFF               	dw	16383

Data Sizes:
    Strings     204
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     13      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_write@word	PTR unsigned char  size(1) Largest target is 48
		 -> STR_6(CODE[30]), STR_5(CODE[46]), STR_4(CODE[39]), STR_3(CODE[48]), 
		 -> STR_2(CODE[22]), STR_1(CODE[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_concat_bits

Critical Paths under _main in BANK0

    _main->_menu
    _menu->_UART_write

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     486
                                             10 BANK0      3     3      0
                         _UART_write
                               _menu
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0     243
                                              8 BANK0      2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           2     2      0     243
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  6     6      0     927
                                              0 BANK0      6     6      0
                        _concat_bits
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             2     0      2     251
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _concat_bits                                         10     6      4     676
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_write
   _menu
     _UART_write
   _setup

 _isr (ROOT)
   _concat_bits
   _delay_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      11       5       21.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 01 12:39:00 2021

                      pc 0002                       _GO 00F9                       fsr 0004  
                    l121 02DC                      l114 02E9                      l109 02B3  
                    l118 0301                      l911 02E1                      l913 02EF  
                    l921 027D                      l915 02F5                      l931 0287  
                    l923 0282                      l909 02E0                      l941 0296  
                    l933 0288                      l925 0284                      l917 0278  
                    l951 02A7                      l943 0299                      l935 028B  
                    l927 0285                      l919 027C                      l961 02B0  
                    l953 02A8                      l945 02A0                      l937 028E  
                    l929 0286                      l971 02C5                      l963 02B1  
                    l955 02AB                      l947 02A5                      l939 0291  
                    l973 02D6                      l965 02B2                      l957 02AC  
                    l949 02A6                      l967 02B4                      l959 02AF  
                    l991 01FE                      l969 02BA                      l993 0203  
                    l995 0208                      _GIE 005F                      l997 020B  
                    l999 0212                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      u200 0301                      u201 0300  
                    u230 0218                      u231 0217                      u240 021E  
                    u241 021D                      u250 023F                      u251 023E  
                    u260 0260                      u261 025F                      u190 02EF  
                    u191 02EE                      u407 026E                      u417 02C0  
                    u427 02D1                      u377 020F                      u387 022C  
                    u397 024D             concat_bits@x 0070             concat_bits@y 0072  
           concat_bits@z 0078                      _isr 001F                      fsr0 0004  
                   l1001 0218                     l1011 023F                     l1003 021E  
                   l1021 0266                     l1013 0245                     l1005 0224  
                   l1015 0253                     l1007 0232                     l1017 0258  
                   l1009 0237                     l1019 0260                     _ADIE 0466  
                   _ADIF 0066                     ?_isr 0070                     _CHS0 00FA  
                   _CHS1 00FB                     STR_1 01EB                     STR_2 01D5  
                   STR_3 0132                     STR_4 0190                     STR_5 0162  
                   STR_6 01B7                     _PEIE 005E                     _RCIF 0065  
                   _main 01FE                     _menu 02B4                     _pot0 007C  
                   _pot1 007A                     _pot2 002F                     _pot3 002D  
                   btemp 007E                     start 000E                    ??_isr 0020  
                  ?_main 0070                    ?_menu 0070                    _BRG16 0C3B  
                  _ANSEL 0188                    i1l130 0330                    i1l124 0321  
                  i1l140 00D6                    i1l141 0124                    i1l142 00FC  
                  i1l135 0083                    i1l145 0125                    i1l138 00AE  
                  i1l975 0302                    i1l983 0322                    i1l977 0302  
                  i1l985 0323                    i1l979 031D                    i1l987 0329  
                  i1l989 032A                    _RCREG 001A                    u21_25 0307  
                  u22_20 0330                    u30_20 008F                    u22_21 032F  
                  u30_21 008E                    u31_20 00B2                    u31_21 00B1  
                  u32_20 00B6                    u32_21 00B5                    u33_20 00DA  
                  u33_21 00D9                    _TMR1H 000F                    _TMR1L 000E  
                  u34_20 00DE                    u34_21 00DD                    _SPBRG 0099  
                  u35_20 0100                    u27_20 0023                    u35_21 00FF  
                  u27_21 0022                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u36_20 0104                    u28_20 0087                    u36_21 0103  
                  u28_21 0086                    u29_20 008B                    u29_21 008A  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _TXREG 0019  
            ?_UART_write 0070                    _setup 0278                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0278             __end_of_menu 02DD                   ??_main 002A  
                 ??_menu 0028                   _ADCON0 001F                   _ADRESH 001E  
                 _ADRESL 009E                   ?_setup 0070                   _ANSELH 0189  
                 i1l1031 0028                   i1l1041 0061                   i1l1033 0029  
                 i1l1025 001F                   i1l1051 008B                   i1l1043 0064  
                 i1l1035 0043                   i1l1027 0023                   i1l1061 00D1  
                 i1l1053 008F                   i1l1045 0065                   i1l1037 0046  
                 i1l1029 0024                   i1l1071 0100                   i1l1063 00D4  
                 i1l1055 00AA                   i1l1047 007F                   i1l1039 0047  
                 i1l1073 0104                   i1l1065 00DA                   i1l1057 00B2  
                 i1l1049 0087                   i1l1075 0121                   i1l1067 00DE  
                 i1l1059 00B6                   i1l1077 0122                   i1l1079 0124  
                 _TMR1IE 0460                   _TMR1IF 0060                   _SPBRGH 009A  
                 _TMR1ON 0080         __end_of_delay_us 0331     __size_of_concat_bits 0020  
    __size_of_UART_write 0025                   saved_w 007E  __end_of__initialization 001B  
         __pcstackCOMMON 0070            __end_of_setup 02B4                  ??_setup 0026  
             __pbssBANK0 002D               __pmaintext 01FE               __pintentry 0004  
              ?_delay_us 0070             ??_UART_write 0026               __stringtab 012C  
     __end_of_UART_write 0302                  __ptext1 0278                  __ptext2 02B4  
                __ptext3 02DD                  __ptext4 001F                  __ptext5 0322  
                __ptext6 0302             __size_of_isr 010D               ??_delay_us 0072  
   end_of_initialization 001B                _RCSTAbits 0018            ??_concat_bits 0074  
              _TXSTAbits 0098      start_initialization 0011              __end_of_isr 012C  
    __end_of_concat_bits 0322              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_delay_us 000F                __pstrings 012C  
         __size_of_setup 003C        interrupt_function 0004              _concat_bits 0302  
            __stringbase 0131               _ADCON1bits 009F           UART_write@word 0027  
           delay_us@time 0070       __end_of__stringtab 0132                 _delay_us 0322  
          __size_of_main 007A            __size_of_menu 0029                 intlevel1 0000  
              stringcode 012C                 stringdir 012C                 stringtab 012C  
             _UART_write 02DD             ?_concat_bits 0070  
