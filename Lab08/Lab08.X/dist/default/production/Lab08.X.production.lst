

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 20 12:16:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  001E                     _ADRESH	set	30
   211  0009                     _PORTE	set	9
   212  0007                     _PORTC	set	7
   213  0006                     _PORTB	set	6
   214  0005                     _PORTA	set	5
   215  0001                     _TMR0	set	1
   216  000B                     _INTCONbits	set	11
   217  001F                     _ADCON0	set	31
   218  0008                     _PORTD	set	8
   219  00FA                     _CHS0	set	250
   220  0066                     _ADIF	set	102
   221  005A                     _T0IF	set	90
   222  004A                     _RE2	set	74
   223  0049                     _RE1	set	73
   224  0048                     _RE0	set	72
   225  00F9                     _GO	set	249
   226  0081                     _OPTION_REGbits	set	129
   227  009F                     _ADCON1bits	set	159
   228  0089                     _TRISE	set	137
   229  0088                     _TRISD	set	136
   230  0087                     _TRISC	set	135
   231  0086                     _TRISB	set	134
   232  0085                     _TRISA	set	133
   233  0189                     _ANSELH	set	393
   234  0188                     _ANSEL	set	392
   235                           
   236                           	psect	cinit
   237  000F                     start_initialization:	
   238                           ; #config settings
   239                           
   240  000F                     __initialization:
   241                           
   242                           ; Clear objects allocated to BANK0
   243  000F  1283               	bcf	3,5	;RP0=0, select bank0
   244  0010  1303               	bcf	3,6	;RP1=0, select bank0
   245  0011  01B0               	clrf	__pbssBANK0& (0+127)
   246  0012  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   247  0013  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   248  0014  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   249  0015  01B4               	clrf	(__pbssBANK0+4)& (0+127)
   250  0016  01B5               	clrf	(__pbssBANK0+5)& (0+127)
   251  0017  01B6               	clrf	(__pbssBANK0+6)& (0+127)
   252  0018  01B7               	clrf	(__pbssBANK0+7)& (0+127)
   253  0019  01B8               	clrf	(__pbssBANK0+8)& (0+127)
   254  001A  01B9               	clrf	(__pbssBANK0+9)& (0+127)
   255  001B  01BA               	clrf	(__pbssBANK0+10)& (0+127)
   256  001C  01BB               	clrf	(__pbssBANK0+11)& (0+127)
   257  001D  01BC               	clrf	(__pbssBANK0+12)& (0+127)
   258  001E  01BD               	clrf	(__pbssBANK0+13)& (0+127)
   259  001F  01BE               	clrf	(__pbssBANK0+14)& (0+127)
   260  0020                     end_of_initialization:	
   261                           ;End of C runtime variable initialization code
   262                           
   263  0020                     __end_of__initialization:
   264  0020  0183               	clrf	3
   265  0021  120A  118A  28F6   	ljmp	_main	;jump to C main() function
   266                           
   267                           	psect	bssBANK0
   268  0030                     __pbssBANK0:
   269  0030                     _display:
   270  0030                     	ds	10
   271  003A                     _flag_7seg:
   272  003A                     	ds	1
   273  003B                     _pot2:
   274  003B                     	ds	1
   275  003C                     _unidad:
   276  003C                     	ds	1
   277  003D                     _decena:
   278  003D                     	ds	1
   279  003E                     _centena:
   280  003E                     	ds	1
   281                           
   282                           	psect	cstackCOMMON
   283  0070                     __pcstackCOMMON:
   284  0070                     ?_setup:
   285  0070                     ?_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_reset_timer0:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ??_reset_timer0:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_isr:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ??_isr:	
   298                           ; 1 bytes @ 0x0
   299                           
   300                           
   301                           ; 1 bytes @ 0x0
   302  0070                     	ds	3
   303  0073                     ??_setup:
   304  0073                     ?___bmul:	
   305                           ; 1 bytes @ 0x3
   306                           
   307  0073                     ?___wmul:	
   308                           ; 1 bytes @ 0x3
   309                           
   310  0073                     ___bmul@multiplicand:	
   311                           ; 2 bytes @ 0x3
   312                           
   313  0073                     ___wmul@multiplier:	
   314                           ; 1 bytes @ 0x3
   315                           
   316                           
   317                           ; 2 bytes @ 0x3
   318  0073                     	ds	1
   319  0074                     ??___bmul:
   320                           
   321                           ; 1 bytes @ 0x4
   322  0074                     	ds	1
   323  0075                     ___bmul@product:
   324  0075                     ___wmul@multiplicand:	
   325                           ; 1 bytes @ 0x5
   326                           
   327                           
   328                           ; 2 bytes @ 0x5
   329  0075                     	ds	1
   330  0076                     ___bmul@multiplier:
   331                           
   332                           ; 1 bytes @ 0x6
   333  0076                     	ds	1
   334  0077                     ??___wmul:
   335  0077                     ___wmul@product:	
   336                           ; 1 bytes @ 0x7
   337                           
   338                           
   339                           ; 2 bytes @ 0x7
   340  0077                     	ds	2
   341  0079                     ??___awdiv:
   342                           
   343                           ; 1 bytes @ 0x9
   344  0079                     	ds	1
   345  007A                     divide@a:
   346                           
   347                           ; 1 bytes @ 0xA
   348  007A                     	ds	1
   349                           
   350                           	psect	cstackBANK0
   351  0020                     __pcstackBANK0:
   352  0020                     ?___awdiv:
   353  0020                     ___awdiv@divisor:	
   354                           ; 2 bytes @ 0x0
   355                           
   356                           
   357                           ; 2 bytes @ 0x0
   358  0020                     	ds	2
   359  0022                     ___awdiv@dividend:
   360                           
   361                           ; 2 bytes @ 0x2
   362  0022                     	ds	2
   363  0024                     ___awdiv@counter:
   364                           
   365                           ; 1 bytes @ 0x4
   366  0024                     	ds	1
   367  0025                     ___awdiv@sign:
   368                           
   369                           ; 1 bytes @ 0x5
   370  0025                     	ds	1
   371  0026                     ___awdiv@quotient:
   372                           
   373                           ; 2 bytes @ 0x6
   374  0026                     	ds	2
   375  0028                     ?_divide:
   376  0028                     divide@b:	
   377                           ; 1 bytes @ 0x8
   378                           
   379                           
   380                           ; 1 bytes @ 0x8
   381  0028                     	ds	1
   382  0029                     divide@c:
   383                           
   384                           ; 1 bytes @ 0x9
   385  0029                     	ds	1
   386  002A                     ??_divide:
   387                           
   388                           ; 1 bytes @ 0xA
   389  002A                     	ds	4
   390  002E                     ??_main:
   391                           
   392                           ; 1 bytes @ 0xE
   393  002E                     	ds	2
   394                           
   395                           	psect	maintext
   396  00F6                     __pmaintext:	
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 58 in file "main.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : B00/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   416 ;;      Params:         0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0
   418 ;;      Temps:          0       2       0       0       0
   419 ;;      Totals:         0       2       0       0       0
   420 ;;Total ram usage:        2 bytes
   421 ;; Hardware stack levels required when called: 4
   422 ;; This function calls:
   423 ;;		_divide
   424 ;;		_setup
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           
   431                           ;psect for function _main
   432  00F6                     _main:
   433  00F6                     l1073:	
   434                           ;incstack = 0
   435                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   436                           
   437                           
   438                           ;main.c: 59:     setup();
   439  00F6  120A  118A  214A  120A  118A  	fcall	_setup
   440  00FB                     l1075:
   441                           
   442                           ;main.c: 61:         GO = 1;
   443  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   444  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   445  00FD  149F               	bsf	31,1	;volatile
   446  00FE                     l1077:
   447                           
   448                           ;main.c: 62:         divide(&centena, &decena, &unidad);
   449  00FE  303D               	movlw	(low (_decena| 0))& (0+255)
   450  00FF  00AE               	movwf	??_main
   451  0100  082E               	movf	??_main,w
   452  0101  00A8               	movwf	divide@b
   453  0102  303C               	movlw	(low (_unidad| 0))& (0+255)
   454  0103  00AF               	movwf	??_main+1
   455  0104  082F               	movf	??_main+1,w
   456  0105  00A9               	movwf	divide@c
   457  0106  303E               	movlw	(low (_centena| 0))& (0+255)
   458  0107  120A  118A  2024  120A  118A  	fcall	_divide
   459  010C                     l1079:
   460                           
   461                           ;main.c: 63:         _delay((unsigned long)((10)*(4000000/4000000.0)));
   462  010C  3002               	movlw	2
   463  010D  1283               	bcf	3,5	;RP0=0, select bank0
   464  010E  1303               	bcf	3,6	;RP1=0, select bank0
   465  010F  00AE               	movwf	??_main
   466  0110                     u437:
   467  0110  0BAE               	decfsz	??_main,f
   468  0111  2910               	goto	u437
   469  0112  0000               	nop
   470                           
   471                           ;main.c: 65:     switch(flag_7seg){
   472  0113  2932               	goto	l1101
   473  0114                     l75:	
   474                           ;main.c: 66:             case 0:
   475                           
   476                           
   477                           ;main.c: 67:                 RE0=0;
   478  0114  1009               	bcf	9,0	;volatile
   479  0115                     l1081:
   480                           
   481                           ;main.c: 68:                 PORTD=display[decena];
   482  0115  083D               	movf	_decena,w
   483  0116  3E30               	addlw	(low (_display| 0))& (0+255)
   484  0117  0084               	movwf	4
   485  0118  1383               	bcf	3,7	;select IRP bank0
   486  0119  0800               	movf	0,w
   487  011A  0088               	movwf	8	;volatile
   488  011B                     l1083:
   489                           
   490                           ;main.c: 69:                 RE1=1;
   491  011B  1489               	bsf	9,1	;volatile
   492  011C                     l1085:
   493                           
   494                           ;main.c: 70:                 RE2=0;
   495  011C  1109               	bcf	9,2	;volatile
   496                           
   497                           ;main.c: 71:                 break;
   498  011D  28FB               	goto	l1075
   499  011E                     l77:	
   500                           ;main.c: 73:             case 1:
   501                           
   502                           
   503                           ;main.c: 74:                 RE1=0;
   504  011E  1089               	bcf	9,1	;volatile
   505  011F                     l1087:
   506                           
   507                           ;main.c: 75:                 PORTD=display[unidad];
   508  011F  083C               	movf	_unidad,w
   509  0120  3E30               	addlw	(low (_display| 0))& (0+255)
   510  0121  0084               	movwf	4
   511  0122  1383               	bcf	3,7	;select IRP bank0
   512  0123  0800               	movf	0,w
   513  0124  0088               	movwf	8	;volatile
   514  0125                     l1089:
   515                           
   516                           ;main.c: 76:                 RE2=1;
   517  0125  1509               	bsf	9,2	;volatile
   518  0126                     l1091:
   519                           
   520                           ;main.c: 77:                 RE0=0;
   521  0126  1009               	bcf	9,0	;volatile
   522                           
   523                           ;main.c: 78:                 break;
   524  0127  28FB               	goto	l1075
   525  0128                     l78:	
   526                           ;main.c: 80:             case 2:
   527                           
   528                           
   529                           ;main.c: 81:                 RE2=0;
   530  0128  1109               	bcf	9,2	;volatile
   531  0129                     l1093:
   532                           
   533                           ;main.c: 82:                 PORTD=display[centena];
   534  0129  083E               	movf	_centena,w
   535  012A  3E30               	addlw	(low (_display| 0))& (0+255)
   536  012B  0084               	movwf	4
   537  012C  1383               	bcf	3,7	;select IRP bank0
   538  012D  0800               	movf	0,w
   539  012E  0088               	movwf	8	;volatile
   540  012F                     l1095:
   541                           
   542                           ;main.c: 83:                 RE0=1;
   543  012F  1409               	bsf	9,0	;volatile
   544  0130                     l1097:
   545                           
   546                           ;main.c: 84:                 RE1=0;
   547  0130  1089               	bcf	9,1	;volatile
   548                           
   549                           ;main.c: 85:                 break;
   550  0131  28FB               	goto	l1075
   551  0132                     l1101:
   552  0132  1283               	bcf	3,5	;RP0=0, select bank0
   553  0133  1303               	bcf	3,6	;RP1=0, select bank0
   554  0134  083A               	movf	_flag_7seg,w
   555  0135  00AE               	movwf	??_main
   556  0136  01AF               	clrf	??_main+1
   557                           
   558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   559                           ; Switch size 1, requested type "simple"
   560                           ; Number of cases is 1, Range of values is 0 to 0
   561                           ; switch strategies available:
   562                           ; Name         Instructions Cycles
   563                           ; simple_byte            4     3 (average)
   564                           ; direct_byte           11     8 (fixed)
   565                           ; jumptable            260     6 (fixed)
   566                           ;	Chosen strategy is simple_byte
   567  0137  082F               	movf	??_main+1,w
   568  0138  3A00               	xorlw	0	; case 0
   569  0139  1903               	skipnz
   570  013A  293C               	goto	l1153
   571  013B  28FB               	goto	l1075
   572  013C                     l1153:
   573                           
   574                           ; Switch size 1, requested type "simple"
   575                           ; Number of cases is 3, Range of values is 0 to 2
   576                           ; switch strategies available:
   577                           ; Name         Instructions Cycles
   578                           ; simple_byte           10     6 (average)
   579                           ; direct_byte           17     8 (fixed)
   580                           ; jumptable            260     6 (fixed)
   581                           ;	Chosen strategy is simple_byte
   582  013C  082E               	movf	??_main,w
   583  013D  3A00               	xorlw	0	; case 0
   584  013E  1903               	skipnz
   585  013F  2914               	goto	l75
   586  0140  3A01               	xorlw	1	; case 1
   587  0141  1903               	skipnz
   588  0142  291E               	goto	l77
   589  0143  3A03               	xorlw	3	; case 2
   590  0144  1903               	skipnz
   591  0145  2928               	goto	l78
   592  0146  28FB               	goto	l1075
   593  0147  120A  118A  280C   	ljmp	start
   594  014A                     __end_of_main:
   595                           
   596                           	psect	text1
   597  014A                     __ptext1:	
   598 ;; *************** function _setup *****************
   599 ;; Defined at:
   600 ;;		line 94 in file "main.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2, status,0
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0
   616 ;;      Temps:          1       0       0       0       0
   617 ;;      Totals:         1       0       0       0       0
   618 ;;Total ram usage:        1 bytes
   619 ;; Hardware stack levels used: 1
   620 ;; Hardware stack levels required when called: 2
   621 ;; This function calls:
   622 ;;		Nothing
   623 ;; This function is called by:
   624 ;;		_main
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           
   629                           ;psect for function _setup
   630  014A                     _setup:
   631  014A                     l995:	
   632                           ;incstack = 0
   633                           ; Regs used in _setup: [wreg+status,2+status,0]
   634                           
   635                           
   636                           ;main.c: 96:     ANSEL = 3;
   637  014A  3003               	movlw	3
   638  014B  1683               	bsf	3,5	;RP0=1, select bank3
   639  014C  1703               	bsf	3,6	;RP1=1, select bank3
   640  014D  0088               	movwf	8	;volatile
   641  014E                     l997:
   642                           
   643                           ;main.c: 97:     ANSELH = 0;
   644  014E  0189               	clrf	9	;volatile
   645  014F                     l999:
   646                           
   647                           ;main.c: 98:     TRISA = 3;
   648  014F  3003               	movlw	3
   649  0150  1683               	bsf	3,5	;RP0=1, select bank1
   650  0151  1303               	bcf	3,6	;RP1=0, select bank1
   651  0152  0085               	movwf	5	;volatile
   652                           
   653                           ;main.c: 99:     TRISB = 0;
   654  0153  0186               	clrf	6	;volatile
   655                           
   656                           ;main.c: 100:     TRISC = 0;
   657  0154  0187               	clrf	7	;volatile
   658                           
   659                           ;main.c: 101:     TRISD = 0;
   660  0155  0188               	clrf	8	;volatile
   661                           
   662                           ;main.c: 102:     TRISE = 0;
   663  0156  0189               	clrf	9	;volatile
   664  0157                     l1001:
   665                           
   666                           ;main.c: 105:     ADCON1bits.ADFM = 0;
   667  0157  139F               	bcf	31,7	;volatile
   668  0158                     l1003:
   669                           
   670                           ;main.c: 106:     ADCON0 = 0b01000001;
   671  0158  3041               	movlw	65
   672  0159  1283               	bcf	3,5	;RP0=0, select bank0
   673  015A  1303               	bcf	3,6	;RP1=0, select bank0
   674  015B  009F               	movwf	31	;volatile
   675  015C                     l1005:
   676                           
   677                           ;main.c: 109:     INTCONbits.GIE = 1;
   678  015C  178B               	bsf	11,7	;volatile
   679  015D                     l1007:
   680                           
   681                           ;main.c: 110:     INTCONbits.T0IF = 0;
   682  015D  110B               	bcf	11,2	;volatile
   683  015E                     l1009:
   684                           
   685                           ;main.c: 111:     INTCONbits.T0IE = 1;
   686  015E  168B               	bsf	11,5	;volatile
   687  015F                     l1011:
   688                           
   689                           ;main.c: 112:     INTCONbits.PEIE = 1;
   690  015F  170B               	bsf	11,6	;volatile
   691  0160                     l1013:
   692                           
   693                           ;main.c: 117:     INTCONbits.T0IF = 0;
   694  0160  110B               	bcf	11,2	;volatile
   695  0161                     l1015:
   696                           
   697                           ;main.c: 118:     TMR0 = 8;
   698  0161  3008               	movlw	8
   699  0162  0081               	movwf	1	;volatile
   700  0163                     l1017:
   701                           
   702                           ;main.c: 119:     OPTION_REGbits.T0CS = 0;
   703  0163  1683               	bsf	3,5	;RP0=1, select bank1
   704  0164  1303               	bcf	3,6	;RP1=0, select bank1
   705  0165  1281               	bcf	1,5	;volatile
   706  0166                     l1019:
   707                           
   708                           ;main.c: 120:     OPTION_REGbits.PS = 0;
   709  0166  30F8               	movlw	-8
   710  0167  0581               	andwf	1,f	;volatile
   711  0168                     l1021:
   712                           
   713                           ;main.c: 121:     OPTION_REGbits.PS0 = 0;
   714  0168  1001               	bcf	1,0	;volatile
   715  0169                     l1023:
   716                           
   717                           ;main.c: 122:     OPTION_REGbits.PS1 = 1;
   718  0169  1481               	bsf	1,1	;volatile
   719  016A                     l1025:
   720                           
   721                           ;main.c: 123:     OPTION_REGbits.PS2 = 1;
   722  016A  1501               	bsf	1,2	;volatile
   723  016B                     l1027:
   724                           
   725                           ;main.c: 126:     PORTA = 0;
   726  016B  1283               	bcf	3,5	;RP0=0, select bank0
   727  016C  1303               	bcf	3,6	;RP1=0, select bank0
   728  016D  0185               	clrf	5	;volatile
   729  016E                     l1029:
   730                           
   731                           ;main.c: 127:     PORTB = 0;
   732  016E  0186               	clrf	6	;volatile
   733  016F                     l1031:
   734                           
   735                           ;main.c: 128:     PORTC = 0;
   736  016F  0187               	clrf	7	;volatile
   737  0170                     l1033:
   738                           
   739                           ;main.c: 129:     PORTD = 0;
   740  0170  0188               	clrf	8	;volatile
   741  0171                     l1035:
   742                           
   743                           ;main.c: 130:     PORTE = 1;
   744  0171  3001               	movlw	1
   745  0172  0089               	movwf	9	;volatile
   746  0173                     l1037:
   747                           
   748                           ;main.c: 133:     display[0]=0b00111111;
   749  0173  303F               	movlw	63
   750  0174  00F3               	movwf	??_setup
   751  0175  0873               	movf	??_setup,w
   752  0176  00B0               	movwf	_display
   753  0177                     l1039:
   754                           
   755                           ;main.c: 134:     display[1]=0b00000110;
   756  0177  3006               	movlw	6
   757  0178  00F3               	movwf	??_setup
   758  0179  0873               	movf	??_setup,w
   759  017A  00B1               	movwf	_display+1
   760  017B                     l1041:
   761                           
   762                           ;main.c: 135:     display[2]=0b01011011;
   763  017B  305B               	movlw	91
   764  017C  00F3               	movwf	??_setup
   765  017D  0873               	movf	??_setup,w
   766  017E  00B2               	movwf	_display+2
   767  017F                     l1043:
   768                           
   769                           ;main.c: 136:     display[3]=0b01001111;
   770  017F  304F               	movlw	79
   771  0180  00F3               	movwf	??_setup
   772  0181  0873               	movf	??_setup,w
   773  0182  00B3               	movwf	_display+3
   774  0183                     l1045:
   775                           
   776                           ;main.c: 137:     display[4]=0b01100110;
   777  0183  3066               	movlw	102
   778  0184  00F3               	movwf	??_setup
   779  0185  0873               	movf	??_setup,w
   780  0186  00B4               	movwf	_display+4
   781  0187                     l1047:
   782                           
   783                           ;main.c: 138:     display[5]=0b01101101;
   784  0187  306D               	movlw	109
   785  0188  00F3               	movwf	??_setup
   786  0189  0873               	movf	??_setup,w
   787  018A  00B5               	movwf	_display+5
   788  018B                     l1049:
   789                           
   790                           ;main.c: 139:     display[6]=0b01111101;
   791  018B  307D               	movlw	125
   792  018C  00F3               	movwf	??_setup
   793  018D  0873               	movf	??_setup,w
   794  018E  00B6               	movwf	_display+6
   795  018F                     l1051:
   796                           
   797                           ;main.c: 140:     display[7]=0b00000111;
   798  018F  3007               	movlw	7
   799  0190  00F3               	movwf	??_setup
   800  0191  0873               	movf	??_setup,w
   801  0192  00B7               	movwf	_display+7
   802  0193                     l1053:
   803                           
   804                           ;main.c: 141:     display[8]=0b01111111;
   805  0193  307F               	movlw	127
   806  0194  00F3               	movwf	??_setup
   807  0195  0873               	movf	??_setup,w
   808  0196  00B8               	movwf	_display+8
   809  0197                     l1055:
   810                           
   811                           ;main.c: 142:     display[9]=0b01100111;
   812  0197  3067               	movlw	103
   813  0198  00F3               	movwf	??_setup
   814  0199  0873               	movf	??_setup,w
   815  019A  00B9               	movwf	_display+9
   816  019B                     l84:
   817  019B  0008               	return
   818  019C                     __end_of_setup:
   819                           
   820                           	psect	text2
   821  0024                     __ptext2:	
   822 ;; *************** function _divide *****************
   823 ;; Defined at:
   824 ;;		line 153 in file "main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  a               1    wreg     PTR unsigned char 
   827 ;;		 -> centena(1), 
   828 ;;  b               1    8[BANK0 ] PTR unsigned char 
   829 ;;		 -> decena(1), 
   830 ;;  c               1    9[BANK0 ] PTR unsigned char 
   831 ;;		 -> unidad(1), 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  a               1   10[COMMON] PTR unsigned char 
   834 ;;		 -> centena(1), 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       2       0       0       0
   845 ;;      Locals:         1       0       0       0       0
   846 ;;      Temps:          0       4       0       0       0
   847 ;;      Totals:         1       6       0       0       0
   848 ;;Total ram usage:        7 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; Hardware stack levels required when called: 3
   851 ;; This function calls:
   852 ;;		___awdiv
   853 ;;		___bmul
   854 ;;		___wmul
   855 ;; This function is called by:
   856 ;;		_main
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           
   861                           ;psect for function _divide
   862  0024                     _divide:
   863                           
   864                           ;incstack = 0
   865                           ; Regs used in _divide: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   866                           ;divide@a stored from wreg
   867  0024  00FA               	movwf	divide@a
   868  0025                     l1057:
   869                           
   870                           ;main.c: 154:     *a=pot2/100;
   871  0025  3064               	movlw	100
   872  0026  1283               	bcf	3,5	;RP0=0, select bank0
   873  0027  1303               	bcf	3,6	;RP1=0, select bank0
   874  0028  00A0               	movwf	___awdiv@divisor
   875  0029  3000               	movlw	0
   876  002A  00A1               	movwf	___awdiv@divisor+1
   877  002B  083B               	movf	_pot2,w
   878  002C  00AA               	movwf	??_divide
   879  002D  01AB               	clrf	??_divide+1
   880  002E  082A               	movf	??_divide,w
   881  002F  00A2               	movwf	___awdiv@dividend
   882  0030  082B               	movf	??_divide+1,w
   883  0031  00A3               	movwf	___awdiv@dividend+1
   884  0032  120A  118A  208D  120A  118A  	fcall	___awdiv
   885  0037  1283               	bcf	3,5	;RP0=0, select bank0
   886  0038  1303               	bcf	3,6	;RP1=0, select bank0
   887  0039  0820               	movf	?___awdiv,w
   888  003A  00AC               	movwf	??_divide+2
   889  003B  087A               	movf	divide@a,w
   890  003C  0084               	movwf	4
   891  003D  082C               	movf	??_divide+2,w
   892  003E  1383               	bcf	3,7	;select IRP bank0
   893  003F  0080               	movwf	0
   894                           
   895                           ;main.c: 155:     *b=(pot2-100*centena)/10;
   896  0040  300A               	movlw	10
   897  0041  00A0               	movwf	___awdiv@divisor
   898  0042  3000               	movlw	0
   899  0043  00A1               	movwf	___awdiv@divisor+1
   900  0044  083E               	movf	_centena,w
   901  0045  00AA               	movwf	??_divide
   902  0046  01AB               	clrf	??_divide+1
   903  0047  082A               	movf	??_divide,w
   904  0048  00F3               	movwf	___wmul@multiplier
   905  0049  082B               	movf	??_divide+1,w
   906  004A  00F4               	movwf	___wmul@multiplier+1
   907  004B  309C               	movlw	156
   908  004C  00F5               	movwf	___wmul@multiplicand
   909  004D  30FF               	movlw	255
   910  004E  00F6               	movwf	___wmul@multiplicand+1
   911  004F  120A  118A  21D2  120A  118A  	fcall	___wmul
   912  0054  1283               	bcf	3,5	;RP0=0, select bank0
   913  0055  1303               	bcf	3,6	;RP1=0, select bank0
   914  0056  083B               	movf	_pot2,w
   915  0057  0773               	addwf	?___wmul,w
   916  0058  00A2               	movwf	___awdiv@dividend
   917  0059  0874               	movf	?___wmul+1,w
   918  005A  1803               	skipnc
   919  005B  0A74               	incf	?___wmul+1,w
   920  005C  00A3               	movwf	___awdiv@dividend+1
   921  005D  120A  118A  208D  120A  118A  	fcall	___awdiv
   922  0062  1283               	bcf	3,5	;RP0=0, select bank0
   923  0063  1303               	bcf	3,6	;RP1=0, select bank0
   924  0064  0820               	movf	?___awdiv,w
   925  0065  00AC               	movwf	??_divide+2
   926  0066  0828               	movf	divide@b,w
   927  0067  0084               	movwf	4
   928  0068  082C               	movf	??_divide+2,w
   929  0069  1383               	bcf	3,7	;select IRP bank0
   930  006A  0080               	movwf	0
   931                           
   932                           ;main.c: 156:     *c=pot2-100*centena-10*decena;
   933  006B  309C               	movlw	156
   934  006C  00AA               	movwf	??_divide
   935  006D  082A               	movf	??_divide,w
   936  006E  00F3               	movwf	___bmul@multiplicand
   937  006F  083E               	movf	_centena,w
   938  0070  120A  118A  21F7  120A  118A  	fcall	___bmul
   939  0075  1283               	bcf	3,5	;RP0=0, select bank0
   940  0076  1303               	bcf	3,6	;RP1=0, select bank0
   941  0077  00AB               	movwf	??_divide+1
   942  0078  30F6               	movlw	246
   943  0079  00AC               	movwf	??_divide+2
   944  007A  082C               	movf	??_divide+2,w
   945  007B  00F3               	movwf	___bmul@multiplicand
   946  007C  083D               	movf	_decena,w
   947  007D  120A  118A  21F7  120A  118A  	fcall	___bmul
   948  0082  1283               	bcf	3,5	;RP0=0, select bank0
   949  0083  1303               	bcf	3,6	;RP1=0, select bank0
   950  0084  072B               	addwf	??_divide+1,w
   951  0085  073B               	addwf	_pot2,w
   952  0086  00AD               	movwf	??_divide+3
   953  0087  0829               	movf	divide@c,w
   954  0088  0084               	movwf	4
   955  0089  082D               	movf	??_divide+3,w
   956  008A  1383               	bcf	3,7	;select IRP bank0
   957  008B  0080               	movwf	0
   958  008C                     l90:
   959  008C  0008               	return
   960  008D                     __end_of_divide:
   961                           
   962                           	psect	text3
   963  01D2                     __ptext3:	
   964 ;; *************** function ___wmul *****************
   965 ;; Defined at:
   966 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  multiplier      2    3[COMMON] unsigned int 
   969 ;;  multiplicand    2    5[COMMON] unsigned int 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  product         2    7[COMMON] unsigned int 
   972 ;; Return value:  Size  Location     Type
   973 ;;                  2    3[COMMON] unsigned int 
   974 ;; Registers used:
   975 ;;		wreg, status,2, status,0
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   981 ;;      Params:         4       0       0       0       0
   982 ;;      Locals:         2       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0
   984 ;;      Totals:         6       0       0       0       0
   985 ;;Total ram usage:        6 bytes
   986 ;; Hardware stack levels used: 1
   987 ;; Hardware stack levels required when called: 2
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_divide
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           
   996                           ;psect for function ___wmul
   997  01D2                     ___wmul:
   998  01D2                     l923:	
   999                           ;incstack = 0
  1000                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1001                           
  1002  01D2  01F7               	clrf	___wmul@product
  1003  01D3  01F8               	clrf	___wmul@product+1
  1004  01D4                     l925:
  1005  01D4  1C73               	btfss	___wmul@multiplier,0
  1006  01D5  29D7               	goto	u221
  1007  01D6  29D8               	goto	u220
  1008  01D7                     u221:
  1009  01D7  29DE               	goto	l187
  1010  01D8                     u220:
  1011  01D8                     l927:
  1012  01D8  0875               	movf	___wmul@multiplicand,w
  1013  01D9  07F7               	addwf	___wmul@product,f
  1014  01DA  1803               	skipnc
  1015  01DB  0AF8               	incf	___wmul@product+1,f
  1016  01DC  0876               	movf	___wmul@multiplicand+1,w
  1017  01DD  07F8               	addwf	___wmul@product+1,f
  1018  01DE                     l187:
  1019  01DE  3001               	movlw	1
  1020  01DF                     u235:
  1021  01DF  1003               	clrc
  1022  01E0  0DF5               	rlf	___wmul@multiplicand,f
  1023  01E1  0DF6               	rlf	___wmul@multiplicand+1,f
  1024  01E2  3EFF               	addlw	-1
  1025  01E3  1D03               	skipz
  1026  01E4  29DF               	goto	u235
  1027  01E5                     l929:
  1028  01E5  3001               	movlw	1
  1029  01E6                     u245:
  1030  01E6  1003               	clrc
  1031  01E7  0CF4               	rrf	___wmul@multiplier+1,f
  1032  01E8  0CF3               	rrf	___wmul@multiplier,f
  1033  01E9  3EFF               	addlw	-1
  1034  01EA  1D03               	skipz
  1035  01EB  29E6               	goto	u245
  1036  01EC                     l931:
  1037  01EC  0873               	movf	___wmul@multiplier,w
  1038  01ED  0474               	iorwf	___wmul@multiplier+1,w
  1039  01EE  1D03               	btfss	3,2
  1040  01EF  29F1               	goto	u251
  1041  01F0  29F2               	goto	u250
  1042  01F1                     u251:
  1043  01F1  29D4               	goto	l925
  1044  01F2                     u250:
  1045  01F2                     l933:
  1046  01F2  0878               	movf	___wmul@product+1,w
  1047  01F3  00F4               	movwf	?___wmul+1
  1048  01F4  0877               	movf	___wmul@product,w
  1049  01F5  00F3               	movwf	?___wmul
  1050  01F6                     l189:
  1051  01F6  0008               	return
  1052  01F7                     __end_of___wmul:
  1053                           
  1054                           	psect	text4
  1055  01F7                     __ptext4:	
  1056 ;; *************** function ___bmul *****************
  1057 ;; Defined at:
  1058 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  multiplier      1    wreg     unsigned char 
  1061 ;;  multiplicand    1    3[COMMON] unsigned char 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  multiplier      1    6[COMMON] unsigned char 
  1064 ;;  product         1    5[COMMON] unsigned char 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      unsigned char 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         1       0       0       0       0
  1075 ;;      Locals:         2       0       0       0       0
  1076 ;;      Temps:          1       0       0       0       0
  1077 ;;      Totals:         4       0       0       0       0
  1078 ;;Total ram usage:        4 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 2
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_divide
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function ___bmul
  1090  01F7                     ___bmul:
  1091                           
  1092                           ;incstack = 0
  1093                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1094                           ;___bmul@multiplier stored from wreg
  1095  01F7  00F6               	movwf	___bmul@multiplier
  1096  01F8                     l937:
  1097  01F8  01F5               	clrf	___bmul@product
  1098  01F9                     l939:
  1099  01F9  1C76               	btfss	___bmul@multiplier,0
  1100  01FA  29FC               	goto	u261
  1101  01FB  29FD               	goto	u260
  1102  01FC                     u261:
  1103  01FC  2A01               	goto	l943
  1104  01FD                     u260:
  1105  01FD                     l941:
  1106  01FD  0873               	movf	___bmul@multiplicand,w
  1107  01FE  00F4               	movwf	??___bmul
  1108  01FF  0874               	movf	??___bmul,w
  1109  0200  07F5               	addwf	___bmul@product,f
  1110  0201                     l943:
  1111  0201  1003               	clrc
  1112  0202  0DF3               	rlf	___bmul@multiplicand,f
  1113  0203                     l945:
  1114  0203  1003               	clrc
  1115  0204  0CF6               	rrf	___bmul@multiplier,f
  1116  0205  0876               	movf	___bmul@multiplier,w
  1117  0206  1D03               	btfss	3,2
  1118  0207  2A09               	goto	u271
  1119  0208  2A0A               	goto	u270
  1120  0209                     u271:
  1121  0209  29F9               	goto	l939
  1122  020A                     u270:
  1123  020A                     l947:
  1124  020A  0875               	movf	___bmul@product,w
  1125  020B                     l213:
  1126  020B  0008               	return
  1127  020C                     __end_of___bmul:
  1128                           
  1129                           	psect	text5
  1130  008D                     __ptext5:	
  1131 ;; *************** function ___awdiv *****************
  1132 ;; Defined at:
  1133 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  divisor         2    0[BANK0 ] int 
  1136 ;;  dividend        2    2[BANK0 ] int 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  quotient        2    6[BANK0 ] int 
  1139 ;;  sign            1    5[BANK0 ] unsigned char 
  1140 ;;  counter         1    4[BANK0 ] unsigned char 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  2    0[BANK0 ] int 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       4       0       0       0
  1151 ;;      Locals:         0       4       0       0       0
  1152 ;;      Temps:          1       0       0       0       0
  1153 ;;      Totals:         1       8       0       0       0
  1154 ;;Total ram usage:        9 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; Hardware stack levels required when called: 2
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_divide
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function ___awdiv
  1166  008D                     ___awdiv:
  1167  008D                     l951:	
  1168                           ;incstack = 0
  1169                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1170                           
  1171  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1172  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1173  008F  01A5               	clrf	___awdiv@sign
  1174  0090                     l953:
  1175  0090  1FA1               	btfss	___awdiv@divisor+1,7
  1176  0091  2893               	goto	u281
  1177  0092  2894               	goto	u280
  1178  0093                     u281:
  1179  0093  289B               	goto	l959
  1180  0094                     u280:
  1181  0094                     l955:
  1182  0094  09A0               	comf	___awdiv@divisor,f
  1183  0095  09A1               	comf	___awdiv@divisor+1,f
  1184  0096  0AA0               	incf	___awdiv@divisor,f
  1185  0097  1903               	skipnz
  1186  0098  0AA1               	incf	___awdiv@divisor+1,f
  1187  0099                     l957:
  1188  0099  01A5               	clrf	___awdiv@sign
  1189  009A  0AA5               	incf	___awdiv@sign,f
  1190  009B                     l959:
  1191  009B  1FA3               	btfss	___awdiv@dividend+1,7
  1192  009C  289E               	goto	u291
  1193  009D  289F               	goto	u290
  1194  009E                     u291:
  1195  009E  28A8               	goto	l965
  1196  009F                     u290:
  1197  009F                     l961:
  1198  009F  09A2               	comf	___awdiv@dividend,f
  1199  00A0  09A3               	comf	___awdiv@dividend+1,f
  1200  00A1  0AA2               	incf	___awdiv@dividend,f
  1201  00A2  1903               	skipnz
  1202  00A3  0AA3               	incf	___awdiv@dividend+1,f
  1203  00A4                     l963:
  1204  00A4  3001               	movlw	1
  1205  00A5  00F9               	movwf	??___awdiv
  1206  00A6  0879               	movf	??___awdiv,w
  1207  00A7  06A5               	xorwf	___awdiv@sign,f
  1208  00A8                     l965:
  1209  00A8  01A6               	clrf	___awdiv@quotient
  1210  00A9  01A7               	clrf	___awdiv@quotient+1
  1211  00AA                     l967:
  1212  00AA  0820               	movf	___awdiv@divisor,w
  1213  00AB  0421               	iorwf	___awdiv@divisor+1,w
  1214  00AC  1903               	btfsc	3,2
  1215  00AD  28AF               	goto	u301
  1216  00AE  28B0               	goto	u300
  1217  00AF                     u301:
  1218  00AF  28E7               	goto	l987
  1219  00B0                     u300:
  1220  00B0                     l969:
  1221  00B0  01A4               	clrf	___awdiv@counter
  1222  00B1  0AA4               	incf	___awdiv@counter,f
  1223  00B2  28BE               	goto	l975
  1224  00B3                     l971:
  1225  00B3  3001               	movlw	1
  1226  00B4                     u315:
  1227  00B4  1003               	clrc
  1228  00B5  0DA0               	rlf	___awdiv@divisor,f
  1229  00B6  0DA1               	rlf	___awdiv@divisor+1,f
  1230  00B7  3EFF               	addlw	-1
  1231  00B8  1D03               	skipz
  1232  00B9  28B4               	goto	u315
  1233  00BA                     l973:
  1234  00BA  3001               	movlw	1
  1235  00BB  00F9               	movwf	??___awdiv
  1236  00BC  0879               	movf	??___awdiv,w
  1237  00BD  07A4               	addwf	___awdiv@counter,f
  1238  00BE                     l975:
  1239  00BE  1FA1               	btfss	___awdiv@divisor+1,7
  1240  00BF  28C1               	goto	u321
  1241  00C0  28C2               	goto	u320
  1242  00C1                     u321:
  1243  00C1  28B3               	goto	l971
  1244  00C2                     u320:
  1245  00C2                     l977:
  1246  00C2  3001               	movlw	1
  1247  00C3                     u335:
  1248  00C3  1003               	clrc
  1249  00C4  0DA6               	rlf	___awdiv@quotient,f
  1250  00C5  0DA7               	rlf	___awdiv@quotient+1,f
  1251  00C6  3EFF               	addlw	-1
  1252  00C7  1D03               	skipz
  1253  00C8  28C3               	goto	u335
  1254  00C9  0821               	movf	___awdiv@divisor+1,w
  1255  00CA  0223               	subwf	___awdiv@dividend+1,w
  1256  00CB  1D03               	skipz
  1257  00CC  28CF               	goto	u345
  1258  00CD  0820               	movf	___awdiv@divisor,w
  1259  00CE  0222               	subwf	___awdiv@dividend,w
  1260  00CF                     u345:
  1261  00CF  1C03               	skipc
  1262  00D0  28D2               	goto	u341
  1263  00D1  28D3               	goto	u340
  1264  00D2                     u341:
  1265  00D2  28DA               	goto	l983
  1266  00D3                     u340:
  1267  00D3                     l979:
  1268  00D3  0820               	movf	___awdiv@divisor,w
  1269  00D4  02A2               	subwf	___awdiv@dividend,f
  1270  00D5  0821               	movf	___awdiv@divisor+1,w
  1271  00D6  1C03               	skipc
  1272  00D7  03A3               	decf	___awdiv@dividend+1,f
  1273  00D8  02A3               	subwf	___awdiv@dividend+1,f
  1274  00D9                     l981:
  1275  00D9  1426               	bsf	___awdiv@quotient,0
  1276  00DA                     l983:
  1277  00DA  3001               	movlw	1
  1278  00DB                     u355:
  1279  00DB  1003               	clrc
  1280  00DC  0CA1               	rrf	___awdiv@divisor+1,f
  1281  00DD  0CA0               	rrf	___awdiv@divisor,f
  1282  00DE  3EFF               	addlw	-1
  1283  00DF  1D03               	skipz
  1284  00E0  28DB               	goto	u355
  1285  00E1                     l985:
  1286  00E1  3001               	movlw	1
  1287  00E2  02A4               	subwf	___awdiv@counter,f
  1288  00E3  1D03               	btfss	3,2
  1289  00E4  28E6               	goto	u361
  1290  00E5  28E7               	goto	u360
  1291  00E6                     u361:
  1292  00E6  28C2               	goto	l977
  1293  00E7                     u360:
  1294  00E7                     l987:
  1295  00E7  0825               	movf	___awdiv@sign,w
  1296  00E8  1903               	btfsc	3,2
  1297  00E9  28EB               	goto	u371
  1298  00EA  28EC               	goto	u370
  1299  00EB                     u371:
  1300  00EB  28F1               	goto	l991
  1301  00EC                     u370:
  1302  00EC                     l989:
  1303  00EC  09A6               	comf	___awdiv@quotient,f
  1304  00ED  09A7               	comf	___awdiv@quotient+1,f
  1305  00EE  0AA6               	incf	___awdiv@quotient,f
  1306  00EF  1903               	skipnz
  1307  00F0  0AA7               	incf	___awdiv@quotient+1,f
  1308  00F1                     l991:
  1309  00F1  0827               	movf	___awdiv@quotient+1,w
  1310  00F2  00A1               	movwf	?___awdiv+1
  1311  00F3  0826               	movf	___awdiv@quotient,w
  1312  00F4  00A0               	movwf	?___awdiv
  1313  00F5                     l340:
  1314  00F5  0008               	return
  1315  00F6                     __end_of___awdiv:
  1316                           
  1317                           	psect	text6
  1318  019C                     __ptext6:	
  1319 ;; *************** function _isr *****************
  1320 ;; Defined at:
  1321 ;;		line 164 in file "main.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0
  1337 ;;      Temps:          3       0       0       0       0
  1338 ;;      Totals:         3       0       0       0       0
  1339 ;;Total ram usage:        3 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 1
  1342 ;; This function calls:
  1343 ;;		_reset_timer0
  1344 ;; This function is called by:
  1345 ;;		Interrupt level 1
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function _isr
  1351  019C                     _isr:
  1352  019C                     i1l1107:
  1353                           
  1354                           ;main.c: 165:     if (T0IF==1){
  1355  019C  1D0B               	btfss	11,2	;volatile
  1356  019D  299F               	goto	u38_21
  1357  019E  29A0               	goto	u38_20
  1358  019F                     u38_21:
  1359  019F  29B3               	goto	i1l1119
  1360  01A0                     u38_20:
  1361  01A0                     i1l1109:
  1362                           
  1363                           ;main.c: 166:         reset_timer0();
  1364  01A0  120A  118A  220C  120A  118A  	fcall	_reset_timer0
  1365  01A5                     i1l1111:
  1366                           
  1367                           ;main.c: 167:         flag_7seg ++;
  1368  01A5  3001               	movlw	1
  1369  01A6  00F0               	movwf	??_isr
  1370  01A7  0870               	movf	??_isr,w
  1371  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1372  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1373  01AA  07BA               	addwf	_flag_7seg,f
  1374  01AB                     i1l1113:
  1375                           
  1376                           ;main.c: 168:         if (flag_7seg==3){
  1377  01AB  3003               	movlw	3
  1378  01AC  063A               	xorwf	_flag_7seg,w
  1379  01AD  1D03               	btfss	3,2
  1380  01AE  29B0               	goto	u39_21
  1381  01AF  29B1               	goto	u39_20
  1382  01B0                     u39_21:
  1383  01B0  29B2               	goto	i1l1117
  1384  01B1                     u39_20:
  1385  01B1                     i1l1115:
  1386                           
  1387                           ;main.c: 169:             flag_7seg=0;
  1388  01B1  01BA               	clrf	_flag_7seg
  1389  01B2                     i1l1117:
  1390                           
  1391                           ;main.c: 171:         T0IF = 0;
  1392  01B2  110B               	bcf	11,2	;volatile
  1393  01B3                     i1l1119:
  1394                           
  1395                           ;main.c: 173:     if (ADIF==1){
  1396  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1397  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1398  01B5  1F0C               	btfss	12,6	;volatile
  1399  01B6  29B8               	goto	u40_21
  1400  01B7  29B9               	goto	u40_20
  1401  01B8                     u40_21:
  1402  01B8  29CB               	goto	i1l101
  1403  01B9                     u40_20:
  1404  01B9                     i1l1121:
  1405                           
  1406                           ;main.c: 174:         if(CHS0==0) {
  1407  01B9  191F               	btfsc	31,2	;volatile
  1408  01BA  29BC               	goto	u41_21
  1409  01BB  29BD               	goto	u41_20
  1410  01BC                     u41_21:
  1411  01BC  29C1               	goto	i1l98
  1412  01BD                     u41_20:
  1413  01BD                     i1l1123:
  1414                           
  1415                           ;main.c: 175:             PORTC = ADRESH;
  1416  01BD  081E               	movf	30,w	;volatile
  1417  01BE  0087               	movwf	7	;volatile
  1418  01BF                     i1l1125:
  1419                           
  1420                           ;main.c: 176:             CHS0 = 1;
  1421  01BF  151F               	bsf	31,2	;volatile
  1422                           
  1423                           ;main.c: 177:         }
  1424  01C0  29CA               	goto	i1l1131
  1425  01C1                     i1l98:	
  1426                           ;main.c: 178:         else if(CHS0==1) {
  1427                           
  1428  01C1  1D1F               	btfss	31,2	;volatile
  1429  01C2  29C4               	goto	u42_21
  1430  01C3  29C5               	goto	u42_20
  1431  01C4                     u42_21:
  1432  01C4  29CA               	goto	i1l1131
  1433  01C5                     u42_20:
  1434  01C5                     i1l1127:
  1435                           
  1436                           ;main.c: 179:             pot2 = ADRESH;
  1437  01C5  081E               	movf	30,w	;volatile
  1438  01C6  00F0               	movwf	??_isr
  1439  01C7  0870               	movf	??_isr,w
  1440  01C8  00BB               	movwf	_pot2
  1441  01C9                     i1l1129:
  1442                           
  1443                           ;main.c: 180:             CHS0 = 0;
  1444  01C9  111F               	bcf	31,2	;volatile
  1445  01CA                     i1l1131:
  1446                           
  1447                           ;main.c: 182:         ADIF = 0;
  1448  01CA  130C               	bcf	12,6	;volatile
  1449  01CB                     i1l101:
  1450  01CB  0872               	movf	??_isr+2,w
  1451  01CC  008A               	movwf	10
  1452  01CD  0E71               	swapf	??_isr+1,w
  1453  01CE  0083               	movwf	3
  1454  01CF  0EFE               	swapf	btemp,f
  1455  01D0  0E7E               	swapf	btemp,w
  1456  01D1  0009               	retfie
  1457  01D2                     __end_of_isr:
  1458                           
  1459                           	psect	intentry
  1460  0004                     __pintentry:	
  1461                           ;incstack = 0
  1462                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1463                           
  1464  0004                     interrupt_function:
  1465  007E                     saved_w	set	btemp
  1466  0004  00FE               	movwf	btemp
  1467  0005  0E03               	swapf	3,w
  1468  0006  00F1               	movwf	??_isr+1
  1469  0007  080A               	movf	10,w
  1470  0008  00F2               	movwf	??_isr+2
  1471  0009  120A  118A  299C   	ljmp	_isr
  1472                           
  1473                           	psect	text7
  1474  020C                     __ptext7:	
  1475 ;; *************** function _reset_timer0 *****************
  1476 ;; Defined at:
  1477 ;;		line 144 in file "main.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, status,2, status,0
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1491 ;;      Params:         0       0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0
  1493 ;;      Temps:          0       0       0       0       0
  1494 ;;      Totals:         0       0       0       0       0
  1495 ;;Total ram usage:        0 bytes
  1496 ;; Hardware stack levels used: 1
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_isr
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           
  1505                           ;psect for function _reset_timer0
  1506  020C                     _reset_timer0:
  1507  020C                     i1l1059:	
  1508                           ;incstack = 0
  1509                           ; Regs used in _reset_timer0: [wreg+status,2+status,0]
  1510                           
  1511                           
  1512                           ;main.c: 145:     INTCONbits.T0IF = 0;
  1513  020C  110B               	bcf	11,2	;volatile
  1514  020D                     i1l1061:
  1515                           
  1516                           ;main.c: 146:     TMR0 = 8;
  1517  020D  3008               	movlw	8
  1518  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1519  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0210  0081               	movwf	1	;volatile
  1521  0211                     i1l1063:
  1522                           
  1523                           ;main.c: 147:     OPTION_REGbits.T0CS = 0;
  1524  0211  1683               	bsf	3,5	;RP0=1, select bank1
  1525  0212  1303               	bcf	3,6	;RP1=0, select bank1
  1526  0213  1281               	bcf	1,5	;volatile
  1527  0214                     i1l1065:
  1528                           
  1529                           ;main.c: 148:     OPTION_REGbits.PS = 0;
  1530  0214  30F8               	movlw	-8
  1531  0215  0581               	andwf	1,f	;volatile
  1532  0216                     i1l1067:
  1533                           
  1534                           ;main.c: 149:     OPTION_REGbits.PS0 = 0;
  1535  0216  1001               	bcf	1,0	;volatile
  1536  0217                     i1l1069:
  1537                           
  1538                           ;main.c: 150:     OPTION_REGbits.PS1 = 1;
  1539  0217  1481               	bsf	1,1	;volatile
  1540  0218                     i1l1071:
  1541                           
  1542                           ;main.c: 151:     OPTION_REGbits.PS2 = 1;
  1543  0218  1501               	bsf	1,2	;volatile
  1544  0219                     i1l87:
  1545  0219  0008               	return
  1546  021A                     __end_of_reset_timer0:
  1547  007E                     btemp	set	126	;btemp
  1548  007E                     wtemp0	set	126
  1549                           
  1550                           	psect	config
  1551                           
  1552                           ;Config register CONFIG1 @ 0x2007
  1553                           ;	Oscillator Selection bits
  1554                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1555                           ;	Watchdog Timer Enable bit
  1556                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1557                           ;	Power-up Timer Enable bit
  1558                           ;	PWRTE = OFF, PWRT disabled
  1559                           ;	RE3/MCLR pin function select bit
  1560                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1561                           ;	Code Protection bit
  1562                           ;	CP = OFF, Program memory code protection is disabled
  1563                           ;	Data Code Protection bit
  1564                           ;	CPD = OFF, Data memory code protection is disabled
  1565                           ;	Brown Out Reset Selection bits
  1566                           ;	BOREN = ON, BOR enabled
  1567                           ;	Internal External Switchover bit
  1568                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1569                           ;	Fail-Safe Clock Monitor Enabled bit
  1570                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1571                           ;	Low Voltage Programming Enable bit
  1572                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1573                           ;	In-Circuit Debugger Mode bit
  1574                           ;	DEBUG = 0x1, unprogrammed default
  1575  2007                     	org	8199
  1576  2007  3FF4               	dw	16372
  1577                           
  1578                           ;Config register CONFIG2 @ 0x2008
  1579                           ;	Brown-out Reset Selection bit
  1580                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1581                           ;	Flash Program Memory Self Write Enable bits
  1582                           ;	WRT = OFF, Write protection off
  1583  2008                     	org	8200
  1584  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     16      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divide@c	PTR unsigned char  size(1) Largest target is 1
		 -> unidad(BANK0[1]), 

    divide@b	PTR unsigned char  size(1) Largest target is 1
		 -> decena(BANK0[1]), 

    divide@a	PTR unsigned char  size(1) Largest target is 1
		 -> centena(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_divide
    _divide->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divide
    _divide->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1343
                                             14 BANK0      2     2      0
                             _divide
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _divide                                               7     5      2    1343
                                             10 COMMON     1     1      0
                                              8 BANK0      6     4      2
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                       _reset_timer0
 ---------------------------------------------------------------------------------
 (4) _reset_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _divide
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _setup

 _isr (ROOT)
   _reset_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 20 12:16:37 2021

         ___bmul@product 0075                       l90 008C                       l75 0114  
                     l84 019B                       l77 011E                       l78 0128  
                     _GO 00F9             ___awdiv@sign 0025      ___wmul@multiplicand 0075  
                    l213 020B                      l340 00F5                      l187 01DE  
                    l189 01F6                      l931 01EC                      l923 01D2  
                    l941 01FD                      l933 01F2                      l925 01D4  
                    l951 008D                      l943 0201                      l927 01D8  
                    l961 009F                      l953 0090                      l945 0203  
                    l937 01F8                      l929 01E5                      l971 00B3  
                    l963 00A4                      l955 0094                      l947 020A  
                    l939 01F9                      l981 00D9                      l973 00BA  
                    l965 00A8                      l957 0099                      l991 00F1  
                    l983 00DA                      l975 00BE                      l967 00AA  
                    l959 009B                      l985 00E1                      l977 00C2  
                    l969 00B0                      l979 00D3                      l987 00E7  
                    l995 014A                      l989 00EC                      l997 014E  
                    l999 014F                      _RE0 0048                      _RE1 0049  
                    _RE2 004A                      u300 00B0                      u220 01D8  
                    u301 00AF                      u221 01D7                      u320 00C2  
                    u321 00C1                      u250 01F2                      u315 00B4  
                    u251 01F1                      u235 01DF                      u340 00D3  
                    u260 01FD                      u341 00D2                      u261 01FC  
                    u245 01E6                      u270 020A                      u335 00C3  
                    u271 0209                      u360 00E7                      u280 0094  
                    u361 00E6                      u345 00CF                      u281 0093  
                    u370 00EC                      u290 009F                      u371 00EB  
                    u355 00DB                      u291 009E                      u437 0110  
                    _isr 019C                      fsr0 0004                      indf 0000  
                   l1001 0157                     l1011 015F                     l1003 0158  
                   l1021 0168                     l1013 0160                     l1005 015C  
                   l1101 0132                     l1031 016F                     l1023 0169  
                   l1015 0161                     l1007 015D                     l1041 017B  
                   l1033 0170                     l1025 016A                     l1017 0163  
                   l1009 015E                     l1051 018F                     l1043 017F  
                   l1035 0171                     l1027 016B                     l1019 0166  
                   l1053 0193                     l1045 0183                     l1037 0173  
                   l1029 016E                     l1055 0197                     l1047 0187  
                   l1039 0177                     l1057 0025                     l1049 018B  
                   l1153 013C                     l1081 0115                     l1073 00F6  
                   l1091 0126                     l1083 011B                     l1075 00FB  
                   l1093 0129                     l1085 011C                     l1077 00FE  
                   l1095 012F                     l1087 011F                     l1079 010C  
                   l1097 0130                     l1089 0125                     _ADIF 0066  
                   ?_isr 0070                     _CHS0 00FA                     _T0IF 005A  
                   i1l87 0219                     i1l98 01C1                     _TMR0 0001  
                   _main 00F6                     _pot2 003B                     btemp 007E  
                   start 000C        ___bmul@multiplier 0076                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 00F6                    _ANSEL 0188  
        ___awdiv@divisor 0020                    i1l101 01CB          ___awdiv@counter 0024  
                  u40_20 01B9                    u40_21 01B8                    u41_20 01BD  
                  u41_21 01BC                    u42_20 01C5                    u42_21 01C4  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u38_20 01A0  
                  u38_21 019F                    u39_20 01B1                    u39_21 01B0  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 014A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 014A                   ??_main 002E  
                 _ADCON0 001F                   _ADRESH 001E         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l1111 01A5  
                 i1l1121 01B9                   i1l1113 01AB                   i1l1131 01CA  
                 i1l1123 01BD                   i1l1115 01B1                   i1l1107 019C  
                 i1l1061 020D                   i1l1125 01BF                   i1l1117 01B2  
                 i1l1109 01A0                   i1l1071 0218                   i1l1063 0211  
                 i1l1127 01C5                   i1l1119 01B3                   i1l1065 0214  
                 i1l1129 01C9                   i1l1067 0216                   i1l1059 020C  
                 i1l1069 0217                   ___bmul 01F7                   ___wmul 01D2  
              ??___awdiv 0079                   _decena 003D                   _divide 0024  
       ___awdiv@quotient 0026                   _unidad 003C                   saved_w 007E  
__end_of__initialization 0020      ___bmul@multiplicand 0073           __pcstackCOMMON 0070  
          __end_of_setup 019C           _OPTION_REGbits 0081                  ??_setup 0073  
             __pbssBANK0 0030               __pmaintext 00F6                  ?___bmul 0073  
                ?___wmul 0073               __pintentry 0004                  ?_divide 0028  
          ?_reset_timer0 0070          __size_of___bmul 0015                  ___awdiv 008D  
        __size_of___wmul 0025          __size_of_divide 0069                  _centena 003E  
                __ptext1 014A                  __ptext2 0024                  __ptext3 01D2  
                __ptext4 01F7                  __ptext5 008D                  __ptext6 019C  
                __ptext7 020C                  _display 0030             __size_of_isr 0036  
                divide@a 007A                  divide@b 0028                  divide@c 0029  
   end_of_initialization 0020           ??_reset_timer0 0070           __end_of___bmul 020C  
         __end_of___wmul 01F7           __end_of_divide 008D      start_initialization 000F  
            __end_of_isr 01D2                 ??___bmul 0074                 ??___wmul 0077  
               ??_divide 002A     __end_of_reset_timer0 021A                ___latbits 0002  
          __pcstackBANK0 0020                _flag_7seg 003A                 ?___awdiv 0020  
         __size_of_setup 0052        interrupt_function 0004           ___wmul@product 0077  
             _ADCON1bits 009F        ___wmul@multiplier 0073         __size_of___awdiv 0069  
  __size_of_reset_timer0 000E            __size_of_main 0054             _reset_timer0 020C  
             _INTCONbits 000B                 intlevel1 0000  
